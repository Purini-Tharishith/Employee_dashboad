{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let ProfileComponent = class ProfileComponent {\n  constructor(formBuilder, http) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.formData = {\n      firstNamePlaceholder: '',\n      lastNamePlaceholder: '',\n      emailPlaceholder: JSON.parse(sessionStorage.getItem('key')).email,\n      phoneNumberPlaceholder: '',\n      departmentPlaceholder: ''\n    };\n  }\n  //{ value: '', disabled: true }\n  ngOnInit() {\n    this.profileForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: [],\n      email: ['', [Validators.required, Validators.email]],\n      address: [''],\n      department: ['', [Validators.required]],\n      gender: [],\n      skillname: [''],\n      phoneNumber: []\n    });\n    this.getProfile();\n  }\n  onSubmit() {\n    if (this.profileForm.invalid) {\n      return;\n    }\n    this.postProfile();\n    console.log(this.profileForm);\n  }\n  getProfile() {\n    this.id = JSON.parse(sessionStorage.getItem('key')).user_id;\n    console.log(this.id);\n    this.http.get('http://localhost:8081/api/user/' + this.id).subscribe(data => {\n      console.log(data);\n      this.profileData = data;\n      this.formData.departmentPlaceholder = this.profileData.department_name;\n      this.formData.firstNamePlaceholder = JSON.parse(sessionStorage.getItem('key')).firstName();\n      this.formData.lastNamePlaceholder = JSON.parse(sessionStorage.getItem('key')).lastName();\n      this.formData.emailPlaceholder = JSON.parse(sessionStorage.getItem('key')).email;\n      this.formData.phoneNumberPlaceholder = this.profileData.phone_no;\n    }, error => {\n      console.log(error);\n      this.isExist = false;\n    });\n  }\n  postProfile() {\n    let body = {\n      \"user_id\": JSON.parse(sessionStorage.getItem('key')).user_id,\n      \"department_name\": this.profileForm.value.department,\n      \"phoneNumber\": this.profileForm.value.phoneNumber,\n      \"gender\": this.profileForm.value.male,\n      \"skillId\": this.profileData.value.skills\n    };\n    this.http.post('http://localhost:8081/api/user/profile', body).subscribe(data => {\n      console.log(data);\n    });\n  }\n  addSkill() {\n    let skillbody = {\n      \"name\": this.profileForm.value.skillname\n    };\n    this.http.post('http://localhost:8081/api/skill/add', skillbody).subscribe(data => {\n      console.log(data);\n    });\n  }\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})], ProfileComponent);","map":{"version":3,"names":["Component","Validators","ProfileComponent","constructor","formBuilder","http","formData","firstNamePlaceholder","lastNamePlaceholder","emailPlaceholder","JSON","parse","sessionStorage","getItem","email","phoneNumberPlaceholder","departmentPlaceholder","ngOnInit","profileForm","group","firstName","required","lastName","address","department","gender","skillname","phoneNumber","getProfile","onSubmit","invalid","postProfile","console","log","id","user_id","get","subscribe","data","profileData","department_name","phone_no","error","isExist","body","value","male","skills","post","addSkill","skillbody","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit{\n  \n  constructor(private formBuilder: FormBuilder,private http : HttpClient){}\n  profileForm: FormGroup;\n  profileData : any; \n  isExist: boolean;\n  id:number;\n  newSkill:string;\n  userEmail:string;\n\n  //{ value: '', disabled: true }\n  ngOnInit(): void {\n  \n    this.profileForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: [],\n      email: ['', [Validators.required, Validators.email]],\n      address: [''],\n      department: ['', [Validators.required]],\n      gender: [],\n      skillname: [''],\n      phoneNumber: []\n    });\n     \n    this.getProfile();\n  }\n\n\n\n  onSubmit() {\n    if (this.profileForm.invalid) {\n      return;\n    }\n    this.postProfile();\n    \n    console.log(this.profileForm);\n  }\n  \n  public getProfile(){\n  \n    this.id = JSON.parse(sessionStorage.getItem('key')).user_id;\n    console.log(this.id);\n    this.http.get('http://localhost:8081/api/user/' +this.id)\n    .subscribe((data) => {\n      console.log(data);\n      this.profileData = data;\n      this.formData.departmentPlaceholder = this.profileData.department_name;\n      this.formData.firstNamePlaceholder = JSON.parse(sessionStorage.getItem('key')).firstName();\n      this.formData.lastNamePlaceholder = JSON.parse(sessionStorage.getItem('key')).lastName();\n      this.formData.emailPlaceholder = JSON.parse(sessionStorage.getItem('key')).email\n      this.formData.phoneNumberPlaceholder = this.profileData.phone_no;\n    },(error) =>{\n         console.log(error);\n         this.isExist=false;\n    });\n  }\n  formData = {\n    firstNamePlaceholder: '',\n    lastNamePlaceholder: '',\n    emailPlaceholder: JSON.parse(sessionStorage.getItem('key')).email,\n    phoneNumberPlaceholder: '',\n    departmentPlaceholder: '',\n  \n  };\n\n\n  public postProfile(){\n    let body = {\n      \"user_id\":JSON.parse(sessionStorage.getItem('key')).user_id,\n     \"department_name\":this.profileForm.value.department,\n     \"phoneNumber\":this.profileForm.value.phoneNumber,\n      \"gender\": this.profileForm.value.male,\n      \"skillId\": this.profileData.value.skills\n   };\n    this.http.post('http://localhost:8081/api/user/profile',body).subscribe((data)=>{\n      console.log(data);\n    })\n  }\n\n  addSkill() {\n     let skillbody ={\n          \"name\": this.profileForm.value.skillname\n     };\n     this.http.post('http://localhost:8081/api/skill/add',skillbody).subscribe((data)=>{\n      console.log(data);\n     })\n  }\n  \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}