{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./shared-data.service\";\nimport * as i3 from \"@angular/router\";\nexport class DataService {\n  constructor(http, shareddata, router) {\n    this.http = http;\n    this.shareddata = shareddata;\n    this.router = router;\n  }\n  ngOnInit() {}\n  fetchDataAndSaveToFile() {\n    const token = this.shareddata.getToken();\n    if (!token) {\n      this.router.navigateByUrl('/login');\n    }\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get('http://localhost:8083/api/project/1', {\n      headers,\n      responseType: 'blob'\n    });\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SharedDataService), i0.ɵɵinject(i3.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","DataService","constructor","http","shareddata","router","ngOnInit","fetchDataAndSaveToFile","token","getToken","navigateByUrl","headers","get","responseType","_","i0","ɵɵinject","i1","HttpClient","i2","SharedDataService","i3","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { saveAs } from 'file-saver';\nimport { SharedDataService } from './shared-data.service';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService implements OnInit{\n\n  constructor(private http: HttpClient,private shareddata : SharedDataService,private router : Router) { }\n  \n  ngOnInit(): void {\n      \n  }\n  fetchDataAndSaveToFile() {\n\n    const token = this.shareddata.getToken();\n    if (!token) {\n      this.router.navigateByUrl('/login')\n    }\n  \n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n \n    return this.http.get('http://localhost:8083/api/project/1', { headers, responseType: 'blob' })\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAO,sBAAsB;;;;;AAO7D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB,EAASC,UAA8B,EAASC,MAAe;IAA/E,KAAAF,IAAI,GAAJA,IAAI;IAAqB,KAAAC,UAAU,GAAVA,UAAU;IAA6B,KAAAC,MAAM,GAANA,MAAM;EAAa;EAEvGC,QAAQA,CAAA,GAER;EACAC,sBAAsBA,CAAA;IAEpB,MAAMC,KAAK,GAAG,IAAI,CAACJ,UAAU,CAACK,QAAQ,EAAE;IACxC,IAAI,CAACD,KAAK,EAAE;MACV,IAAI,CAACH,MAAM,CAACK,aAAa,CAAC,QAAQ,CAAC;;IAGrC,MAAMC,OAAO,GAAG,IAAIX,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUQ,KAAK;KACjC,CAAC;IAEF,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAC,qCAAqC,EAAE;MAAED,OAAO;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EAChG;EAAC,QAAAC,CAAA,G;qBAnBUb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}