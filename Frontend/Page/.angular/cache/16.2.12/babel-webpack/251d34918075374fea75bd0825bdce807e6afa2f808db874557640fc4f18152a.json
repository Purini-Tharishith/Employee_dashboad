{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../shared-data.service\";\nimport * as i3 from \"rxjs\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/sidenav\";\nimport * as i6 from \"../dashboard/dashboard.component\";\nimport * as i7 from \"../../../dashboard-component/header/header.component\";\nimport * as i8 from \"../../../dashboard-component/sidenav/sidenav.component\";\nexport class DashboardMainComponent {\n  constructor(http, sharedDataService, Observable) {\n    this.http = http;\n    this.sharedDataService = sharedDataService;\n    this.Observable = Observable;\n    this.sideBarOpen = true;\n    this.token = null;\n  }\n  ngOnInit() {\n    this.token = this.sharedDataService.getToken();\n  }\n  getData() {\n    const token = this.sharedDataService.getToken();\n    if (!token) {\n      throw new Error('Token not found');\n    }\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  getTasks() {\n    this.http.get('').subscribe(data => {\n      console.log(data);\n    });\n  }\n  sideBarToggler() {\n    this.sideBarOpen = !this.sideBarOpen;\n  }\n  static #_ = this.ɵfac = function DashboardMainComponent_Factory(t) {\n    return new (t || DashboardMainComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.SharedDataService), i0.ɵɵdirectiveInject(i3.Observable));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardMainComponent,\n    selectors: [[\"app-dashboard-main\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[\"mode\", \"side\", 3, \"opened\"], [3, \"toggleSidebarForMe\"]],\n    template: function DashboardMainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-drawer-container\")(1, \"mat-drawer\", 0);\n        i0.ɵɵelement(2, \"app-sidenav\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-drawer-content\")(4, \"app-header\", 1);\n        i0.ɵɵlistener(\"toggleSidebarForMe\", function DashboardMainComponent_Template_app_header_toggleSidebarForMe_4_listener() {\n          return ctx.sideBarToggler();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"app-dashboard\")(6, \"router-outlet\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"opened\", ctx.sideBarOpen);\n      }\n    },\n    dependencies: [i4.RouterOutlet, i5.MatDrawer, i5.MatDrawerContainer, i5.MatDrawerContent, i6.DashboardComponent, i7.HeaderComponent, i8.SidenavComponent],\n    styles: [\"[_nghost-%COMP%]{\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%;\\n  }\\n  mat-drawer[_ngcontent-%COMP%]{\\n    width: 260px;\\n    background-color: #0f172a;\\n  }\\n  mat-drawer-container[_ngcontent-%COMP%]{\\n    height: 100%;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQtY29tcG9uZW50cy9kYXNoYm9hcmQtbWFpbi9kYXNoYm9hcmQtbWFpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixZQUFZO0VBQ2Q7RUFDQTtJQUNFLFlBQVk7SUFDWix5QkFBeUI7RUFDM0I7RUFDQTtJQUNFLFlBQVk7RUFDZCIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0e1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG4gIG1hdC1kcmF3ZXJ7XHJcbiAgICB3aWR0aDogMjYwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGYxNzJhO1xyXG4gIH1cclxuICBtYXQtZHJhd2VyLWNvbnRhaW5lcntcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","DashboardMainComponent","constructor","http","sharedDataService","Observable","sideBarOpen","token","ngOnInit","getToken","getData","Error","headers","getTasks","get","subscribe","data","console","log","sideBarToggler","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","SharedDataService","i3","_2","selectors","decls","vars","consts","template","DashboardMainComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","DashboardMainComponent_Template_app_header_toggleSidebarForMe_4_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\dashboard-main\\dashboard-main.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\dashboard-main\\dashboard-main.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { SharedDataService } from '../../../shared-data.service';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-dashboard-main',\n  templateUrl: './dashboard-main.component.html',\n  styleUrls: ['./dashboard-main.component.css']\n})\nexport class DashboardMainComponent implements OnInit{\n  \n  sideBarOpen = true;\n  authtoken: any;\n  constructor(private http : HttpClient,private sharedDataService: SharedDataService,private Observable : Observable){}\n  token: string | null = null;\n  ngOnInit(): void {\n    this.token = this.sharedDataService.getToken();\n  }\n  \n\n  getData(): Observable<any> {\n    const token = this.sharedDataService.getToken();\n    if (!token) {\n      throw new Error('Token not found');\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  \n  public getTasks(){\n      this.http.get('').subscribe((data) =>{\n        console.log(data);\n      })\n  }\n  \n  public sideBarToggler()\n  {\n    this.sideBarOpen = !this.sideBarOpen;\n  }\n  \n}\n","<mat-drawer-container>\n    <mat-drawer mode=\"side\" [opened]=\"sideBarOpen\">\n      <app-sidenav></app-sidenav>\n    </mat-drawer>\n    <mat-drawer-content>\n      <app-header (toggleSidebarForMe)=\"sideBarToggler()\"></app-header>\n      <!-- <app-profile></app-profile> -->\n      <app-dashboard></app-dashboard>\n      <router-outlet></router-outlet>\n    </mat-drawer-content>\n  </mat-drawer-container>\n"],"mappings":"AACA,SAAoBA,WAAW,QAAQ,sBAAsB;;;;;;;;;;AAQ7D,OAAM,MAAOC,sBAAsB;EAIjCC,YAAoBC,IAAiB,EAASC,iBAAoC,EAASC,UAAuB;IAA9F,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAA4B,KAAAC,UAAU,GAAVA,UAAU;IAFrG,KAAAC,WAAW,GAAG,IAAI;IAGlB,KAAAC,KAAK,GAAkB,IAAI;EADyF;EAEpHC,QAAQA,CAAA;IACN,IAAI,CAACD,KAAK,GAAG,IAAI,CAACH,iBAAiB,CAACK,QAAQ,EAAE;EAChD;EAGAC,OAAOA,CAAA;IACL,MAAMH,KAAK,GAAG,IAAI,CAACH,iBAAiB,CAACK,QAAQ,EAAE;IAC/C,IAAI,CAACF,KAAK,EAAE;MACV,MAAM,IAAII,KAAK,CAAC,iBAAiB,CAAC;;IAGpC,MAAMC,OAAO,GAAG,IAAIZ,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUO,KAAK;KACjC,CAAC;EACJ;EAEOM,QAAQA,CAAA;IACX,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,EAAE,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;MACnCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACN;EAEOG,cAAcA,CAAA;IAEnB,IAAI,CAACb,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;EAAC,QAAAc,CAAA,G;qBA/BUnB,sBAAsB,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,iBAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAtB,UAAA;EAAA;EAAA,QAAAuB,EAAA,G;UAAtB3B,sBAAsB;IAAA4B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTnCd,EAAA,CAAAgB,cAAA,2BAAsB;QAEhBhB,EAAA,CAAAiB,SAAA,kBAA2B;QAC7BjB,EAAA,CAAAkB,YAAA,EAAa;QACblB,EAAA,CAAAgB,cAAA,yBAAoB;QACNhB,EAAA,CAAAmB,UAAA,gCAAAC,yEAAA;UAAA,OAAsBL,GAAA,CAAAjB,cAAA,EAAgB;QAAA,EAAC;QAACE,EAAA,CAAAkB,YAAA,EAAa;QAEjElB,EAAA,CAAAiB,SAAA,oBAA+B;QAEjCjB,EAAA,CAAAkB,YAAA,EAAqB;;;QARGlB,EAAA,CAAAqB,SAAA,GAAsB;QAAtBrB,EAAA,CAAAsB,UAAA,WAAAP,GAAA,CAAA9B,WAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}