{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { saveAs } from 'file-saver';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./shared-data.service\";\nimport * as i3 from \"@angular/router\";\nexport class DataService {\n  constructor(http, shareddata, router) {\n    this.http = http;\n    this.shareddata = shareddata;\n    this.router = router;\n  }\n  ngOnInit() {}\n  fetchDataAndSaveToFile() {\n    const token = this.shareddata.getToken();\n    if (!token) {\n      this.router.navigateByUrl('/login');\n    }\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.get('http://localhost:8083/api/project/1', {\n      headers,\n      responseType: 'blob'\n    }).subscribe(data => {\n      const blob = new Blob([data], {\n        type: 'application/json'\n      });\n      saveAs(blob, 'filename.json');\n    }, error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.SharedDataService), i0.ɵɵinject(i3.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","saveAs","DataService","constructor","http","shareddata","router","ngOnInit","fetchDataAndSaveToFile","token","getToken","navigateByUrl","headers","get","responseType","subscribe","data","blob","Blob","type","error","console","_","i0","ɵɵinject","i1","HttpClient","i2","SharedDataService","i3","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { saveAs } from 'file-saver';\nimport { SharedDataService } from './shared-data.service';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService implements OnInit{\n\n  constructor(private http: HttpClient,private shareddata : SharedDataService,private router : Router) { }\n  \n  ngOnInit(): void {\n      \n  }\n  fetchDataAndSaveToFile() {\n\n    const token = this.shareddata.getToken();\n    if (!token) {\n      this.router.navigateByUrl('/login')\n    }\n  \n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n \n    this.http.get('http://localhost:8083/api/project/1', { headers, responseType: 'blob' }).subscribe(\n      (data: Blob) => {\n        const blob = new Blob([data], { type: 'application/json' });\n        saveAs(blob, 'filename.json');\n      },\n      (error) => {\n        console.error('Error fetching data:', error);\n      }\n    );\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAO,sBAAsB;AAC7D,SAASC,MAAM,QAAQ,YAAY;;;;;AAMnC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB,EAASC,UAA8B,EAASC,MAAe;IAA/E,KAAAF,IAAI,GAAJA,IAAI;IAAqB,KAAAC,UAAU,GAAVA,UAAU;IAA6B,KAAAC,MAAM,GAANA,MAAM;EAAa;EAEvGC,QAAQA,CAAA,GAER;EACAC,sBAAsBA,CAAA;IAEpB,MAAMC,KAAK,GAAG,IAAI,CAACJ,UAAU,CAACK,QAAQ,EAAE;IACxC,IAAI,CAACD,KAAK,EAAE;MACV,IAAI,CAACH,MAAM,CAACK,aAAa,CAAC,QAAQ,CAAC;;IAGrC,MAAMC,OAAO,GAAG,IAAIZ,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUS,KAAK;KACjC,CAAC;IAEF,IAAI,CAACL,IAAI,CAACS,GAAG,CAAC,qCAAqC,EAAE;MAAED,OAAO;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CAC9FC,IAAU,IAAI;MACb,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,IAAI,CAAC,EAAE;QAAEG,IAAI,EAAE;MAAkB,CAAE,CAAC;MAC3DlB,MAAM,CAACgB,IAAI,EAAE,eAAe,CAAC;IAC/B,CAAC,EACAG,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBA3BUpB,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,iBAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX7B,WAAW;IAAA8B,OAAA,EAAX9B,WAAW,CAAA+B,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}