{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nexport let CreateprojectComponent = class CreateprojectComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.isCreated = false;\n    this.isUpdated = false;\n    this.allUsers = [];\n    this.allManagers = [];\n  }\n  ngOnInit() {\n    this.projectForm = this.fb.group({\n      name: [''],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      description: [''],\n      departmentName: ['']\n    });\n    // },{ validator: dateValidator });\n    this.updateprojectForm = this.fb.group({\n      name: [''],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      description: [''],\n      departmentName: [''],\n      Id: ['']\n    });\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.get('http://localhost:8082/api/admin/all', {\n      headers,\n      responseType: 'json'\n    }).subscribe({\n      next: data => {\n        this.allUsers = data;\n        this.allManagers.push(...data.filter(item => item.role === 'Manager'));\n      },\n      error: error => {\n        console.error('Error fetching data:', error);\n      }\n    });\n  }\n  onSubmit() {\n    // Handle form submission\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const email = JSON.parse(sessionStorage.getItem('key')).email;\n    console.log(this.projectForm.value);\n    console.log(email);\n    let body = {\n      \"name\": this.projectForm.value.name,\n      \"status\": this.projectForm.value.status,\n      \"assignedDate\": this.projectForm.value.assignDate,\n      \"completionDate\": this.projectForm.value.completionDate,\n      \"assignedTo\": this.projectForm.value.assignedTo,\n      \"assignedBy\": email,\n      \"description\": this.projectForm.value.description,\n      \"department_name\": this.projectForm.value.departmentName\n    };\n    console.log(body);\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8083/api/project/create', body, {\n      headers,\n      responseType: 'json'\n    }).subscribe(response => {\n      console.log(response);\n      this.isCreated = true;\n      setTimeout(() => {\n        this.isCreated = false;\n      }, 5000);\n    });\n  }\n  UpdateProject() {\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const email = JSON.parse(sessionStorage.getItem('key')).email;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    let body = {\n      \"name\": this.updateprojectForm.value.name,\n      \"status\": this.updateprojectForm.value.status,\n      \"assignedDate\": this.updateprojectForm.value.assignDate,\n      \"completionDate\": this.updateprojectForm.value.completionDate,\n      \"assignedTo\": this.updateprojectForm.value.assignedTo,\n      \"assignedBy\": email,\n      \"description\": this.updateprojectForm.value.description,\n      \"department_name\": this.updateprojectForm.value.departmentName\n    };\n    this.http.put('http://localhost:8083/api/project/details/' + this.updateprojectForm.value.Id, body, {\n      headers,\n      responseType: 'text'\n    }).subscribe(response => {\n      console.log(response);\n      this.isUpdated = true;\n      setTimeout(() => {\n        this.isUpdated = false;\n      }, 5000);\n    });\n  }\n};\nCreateprojectComponent = __decorate([Component({\n  selector: 'app-createproject',\n  templateUrl: './createproject.component.html',\n  styleUrls: ['./createproject.component.css']\n})], CreateprojectComponent);","map":{"version":3,"names":["Component","HttpHeaders","CreateprojectComponent","constructor","fb","http","isCreated","isUpdated","allUsers","allManagers","ngOnInit","projectForm","group","name","status","assignDate","completionDate","assignedTo","description","departmentName","updateprojectForm","Id","token","JSON","parse","sessionStorage","getItem","headers","get","responseType","subscribe","next","data","push","filter","item","role","error","console","onSubmit","email","log","value","body","post","response","setTimeout","UpdateProject","put","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\admin\\createproject\\createproject.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-createproject',\n  templateUrl: './createproject.component.html',\n  styleUrls: ['./createproject.component.css']\n})\nexport class CreateprojectComponent {\n   \n  projectForm: FormGroup;\n  isCreated= false;\n  isUpdated = false;\n  updateprojectForm:FormGroup;\n  allUsers:any[]=[];\n  allManagers:any[]=[];\n  constructor(private fb: FormBuilder,private http:HttpClient) {}\n\n  ngOnInit(): void {\n    this.projectForm = this.fb.group({\n        name: [''],\n        status: [''],\n        assignDate: [''],\n        completionDate: [''],\n        assignedTo: [''],\n      description:[''],\n      departmentName:['']\n    });\n  // },{ validator: dateValidator });\n\n  this.updateprojectForm = this.fb.group({\n    name: [''],\n    status: [''],\n    assignDate: [''],\n    completionDate: [''],\n    assignedTo: [''],\n   description:[''],\n   departmentName:[''],\n   Id:['']\n  })\n\n  const token = JSON.parse(sessionStorage.getItem('key')).token\n  const headers = new HttpHeaders({\n    'Authorization': `Bearer ${token}`\n  });\n\n  this.http.get('http://localhost:8082/api/admin/all', { headers, responseType: 'json' }).subscribe(\n   {next: \n    (data: any) => {\n      this.allUsers=data;\n      this.allManagers.push(...data.filter(item => item.role === 'Manager'));\n      \n    },\n    error:\n    (error) => {\n      console.error('Error fetching data:', error);\n    }\n   } );\n}\n\n  onSubmit() {\n    // Handle form submission\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const email = JSON.parse(sessionStorage.getItem('key')).email;\n    console.log(this.projectForm.value);\n    console.log(email);\n    let body={\n    \"name\": this.projectForm.value.name,\n    \"status\": this.projectForm.value.status,\n    \"assignedDate\": this.projectForm.value.assignDate,\n    \"completionDate\": this.projectForm.value.completionDate,\n    \"assignedTo\": this.projectForm.value.assignedTo,\n    \"assignedBy\": email,\n    \"description\":this.projectForm.value.description,\n    \"department_name\":this.projectForm.value.departmentName\n    };\n\n   console.log(body);\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8083/api/project/create',body, { headers, responseType: 'json' }).subscribe((response)=>{\n      console.log(response);\n      this.isCreated=true;\n      setTimeout(() => {\n        this.isCreated = false;\n      }, 5000); \n    })\n  \n  }\n  UpdateProject(){\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const email = JSON.parse(sessionStorage.getItem('key')).email;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    let body = {\n      \"name\": this.updateprojectForm.value.name,\n      \"status\": this.updateprojectForm.value.status,\n      \"assignedDate\": this.updateprojectForm.value.assignDate,\n      \"completionDate\": this.updateprojectForm.value.completionDate,\n      \"assignedTo\": this.updateprojectForm.value.assignedTo,\n      \"assignedBy\": email,\n      \"description\":this.updateprojectForm.value.description,\n      \"department_name\":this.updateprojectForm.value.departmentName\n    };\n    this.http.put('http://localhost:8083/api/project/details/'+this.updateprojectForm.value.Id,body,{headers,responseType:'text'}).subscribe((response)=>{\n      console.log(response);\n      this.isUpdated=true;\n      setTimeout(() => {\n        this.isUpdated = false;\n      }, 5000); \n    })\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}