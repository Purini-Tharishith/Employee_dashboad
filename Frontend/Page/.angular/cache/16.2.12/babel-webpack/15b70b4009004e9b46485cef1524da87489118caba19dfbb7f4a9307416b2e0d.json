{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AdminDashboardComponent } from './modules/admin/admin-dashboard/admin-dashboard.component';\nimport { ProfileComponent } from './components/dashboard-components/profile/profile.component';\nimport { DashboardMainComponent } from './components/dashboard-components/dashboard-main/dashboard-main.component';\nimport { DashboardComponent } from './components/dashboard-components/dashboard/dashboard.component';\nimport { ProjectsComponent } from './components/dashboard-components/projects/projects.component';\nimport { TasksComponent } from './components/dashboard-components/tasks/tasks.component';\nimport { preRouteGuard } from './pre-route.guard';\nimport { AllusersComponent } from './modules/admin/allusers/allusers.component';\nimport { NewmanagerComponent } from './modules/admin/newmanager/newmanager.component';\nimport { CreatetaskComponent } from './modules/manager/createtask/createtask.component';\nimport { ManagerDashboardComponent } from './modules/manager/manager-dashboard/manager-dashboard.component';\nimport { ManagerProjectsComponent } from './modules/manager/manager-projects/manager-projects.component';\nimport { ManagerProfileComponent } from './modules/manager/manager-profile/manager-profile.component';\nimport { CreateUserComponent } from './modules/manager/create-user/create-user.component';\nimport { DefaultDashboardComponent } from './modules/manager/default-dashboard/default-dashboard.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'home',\n  component: HomeComponent\n}, {\n  path: '',\n  redirectTo: '/home',\n  pathMatch: 'full'\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'allusers',\n  component: AllusersComponent\n}, {\n  path: 'dashboard',\n  component: DashboardMainComponent,\n  children: [{\n    path: '',\n    component: DashboardComponent\n  }, {\n    path: 'projects',\n    component: ProjectsComponent\n  }, {\n    path: 'profile',\n    component: ProfileComponent\n  }, {\n    path: 'tasks',\n    component: TasksComponent\n  }]\n}, {\n  path: 'admindashboard',\n  component: AdminDashboardComponent,\n  children: [{\n    path: 'allusers',\n    component: AllusersComponent\n  }, {\n    path: 'newmanager',\n    component: NewmanagerComponent\n  }]\n}, {\n  path: 'managerdashboard',\n  component: ManagerDashboardComponent,\n  children: [{\n    path: '',\n    component: DefaultDashboardComponent\n  }, {\n    path: 'createtasks',\n    component: CreatetaskComponent\n  }, {\n    path: 'manager-projects',\n    component: ManagerProjectsComponent\n  }, {\n    path: 'manager-profile',\n    component: ManagerProfileComponent\n  }, {\n    path: 'create-user',\n    component: CreateUserComponent\n  }]\n}\n// {path:'admin',\n// loadChildren:() => \n// import('./modules/admin/admin.module').then((m)=> m.AdminModule)}\n];\n\nexport class AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: 'PRE_ROUTE_GUARD',\n      useValue: preRouteGuard // Use the preRouteGuard function\n    }],\n\n    imports: [RouterModule.forRoot(routes), RouterModule]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","RegisterComponent","HomeComponent","LoginComponent","AdminDashboardComponent","ProfileComponent","DashboardMainComponent","DashboardComponent","ProjectsComponent","TasksComponent","preRouteGuard","AllusersComponent","NewmanagerComponent","CreatetaskComponent","ManagerDashboardComponent","ManagerProjectsComponent","ManagerProfileComponent","CreateUserComponent","DefaultDashboardComponent","routes","path","component","redirectTo","pathMatch","children","AppRoutingModule","_","_2","_3","provide","useValue","imports","forRoot","i1","exports"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule} from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AdminDashboardComponent } from './modules/admin/admin-dashboard/admin-dashboard.component';\nimport { ProfileComponent } from './components/dashboard-components/profile/profile.component';\nimport { DashboardMainComponent } from './components/dashboard-components/dashboard-main/dashboard-main.component';\nimport { DashboardComponent } from './components/dashboard-components/dashboard/dashboard.component';\nimport { ProjectsComponent } from './components/dashboard-components/projects/projects.component';\nimport { TasksComponent } from './components/dashboard-components/tasks/tasks.component';\nimport { preRouteGuard } from './pre-route.guard';\nimport { AllusersComponent } from './modules/admin/allusers/allusers.component';\nimport { NewmanagerComponent } from './modules/admin/newmanager/newmanager.component';\nimport { CreatetaskComponent } from './modules/manager/createtask/createtask.component';\nimport { ManagerDashboardComponent } from './modules/manager/manager-dashboard/manager-dashboard.component';\nimport { ManagerProjectsComponent } from './modules/manager/manager-projects/manager-projects.component';\nimport { ManagerProfileComponent } from './modules/manager/manager-profile/manager-profile.component';\nimport { CreateUserComponent } from './modules/manager/create-user/create-user.component';\nimport { DefaultDashboardComponent } from './modules/manager/default-dashboard/default-dashboard.component';\nconst routes: Routes = [\n  {path:'home',component:HomeComponent},\n  {path:'',redirectTo:'/home',pathMatch:'full'},\n  {path:'register',component:RegisterComponent},\n  {path:'login',component:LoginComponent},\n  {path :'allusers',component:AllusersComponent},\n  {\n    path:'dashboard',component:DashboardMainComponent,\n    children: [\n    { path: '', component:DashboardComponent},\n    { path: 'projects', component: ProjectsComponent },\n    { path: 'profile', component: ProfileComponent },\n    {path:'tasks',component:TasksComponent}\n    ]\n  },\n\n  {\n    path:'admindashboard',component:AdminDashboardComponent,\n    children: [\n    { path: 'allusers', component: AllusersComponent},\n    {path : 'newmanager',component:NewmanagerComponent},\n    ]\n  },\n\n  {\n    path:'managerdashboard',component:ManagerDashboardComponent,\n    children: [\n    {path:'',component:DefaultDashboardComponent},\n    {path:'createtasks',component:CreatetaskComponent},\n    {path:'manager-projects',component:ManagerProjectsComponent},\n    {path:'manager-profile',component:ManagerProfileComponent},\n    {path:'create-user',component:CreateUserComponent},\n    \n    ]\n  },\n  // {path:'admin',\n  // loadChildren:() => \n  // import('./modules/admin/admin.module').then((m)=> m.AdminModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [\n    {\n      provide: 'PRE_ROUTE_GUARD', // Provide a token for the guard\n      useValue: preRouteGuard // Use the preRouteGuard function\n    }\n  ] \n})\nexport class AppRoutingModule { }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}