{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProfileService {\n  constructor(http) {\n    this.http = http;\n    this.ProfileUrl = \"http://localhost:8081/api/user/profile\";\n    this.skillUrl = \"http://localhost:8081/api/skill/add\";\n    this.userEmail = JSON.parse(sessionStorage.getItem('key')).email;\n    this.user_id = JSON.parse(sessionStorage.getItem('key')).user_id;\n  }\n  getUserProfile() {\n    // Make HTTP request to check if user profile exists\n    return this.http.get(`${this.ProfileUrl}/${this.id}`);\n  }\n  addUserProfile(profileData) {\n    // Make HTTP request to add/update user profile\n    const data = JSON.stringify(profileData);\n    console.log(JSON.parse(data));\n    return this.http.post(`${this.ProfileUrl}`, JSON.parse(data), {\n      responseType: 'json'\n    });\n  }\n  addSkills(skill) {\n    return this.http.post(`${this.skillUrl}`, {\n      name: skill\n    }, {\n      responseType: 'json'\n    });\n  }\n  static #_ = this.ɵfac = function ProfileService_Factory(t) {\n    return new (t || ProfileService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProfileService,\n    factory: ProfileService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProfileService","constructor","http","ProfileUrl","skillUrl","userEmail","JSON","parse","sessionStorage","getItem","email","user_id","getUserProfile","get","id","addUserProfile","profileData","data","stringify","console","log","post","responseType","addSkills","skill","name","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\service\\profile.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n  ProfileUrl=\"http://localhost:8081/api/user/profile\";\n  skillUrl=\"http://localhost:8081/api/skill/add\";\n  jsonData:any;\n  userEmail=JSON.parse(sessionStorage.getItem('key')).email;\n  user_id=JSON.parse(sessionStorage.getItem('key')).user_id;\n  constructor(private http: HttpClient) {}\n  getUserProfile(): Observable<any> {\n    // Make HTTP request to check if user profile exists\n    return this.http.get<any>(`${this.ProfileUrl}/${this.id}`);\n  }\n  addUserProfile(profileData: any): Observable<any> {\n    // Make HTTP request to add/update user profile\n    const data=JSON.stringify(profileData);\n    console.log(JSON.parse(data));\n    return this.http.post<any>(`${this.ProfileUrl}`,JSON.parse(data),{responseType:'json'});\n  }\n  addSkills(skill:string){\n    return this.http.post<any>(`${this.skillUrl}`,{name:skill},{responseType:'json'});\n  }\n\n\n\n\n\n\n\n\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,cAAc;EAMzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALxB,KAAAC,UAAU,GAAC,wCAAwC;IACnD,KAAAC,QAAQ,GAAC,qCAAqC;IAE9C,KAAAC,SAAS,GAACC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAACC,KAAK;IACzD,KAAAC,OAAO,GAACL,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAACE,OAAO;EAClB;EACvCC,cAAcA,CAAA;IACZ;IACA,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAM,GAAG,IAAI,CAACV,UAAU,IAAI,IAAI,CAACW,EAAE,EAAE,CAAC;EAC5D;EACAC,cAAcA,CAACC,WAAgB;IAC7B;IACA,MAAMC,IAAI,GAACX,IAAI,CAACY,SAAS,CAACF,WAAW,CAAC;IACtCG,OAAO,CAACC,GAAG,CAACd,IAAI,CAACC,KAAK,CAACU,IAAI,CAAC,CAAC;IAC7B,OAAO,IAAI,CAACf,IAAI,CAACmB,IAAI,CAAM,GAAG,IAAI,CAAClB,UAAU,EAAE,EAACG,IAAI,CAACC,KAAK,CAACU,IAAI,CAAC,EAAC;MAACK,YAAY,EAAC;IAAM,CAAC,CAAC;EACzF;EACAC,SAASA,CAACC,KAAY;IACpB,OAAO,IAAI,CAACtB,IAAI,CAACmB,IAAI,CAAM,GAAG,IAAI,CAACjB,QAAQ,EAAE,EAAC;MAACqB,IAAI,EAACD;IAAK,CAAC,EAAC;MAACF,YAAY,EAAC;IAAM,CAAC,CAAC;EACnF;EAAC,QAAAI,CAAA,G;qBAnBU1B,cAAc,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd/B,cAAc;IAAAgC,OAAA,EAAdhC,cAAc,CAAAiC,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}