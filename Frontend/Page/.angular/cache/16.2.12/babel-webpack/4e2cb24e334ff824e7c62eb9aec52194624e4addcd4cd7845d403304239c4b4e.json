{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SharedDataService {\n  constructor() {\n    this.sharedDataSubject = new BehaviorSubject(null);\n    this.sharedData$ = this.sharedDataSubject.asObservable();\n  }\n  updateSharedData(data) {\n    this.sharedDataSubject.next(data);\n  }\n  static #_ = this.ɵfac = function SharedDataService_Factory(t) {\n    return new (t || SharedDataService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SharedDataService,\n    factory: SharedDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","SharedDataService","constructor","sharedDataSubject","sharedData$","asObservable","updateSharedData","data","next","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\shared-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedDataService {\n  private sharedDataSubject = new BehaviorSubject<any>(null);\n  sharedData$ = this.sharedDataSubject.asObservable();\n  constructor() { }\n  updateSharedData(data: any) {\n    this.sharedDataSubject.next(data);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,iBAAiB;EAG5BC,YAAA;IAFQ,KAAAC,iBAAiB,GAAG,IAAIH,eAAe,CAAM,IAAI,CAAC;IAC1D,KAAAI,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;EACnC;EAChBC,gBAAgBA,CAACC,IAAS;IACxB,IAAI,CAACJ,iBAAiB,CAACK,IAAI,CAACD,IAAI,CAAC;EACnC;EAAC,QAAAE,CAAA,G;qBANUR,iBAAiB;EAAA;EAAA,QAAAS,EAAA,G;WAAjBT,iBAAiB;IAAAU,OAAA,EAAjBV,iBAAiB,CAAAW,IAAA;IAAAC,UAAA,EAFhB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}