{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class UsertaskUpdateComponent {\n  constructor(http) {\n    this.http = http;\n    this.updateClicked = false;\n  }\n  ngOnInit() {}\n  updateTaskStatus() {\n    //  this.updateClicked = true;\n    console.log(\"i am printing taskId\");\n    console.log(this.taskId);\n    console.log(this.taskStatus);\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.put('http://localhost:8083/api/task/status/' + this.taskId, {\n      status: this.taskStatus\n    }, {\n      headers,\n      responseType: 'text'\n    }).subscribe(response => {\n      console.log(response);\n    });\n  }\n  static #_ = this.ɵfac = function UsertaskUpdateComponent_Factory(t) {\n    return new (t || UsertaskUpdateComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UsertaskUpdateComponent,\n    selectors: [[\"app-usertask-update\"]],\n    decls: 22,\n    vars: 2,\n    consts: [[1, \"status-form\"], [3, \"ngSubmit\"], [1, \"form-container\"], [1, \"task-id\"], [\"for\", \"taskId\"], [\"type\", \"number\", \"id\", \"taskId\", \"name\", \"taskId\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", \"name\", \"status\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"COMPLETED\"], [\"value\", \"IN_PROGRESS\"], [\"value\", \"ON_HOLD\"], [\"type\", \"submit\", 1, \"btn-class\"]],\n    template: function UsertaskUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UsertaskUpdateComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.updateProjectStatus();\n        });\n        i0.ɵɵelementStart(3, \"h3\");\n        i0.ɵɵtext(4, \"Project Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Project ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UsertaskUpdateComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.projectId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function UsertaskUpdateComponent_Template_select_ngModelChange_13_listener($event) {\n          return ctx.projectStatus = $event;\n        });\n        i0.ɵɵelementStart(14, \"option\", 8);\n        i0.ɵɵtext(15, \"COMPLETED\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 9);\n        i0.ɵɵtext(17, \"IN PROGRESS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 10);\n        i0.ɵɵtext(19, \"ON HOLD\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵtext(21, \"Update\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.projectId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.projectStatus);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\"form[_ngcontent-%COMP%] {\\n    width: 600px;\\n    margin: 100px;\\n    border: 1px solid #ccc;\\n    border-radius: 10px;\\n    box-shadow: 5px 5px 10px 10px #b7c9d4;\\n    height:200px\\n  }\\n  .form-container[_ngcontent-%COMP%]{\\n    display:flex;\\n    gap:125px;\\n    margin-top: 30px;\\n  }\\n  .task-id[_ngcontent-%COMP%]{\\n    margin-left: 50px;\\n   \\n  }\\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 5px;\\n    font-size: medium;\\n    font-weight: bold;\\n  }\\n  \\n  input[type=\\\"number\\\"][_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 8px;\\n    margin-bottom: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 10px 20px;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    margin-left: 250px;\\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n  }\\n  \\n  div[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQtY29tcG9uZW50cy91c2VydGFzay11cGRhdGUvdXNlcnRhc2stdXBkYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIscUNBQXFDO0lBQ3JDO0VBQ0Y7RUFDQTtJQUNFLFlBQVk7SUFDWixTQUFTO0lBQ1QsZ0JBQWdCO0VBQ2xCO0VBQ0E7SUFDRSxpQkFBaUI7O0VBRW5CO0VBQ0E7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixpQkFBaUI7RUFDbkI7O0VBRUE7O0lBRUUsV0FBVztJQUNYLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcclxuICAgIHdpZHRoOiA2MDBweDtcclxuICAgIG1hcmdpbjogMTAwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDVweCA1cHggMTBweCAxMHB4ICNiN2M5ZDQ7XHJcbiAgICBoZWlnaHQ6MjAwcHhcclxuICB9XHJcbiAgLmZvcm0tY29udGFpbmVye1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAgZ2FwOjEyNXB4O1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICB9XHJcbiAgLnRhc2staWR7XHJcbiAgICBtYXJnaW4tbGVmdDogNTBweDtcclxuICAgXHJcbiAgfVxyXG4gIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgZm9udC1zaXplOiBtZWRpdW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcbiAgaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcclxuICBzZWxlY3Qge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBtYXJnaW4tbGVmdDogMjUwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XHJcbiAgfVxyXG4gIFxyXG4gIGRpdiB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","UsertaskUpdateComponent","constructor","http","updateClicked","ngOnInit","updateTaskStatus","console","log","taskId","taskStatus","token","JSON","parse","sessionStorage","getItem","headers","put","status","responseType","subscribe","response","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","UsertaskUpdateComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UsertaskUpdateComponent_Template_form_ngSubmit_2_listener","updateProjectStatus","ɵɵtext","ɵɵelementEnd","UsertaskUpdateComponent_Template_input_ngModelChange_9_listener","$event","projectId","UsertaskUpdateComponent_Template_select_ngModelChange_13_listener","projectStatus","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\usertask-update\\usertask-update.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\usertask-update\\usertask-update.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\n@Component({\n  selector: 'app-usertask-update',\n  templateUrl: './usertask-update.component.html',\n  styleUrls: ['./usertask-update.component.css']\n})\nexport class UsertaskUpdateComponent implements OnInit {\n  updateClicked = false;\n  taskId:number;\n  taskStatus:string;\n  constructor(private http: HttpClient){}\n  ngOnInit(): void {\n  }\n  updateTaskStatus()\n  {  \n //  this.updateClicked = true;\n     console.log(\"i am printing taskId\");\n     console.log(this.taskId);\n     console.log(this.taskStatus);\n     const token = JSON.parse(sessionStorage.getItem('key')).token;\n     const headers = new HttpHeaders({\n       'Authorization': `Bearer ${token}`\n     });\n\n     this.http.put('http://localhost:8083/api/task/status/'+this.taskId ,{ status: this.taskStatus }, { headers,responseType:'text'}).subscribe((response)=>{\n      console.log(response);\n    })\n }\n}\n","<div>\n  <div class=\"status-form\">\n  <form (ngSubmit)=\"updateProjectStatus()\">\n    <h3>Project Status</h3>\n    <div class=\"form-container\">\n      <div class=\"task-id\">\n      <label for=\"taskId\">Project ID:</label>\n      <input type=\"number\" id=\"taskId\" name=\"taskId\" [(ngModel)]=\"projectId\">\n    </div>\n    <div>\n      <label for=\"status\">Status:</label>\n      <select id=\"status\" name=\"status\" [(ngModel)]=\"projectStatus\">\n        <option value=\"COMPLETED\">COMPLETED</option>\n        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n        <option value=\"ON_HOLD\">ON HOLD</option>\n      </select>\n    </div>\n  </div>\n    <button type=\"submit\" class=\"btn-class\">Update</button>\n  </form>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}