{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction CreatetaskComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r3.project_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r3.project_id);\n  }\n}\nfunction CreatetaskComponent_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r4.email);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r4.email);\n  }\n}\nfunction CreatetaskComponent_p_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Task is created successfully\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CreatetaskComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.isCreated = false;\n    this.projects = [];\n    this.allUsers = [];\n    this.allEmployee = [];\n  }\n  ngOnInit() {\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.taskForm = this.fb.group({\n      name: [''],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      projectId: ['']\n    });\n    this.isCreated = false;\n    this.http.get('http://localhost:8082/api/manager/all/users', {\n      headers,\n      responseType: 'json'\n    }).subscribe({\n      next: data => {\n        this.allEmployee = data;\n      },\n      error: error => {\n        console.error('Error fetching data:', error);\n      }\n    });\n    this.http.get('http://localhost:8083/api/project/all/projects', {\n      headers\n    }).subscribe(response => {\n      console.log(response);\n      this.projects = response;\n      //this.projectslength = response.length;\n    });\n  }\n\n  onSubmit() {\n    // Handle form submission\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const email = JSON.parse(sessionStorage.getItem('key')).email;\n    let body = {\n      \"name\": this.taskForm.value.name,\n      \"status\": this.taskForm.value.status,\n      \"assignedDate\": this.taskForm.value.assignDate,\n      \"completionDate\": this.taskForm.value.completionDate,\n      \"assignedTo\": this.taskForm.value.assignedTo,\n      \"assignedBy\": email,\n      \"projectId\": this.taskForm.value.projectId\n    };\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8083/api/task/create', body, {\n      headers,\n      responseType: 'json'\n    }).subscribe(response => {\n      console.log(response);\n      this.isCreated = true;\n      this.isCreated = true;\n      setTimeout(() => {\n        this.isCreated = false;\n      }, 3000);\n    });\n    console.log(this.taskForm.value);\n  }\n  static #_ = this.ɵfac = function CreatetaskComponent_Factory(t) {\n    return new (t || CreatetaskComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatetaskComponent,\n    selectors: [[\"app-createtask\"]],\n    decls: 46,\n    vars: 5,\n    consts: [[1, \"container-fluid\", \"page\"], [1, \"d-flex\", \"page__box\", \"p-3\", \"mt-2\"], [1, \"page__content\", \"shadow\", \"p-3\", \"position-relative\"], [1, \"page__content-data\"], [1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"task-container\"], [1, \"form-group\"], [\"for\", \"projectId\"], [\"id\", \"projectId\", \"name\", \"projectId\", \"formControlName\", \"projectId\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [1, \"form-group1\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\"], [\"value\", \"ON_HOLD\"], [\"value\", \"IN_PROGRESS\"], [\"value\", \"completed\"], [\"for\", \"assignedTo\"], [\"id\", \"assignedTo\", \"formControlName\", \"assignedTo\"], [\"for\", \"assignDate\"], [\"type\", \"date\", \"id\", \"assignDate\", \"formControlName\", \"assignDate\"], [\"for\", \"completionDate\"], [\"type\", \"date\", \"id\", \"completionDate\", \"formControlName\", \"completionDate\"], [\"type\", \"submit\"], [4, \"ngIf\"], [3, \"value\"]],\n    template: function CreatetaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Add Task to your Project\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function CreatetaskComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"h2\");\n        i0.ɵɵtext(9, \"Create Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Project ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CreatetaskComponent_Template_select_ngModelChange_13_listener($event) {\n          return ctx.selectedProjectId = $event;\n        });\n        i0.ɵɵelementStart(14, \"option\", 10);\n        i0.ɵɵtext(15, \"Select Project\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, CreatetaskComponent_option_16_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"label\", 12);\n        i0.ɵɵtext(18, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 14)(21, \"label\", 15);\n        i0.ɵɵtext(22, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"select\", 16)(24, \"option\", 17);\n        i0.ɵɵtext(25, \"ON_HOLD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"option\", 18);\n        i0.ɵɵtext(27, \"IN_PROGRESS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"option\", 19);\n        i0.ɵɵtext(29, \"COMPLETED\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"label\", 20);\n        i0.ɵɵtext(31, \"Assigned To:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"select\", 21)(33, \"option\", 10);\n        i0.ɵɵtext(34, \"Select Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(35, CreatetaskComponent_option_35_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"div\", 7)(37, \"label\", 22);\n        i0.ɵɵtext(38, \"Assign Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 23);\n        i0.ɵɵelementStart(40, \"label\", 24);\n        i0.ɵɵtext(41, \"Completion Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"input\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"button\", 26);\n        i0.ɵɵtext(44, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(45, CreatetaskComponent_p_45_Template, 2, 0, \"p\", 27);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedProjectId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allEmployee);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.isCreated);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n    margin-left: 50px;\\n    display: flex;\\n    gap: 20px;\\n    margin-top: 30px;\\n  }\\n\\n  .container[_ngcontent-%COMP%]{\\n    margin-top: 100px;\\n    margin-left: 50px;\\n  }\\n\\n  h2[_ngcontent-%COMP%]{\\n    margin-left: 250px;\\n    margin-top: 30px;\\n  }\\n\\n  .form-group1[_ngcontent-%COMP%]{\\n    margin-bottom: 20px;\\n    margin-left: 50px;\\n    margin-right: 40px;\\n    display: flex;\\n    gap: 32px;\\n    margin-top: 30px;\\n  }\\n\\n  .form-group1[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{\\n    margin-left: 0px;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    font-weight: bold;\\n  }\\n  \\n  .task-container[_ngcontent-%COMP%]{\\n    width: 650px;\\n    border: 1px solid black;\\n    border-radius: 5px;\\n    margin: 30px;\\n    margin-left: 200px;\\n    height: 400px;\\n    margin-top: 50px;\\n    box-shadow: 5px 5px 10px 10px #b7c9d4;\\n  }\\n\\n  button[_ngcontent-%COMP%] {\\n    margin-top: 30px;\\n    margin-left: 270px;\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 12px 20px;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\\n  \\n  button[_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n  }\\n.space-to-inputs[_ngcontent-%COMP%]{\\n   margin-left: 30px;\\n}\\n.page[_ngcontent-%COMP%] {\\n  color: white;\\n  padding: 0 1rem;\\n  background: #f1f5f9;\\n}\\n\\n.page__box[_ngcontent-%COMP%] {\\n  min-height: 120px;\\n  background: #1e293b;\\n  margin: 0 -1rem;\\n  font-size: 36px;\\n}\\n\\n.page__content[_ngcontent-%COMP%] {\\n  min-height: calc(100vh - 178px);\\n  \\n  margin-top: -2rem;\\n  background: white;\\n  color: black;\\n}\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9tYW5hZ2VyL2NyZWF0ZXRhc2svY3JlYXRldGFzay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsU0FBUztJQUNULGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLFNBQVM7SUFDVCxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxjQUFjO0lBQ2QsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsWUFBWTtJQUNaLHVCQUF1QjtJQUN2QixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLHFDQUFxQztFQUN2Qzs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCO0FBQ0Y7R0FDRyxpQkFBaUI7QUFDcEI7QUFDQTtFQUNFLFlBQVk7RUFDWixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLCtCQUErQjs7RUFFL0IsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixZQUFZO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDUwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZ2FwOiAyMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICB9XHJcblxyXG4gIC5jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tdG9wOiAxMDBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xyXG4gIH1cclxuXHJcbiAgaDJ7XHJcbiAgICBtYXJnaW4tbGVmdDogMjUwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gIH1cclxuXHJcbiAgLmZvcm0tZ3JvdXAxe1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGdhcDogMzJweDtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgfVxyXG5cclxuICAuZm9ybS1ncm91cDEgbGFiZWx7XHJcbiAgICBtYXJnaW4tbGVmdDogMHB4O1xyXG4gIH1cclxuICBcclxuICBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICBcclxuICAudGFzay1jb250YWluZXJ7XHJcbiAgICB3aWR0aDogNjUwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIG1hcmdpbjogMzBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAyMDBweDtcclxuICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgYm94LXNoYWRvdzogNXB4IDVweCAxMHB4IDEwcHggI2I3YzlkNDtcclxuICB9XHJcblxyXG4gIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDI3MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHBhZGRpbmc6IDEycHggMjBweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XHJcbiAgfVxyXG4uc3BhY2UtdG8taW5wdXRze1xyXG4gICBtYXJnaW4tbGVmdDogMzBweDtcclxufVxyXG4ucGFnZSB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDAgMXJlbTtcclxuICBiYWNrZ3JvdW5kOiAjZjFmNWY5O1xyXG59XHJcblxyXG4ucGFnZV9fYm94IHtcclxuICBtaW4taGVpZ2h0OiAxMjBweDtcclxuICBiYWNrZ3JvdW5kOiAjMWUyOTNiO1xyXG4gIG1hcmdpbjogMCAtMXJlbTtcclxuICBmb250LXNpemU6IDM2cHg7XHJcbn1cclxuXHJcbi5wYWdlX19jb250ZW50IHtcclxuICBtaW4taGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTc4cHgpO1xyXG4gIFxyXG4gIG1hcmdpbi10b3A6IC0ycmVtO1xyXG4gIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gIGNvbG9yOiBibGFjaztcclxufVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","project_r3","project_id","ɵɵadvance","ɵɵtextInterpolate","user_r4","email","CreatetaskComponent","constructor","fb","http","isCreated","projects","allUsers","allEmployee","ngOnInit","token","JSON","parse","sessionStorage","getItem","headers","taskForm","group","name","status","assignDate","completionDate","assignedTo","projectId","get","responseType","subscribe","next","data","error","console","response","log","onSubmit","body","value","post","setTimeout","_","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","_2","selectors","decls","vars","consts","template","CreatetaskComponent_Template","rf","ctx","ɵɵlistener","CreatetaskComponent_Template_form_ngSubmit_6_listener","CreatetaskComponent_Template_select_ngModelChange_13_listener","$event","selectedProjectId","ɵɵtemplate","CreatetaskComponent_option_16_Template","ɵɵelement","CreatetaskComponent_option_35_Template","CreatetaskComponent_p_45_Template"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\createtask\\createtask.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\createtask\\createtask.component.html"],"sourcesContent":["import { Component,OnInit  } from '@angular/core';\nimport { FormBuilder,  FormGroup,  Validators } from '@angular/forms';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-createtask',\n  templateUrl: './createtask.component.html',\n  styleUrls: ['./createtask.component.css']\n})\nexport class CreatetaskComponent implements OnInit {\n   \n  taskForm: FormGroup;\n  isCreated= false;\n  constructor(private fb: FormBuilder,private http:HttpClient) {}\n  projects:any[]=[];\n  allUsers:any[]=[];\n  allEmployee:any[]=[];\n  selectedProjectId: number;\n  ngOnInit(): void {\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.taskForm = this.fb.group({\n      name: ['' ],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      projectId: ['']\n    });\n    this.isCreated=false;\n   \n  \n      this.http.get('http://localhost:8082/api/manager/all/users', { headers, responseType: 'json' }).subscribe(\n       {next: \n        (data: any) => {\n          this.allEmployee=data;\n          \n        },\n        error:\n        (error) => {\n          console.error('Error fetching data:', error);\n        }\n       } );\n\n\n    this.http.get<any[]>('http://localhost:8083/api/project/all/projects',{headers}).subscribe((response)=>{\n        console.log(response);\n        this.projects = response;\n        //this.projectslength = response.length;\n      })\n  }\n\n  onSubmit() {\n    // Handle form submission\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const email = JSON.parse(sessionStorage.getItem('key')).email;\n\n    let body={\n    \"name\": this.taskForm.value.name,\n    \"status\": this.taskForm.value.status,\n    \"assignedDate\": this.taskForm.value.assignDate,\n    \"completionDate\": this.taskForm.value.completionDate,\n    \"assignedTo\": this.taskForm.value.assignedTo,\n    \"assignedBy\": email,\n    \"projectId\": this.taskForm.value.projectId\n    };\n\n   \n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8083/api/task/create',body, { headers, responseType: 'json' }).subscribe((response)=>{\n      console.log(response);\n      this.isCreated = true;\n      this.isCreated=true;\n      setTimeout(() => {\n        this.isCreated = false;\n      }, 3000); \n\n    })\n    console.log(this.taskForm.value);\n  }\n}\n\n","<div class=\"container-fluid page\">\n  <div class=\"d-flex page__box p-3 mt-2\">Add Task to your Project</div>\n  <div class=\"page__content shadow p-3 position-relative\">\n    <div class=\"page__content-data\">\n<div class=\"container\">\n<form [formGroup]=\"taskForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"task-container\">\n    <h2>Create Task</h2>\n    <div class=\"form-group\">\n            <label for=\"projectId\">Project ID:</label>\n            <select id=\"projectId\" name=\"projectId\" [(ngModel)]=\"selectedProjectId\" formControlName=\"projectId\">\n              <option value=\"\" disabled>Select Project</option>\n              <option *ngFor=\"let project of projects\" [value]=\"project.project_id\">{{ project.project_id }}</option>\n            </select>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\n    </div>\n    \n    <div class=\"form-group1\">\n      <label for=\"status\">Status:</label>\n      <select id=\"status\" formControlName=\"status\">\n        <option  value=\"ON_HOLD\">ON_HOLD</option>\n        <option  value=\"IN_PROGRESS\">IN_PROGRESS</option>\n        <option  value=\"completed\">COMPLETED</option>\n      </select>\n      <label for=\"assignedTo\">Assigned To:</label>\n      <select id=\"assignedTo\" formControlName=\"assignedTo\">\n        <option value=\"\" disabled>Select Users</option>\n        <option *ngFor=\"let user of allEmployee\" [value]=\"user.email\">{{ user.email }}</option>\n      </select>\n    </div>\n\n\n    <div class=\"form-group\">\n      <label for=\"assignDate\">Assign Date:</label>\n      <input type=\"date\" id=\"assignDate\" formControlName=\"assignDate\">\n      <label for=\"completionDate\">Completion Date:</label>\n      <input type=\"date\" id=\"completionDate\" formControlName=\"completionDate\">\n    </div>\n   \n    <button type=\"submit\" >Submit</button>\n    <p *ngIf=\"isCreated\">Task is created successfully</p>\n  </div>\n  </form>\n</div>\n  \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}