{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction UpdateRoleComponent_small_3_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateRoleComponent_small_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 8);\n    i0.ɵɵtemplate(1, UpdateRoleComponent_small_3_small_1_Template, 2, 0, \"small\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].invalid);\n  }\n}\nfunction UpdateRoleComponent_small_16_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Role is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateRoleComponent_small_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtemplate(1, UpdateRoleComponent_small_16_small_1_Template, 2, 0, \"small\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"role\"].invalid);\n  }\n}\nexport class UpdateRoleComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.showMessage = false;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      role: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.registerForm.controls;\n  }\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      return;\n    }\n    // Submit the form data\n    console.log(this.registerForm.value);\n    console.log(this.registerForm.value.role);\n  }\n  static #_ = this.ɵfac = function UpdateRoleComponent_Factory(t) {\n    return new (t || UpdateRoleComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateRoleComponent,\n    selectors: [[\"app-update-role\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"formControlName\", \"role\"], [\"value\", \"\"], [\"value\", \"admin\"], [\"value\", \"manager\"], [\"value\", \"user\"], [4, \"ngIf\"], [1, \"error-message\"]],\n    template: function UpdateRoleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n        i0.ɵɵelement(2, \"input\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, UpdateRoleComponent_small_3_Template, 2, 1, \"small\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\")(5, \"label\");\n        i0.ɵɵtext(6, \"Role:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 2)(8, \"option\", 3);\n        i0.ɵɵtext(9, \"Select Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 4);\n        i0.ɵɵtext(11, \"ADMIN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"option\", 5);\n        i0.ɵɵtext(13, \"Manager\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 6);\n        i0.ɵɵtext(15, \"USER\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(16, UpdateRoleComponent_small_16_Template, 2, 1, \"small\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"email\"].invalid && (ctx.f[\"email\"].dirty || ctx.f[\"email\"].touched));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"role\"].invalid && (ctx.f[\"role\"].dirty || ctx.f[\"role\"].touched));\n      }\n    },\n    dependencies: [i4.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","UpdateRoleComponent_small_3_small_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","f","invalid","UpdateRoleComponent_small_16_small_1_Template","ctx_r1","UpdateRoleComponent","constructor","formBuilder","http","router","showMessage","ngOnInit","registerForm","group","email","required","role","controls","onSubmit","console","log","value","_","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","_2","selectors","decls","vars","consts","template","UpdateRoleComponent_Template","rf","ctx","ɵɵelement","UpdateRoleComponent_small_3_Template","UpdateRoleComponent_small_16_Template","dirty","touched"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\admin\\update-role\\update-role.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\admin\\update-role\\update-role.component.html"],"sourcesContent":["import { Component,OnInit} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-update-role',\n  templateUrl: './update-role.component.html',\n  styleUrls: ['./update-role.component.css']\n})\nexport class UpdateRoleComponent implements OnInit {\n  currentRole:any;\n  showMessage: boolean = false;\n  constructor(private formBuilder: FormBuilder,private http : HttpClient,private router :Router) { }\n  registerForm: FormGroup;\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      role: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      return;\n    }\n    \n    // Submit the form data\n    console.log(this.registerForm.value);\n    console.log(this.registerForm.value.role);\n  }\n}\n","\n<div>\n    <label>\n    <input type=\"email\" formControlName=\"email\" placeholder=\"Email\">\n    </label>\n    <small *ngIf=\"f['email'].invalid && (f['email'].dirty || f['email'].touched)\" class=\"error-message\">\n      <small *ngIf=\"f['email'].invalid\">Email is required</small>\n    </small>\n  </div>\n<div>\n    <label>Role:</label>\n    <select formControlName=\"role\">\n      <option value=\"\">Select Role</option>\n      <option value=\"admin\">ADMIN</option>\n      <option value=\"manager\">Manager</option>\n      <option value=\"user\">USER</option>\n    </select>\n    <small *ngIf=\"f['role'].invalid && (f['role'].dirty || f['role'].touched)\">\n      <small *ngIf=\"f['role'].invalid\">Role is required</small>\n    </small>\n   </div>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICK7DC,EAAA,CAAAC,cAAA,YAAkC;IAAAD,EAAA,CAAAE,MAAA,wBAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IAD7DH,EAAA,CAAAC,cAAA,eAAoG;IAClGD,EAAA,CAAAI,UAAA,IAAAC,4CAAA,mBAA2D;IAC7DL,EAAA,CAAAG,YAAA,EAAQ;;;;IADEH,EAAA,CAAAM,SAAA,GAAwB;IAAxBN,EAAA,CAAAO,UAAA,SAAAC,MAAA,CAAAC,CAAA,UAAAC,OAAA,CAAwB;;;;;IAYhCV,EAAA,CAAAC,cAAA,YAAiC;IAAAD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IAD3DH,EAAA,CAAAC,cAAA,YAA2E;IACzED,EAAA,CAAAI,UAAA,IAAAO,6CAAA,mBAAyD;IAC3DX,EAAA,CAAAG,YAAA,EAAQ;;;;IADEH,EAAA,CAAAM,SAAA,GAAuB;IAAvBN,EAAA,CAAAO,UAAA,SAAAK,MAAA,CAAAH,CAAA,SAAAC,OAAA,CAAuB;;;ADTrC,OAAM,MAAOG,mBAAmB;EAG9BC,YAAoBC,WAAwB,EAASC,IAAiB,EAASC,MAAc;IAAzE,KAAAF,WAAW,GAAXA,WAAW;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IADrF,KAAAC,WAAW,GAAY,KAAK;EACqE;EAEjGC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACzCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACvB,UAAU,CAACwB,QAAQ,EAAExB,UAAU,CAACuB,KAAK,CAAC,CAAC;MACpDE,IAAI,EAAE,CAAC,EAAE,EAAEzB,UAAU,CAACwB,QAAQ;KAC/B,CAAC;EACJ;EAEA,IAAId,CAACA,CAAA;IAAK,OAAO,IAAI,CAACW,YAAY,CAACK,QAAQ;EAAE;EAE7CC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACN,YAAY,CAACV,OAAO,EAAE;MAC7B;;IAGF;IACAiB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,YAAY,CAACS,KAAK,CAAC;IACpCF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,YAAY,CAACS,KAAK,CAACL,IAAI,CAAC;EAC3C;EAAC,QAAAM,CAAA,G;qBAtBUjB,mBAAmB,EAAAb,EAAA,CAAA+B,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAjC,EAAA,CAAA+B,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAnC,EAAA,CAAA+B,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBzB,mBAAmB;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRhC7C,EAAA,CAAAC,cAAA,UAAK;QAEDD,EAAA,CAAA+C,SAAA,eAAgE;QAChE/C,EAAA,CAAAG,YAAA,EAAQ;QACRH,EAAA,CAAAI,UAAA,IAAA4C,oCAAA,mBAEQ;QACVhD,EAAA,CAAAG,YAAA,EAAM;QACRH,EAAA,CAAAC,cAAA,UAAK;QACMD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACpBH,EAAA,CAAAC,cAAA,gBAA+B;QACZD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACrCH,EAAA,CAAAC,cAAA,iBAAsB;QAAAD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACpCH,EAAA,CAAAC,cAAA,iBAAwB;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxCH,EAAA,CAAAC,cAAA,iBAAqB;QAAAD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAEpCH,EAAA,CAAAI,UAAA,KAAA6C,qCAAA,mBAEQ;QACTjD,EAAA,CAAAG,YAAA,EAAM;;;QAfGH,EAAA,CAAAM,SAAA,GAAoE;QAApEN,EAAA,CAAAO,UAAA,SAAAuC,GAAA,CAAArC,CAAA,UAAAC,OAAA,KAAAoC,GAAA,CAAArC,CAAA,UAAAyC,KAAA,IAAAJ,GAAA,CAAArC,CAAA,UAAA0C,OAAA,EAAoE;QAYpEnD,EAAA,CAAAM,SAAA,IAAiE;QAAjEN,EAAA,CAAAO,UAAA,SAAAuC,GAAA,CAAArC,CAAA,SAAAC,OAAA,KAAAoC,GAAA,CAAArC,CAAA,SAAAyC,KAAA,IAAAJ,GAAA,CAAArC,CAAA,SAAA0C,OAAA,EAAiE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}