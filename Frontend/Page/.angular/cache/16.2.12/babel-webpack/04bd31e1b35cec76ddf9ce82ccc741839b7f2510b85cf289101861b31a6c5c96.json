{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction UpdateTaskComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r6.project_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r6.project_id);\n  }\n}\nfunction UpdateTaskComponent_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r7.email);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r7.email);\n  }\n}\nfunction UpdateTaskComponent_option_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", task_r8.task_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r8.task_id);\n  }\n}\nfunction UpdateTaskComponent_p_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Task is Updated successfully\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateTaskComponent_option_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r9.project_id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r9.project_id);\n  }\n}\nfunction UpdateTaskComponent_p_78_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Project status is updated successfully\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UpdateTaskComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.projects = []; // Populate this array with your project data\n    this.updateClicked = false;\n    this.isCreated = false;\n    this.allEmployee = [];\n    this.tasks = [];\n    this.isProjectStatus = true;\n    this.projectIdControl = new FormControl();\n  }\n  ngOnInit() {\n    this.taskForm = this.fb.group({\n      name: [''],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      projectId: [''],\n      taskId: ['']\n    });\n    this.projectForm = this.fb.group({\n      project_id: [''],\n      projectStatus: ['']\n    });\n    this.isCreated = false;\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.get('http://localhost:8082/api/manager/all/users', {\n      headers,\n      responseType: 'json'\n    }).subscribe({\n      next: data => {\n        this.allEmployee = data;\n      },\n      error: error => {\n        console.error('Error fetching data:', error);\n      }\n    });\n    this.http.get('http://localhost:8083/api/project/details', {\n      headers\n    }).subscribe(response => {\n      console.log(response);\n      this.projects = response;\n      //this.projectslength = response.length;\n    });\n  }\n\n  updateProjectStatus() {\n    //  this.updateClicked = true;\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.put('http://localhost:8083/api/project/status/' + this.projectForm.value.project_id, {\n      status: this.projectForm.value.projectStatus\n    }, {\n      headers,\n      responseType: 'text'\n    }).subscribe(response => {\n      console.log(response);\n      this.isProjectStatus = true;\n      setTimeout(() => {\n        this.isProjectStatus = false;\n      });\n    });\n  }\n  onSubmit() {\n    // Handle form submission\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const email = JSON.parse(sessionStorage.getItem('key')).email;\n    let body = {\n      \"name\": this.taskForm.value.name,\n      \"status\": this.taskForm.value.status,\n      \"assignedDate\": this.taskForm.value.assignDate,\n      \"completionDate\": this.taskForm.value.completionDate,\n      \"assignedTo\": this.taskForm.value.assignedTo,\n      \"assignedBy\": email,\n      \"projectId\": this.taskForm.value.projectId\n    };\n    this.taskId = this.taskForm.value.taskId;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8083/api/task/update/' + this.taskId, body, {\n      headers,\n      responseType: 'json'\n    }).subscribe(response => {\n      console.log(response);\n      this.isCreated = true;\n      setTimeout(() => {\n        this.isCreated = false;\n      }, 3000);\n    });\n    console.log(this.taskForm.value);\n  }\n  static #_ = this.ɵfac = function UpdateTaskComponent_Factory(t) {\n    return new (t || UpdateTaskComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateTaskComponent,\n    selectors: [[\"app-update-task\"]],\n    decls: 81,\n    vars: 8,\n    consts: [[1, \"container-fluid\", \"page\"], [1, \"d-flex\", \"page__box\", \"p-3\", \"mt-2\"], [1, \"page__content\", \"shadow\", \"p-3\", \"position-relative\"], [1, \"page__content-data\"], [1, \"update-task\"], [1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"task-container\"], [1, \"form-group\"], [\"for\", \"projectId\"], [\"id\", \"projectId\", \"name\", \"projectId\", \"formControlName\", \"projectId\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\"], [\"value\", \"ON_HOLD\"], [\"value\", \"IN_PROGRESS\"], [\"value\", \"completed\"], [\"for\", \"assignedTo\"], [\"id\", \"assignedTo\", \"formControlName\", \"assignedTo\"], [\"for\", \"assignDate\"], [\"type\", \"date\", \"id\", \"assignDate\", \"formControlName\", \"assignDate\"], [\"for\", \"completionDate\"], [\"type\", \"date\", \"id\", \"completionDate\", \"formControlName\", \"completionDate\"], [\"for\", \"taskId\"], [\"id\", \"taskId\", \"formControlName\", \"taskId\"], [\"type\", \"submit\"], [4, \"ngIf\"], [1, \"status-form\"], [1, \"form-container\"], [1, \"task-id\"], [\"id\", \"project_id\", \"name\", \"project_id\", \"formControlName\", \"project_id\"], [\"id\", \"status\", \"name\", \"status\", \"formControlName\", \"projectStatus\"], [\"value\", \"COMPLETED\"], [\"type\", \"submit\", 1, \"btn-class\"], [3, \"value\"]],\n    template: function UpdateTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Update your Work\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateTaskComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"h2\");\n        i0.ɵɵtext(10, \"Update Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Project ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"select\", 10)(15, \"option\", 11);\n        i0.ɵɵtext(16, \"Select Project\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, UpdateTaskComponent_option_17_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"label\", 13);\n        i0.ɵɵtext(19, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 8)(22, \"label\", 15);\n        i0.ɵɵtext(23, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"select\", 16)(25, \"option\", 17);\n        i0.ɵɵtext(26, \"ON_HOLD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"option\", 18);\n        i0.ɵɵtext(28, \"IN_PROGRESS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"option\", 19);\n        i0.ɵɵtext(30, \"COMPLETED\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"label\", 20);\n        i0.ɵɵtext(32, \"Assigned To:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"select\", 21)(34, \"option\", 11);\n        i0.ɵɵtext(35, \"Select Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(36, UpdateTaskComponent_option_36_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"div\", 8)(38, \"label\", 22);\n        i0.ɵɵtext(39, \"Assign Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 23);\n        i0.ɵɵelementStart(41, \"label\", 24);\n        i0.ɵɵtext(42, \"Completion Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"input\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 8)(45, \"label\", 26);\n        i0.ɵɵtext(46, \"Task ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"select\", 27)(48, \"option\", 11);\n        i0.ɵɵtext(49, \"Select Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(50, UpdateTaskComponent_option_50_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"button\", 28);\n        i0.ɵɵtext(52, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(53, UpdateTaskComponent_p_53_Template, 2, 0, \"p\", 29);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(54, \"div\")(55, \"div\", 30)(56, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateTaskComponent_Template_form_ngSubmit_56_listener() {\n          return ctx.updateProjectStatus();\n        });\n        i0.ɵɵelementStart(57, \"h3\");\n        i0.ɵɵtext(58, \"Project Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"div\", 31)(60, \"div\", 32)(61, \"label\", 26);\n        i0.ɵɵtext(62, \"Project ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"select\", 33)(64, \"option\", 11);\n        i0.ɵɵtext(65, \"Select Project\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(66, UpdateTaskComponent_option_66_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(67, \"div\")(68, \"label\", 15);\n        i0.ɵɵtext(69, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"select\", 34)(71, \"option\", 35);\n        i0.ɵɵtext(72, \"COMPLETED\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"option\", 18);\n        i0.ɵɵtext(74, \"IN PROGRESS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(75, \"option\", 17);\n        i0.ɵɵtext(76, \"ON HOLD\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(77, \"br\");\n        i0.ɵɵtemplate(78, UpdateTaskComponent_p_78_Template, 2, 0, \"p\", 29);\n        i0.ɵɵelementStart(79, \"button\", 36);\n        i0.ɵɵtext(80, \"Update\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allEmployee);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isCreated);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.projectForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.isProjectStatus);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 341:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(156:3) C:\\\\\\\\Users\\\\\\\\Purini Tharishith\\\\\\\\Desktop\\\\\\\\project3\\\\\\\\Page\\\\\\\\src\\\\\\\\app\\\\\\\\modules\\\\\\\\manager\\\\\\\\update-task\\\\\\\\update-task.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 154 | \\\\u001b[39mp\\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m 155 | \\\\u001b[39m  margin-left\\\\u001b[33m:\\\\u001b[39m30px\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 156 | \\\\u001b[39m  col\\\\n \\\\u001b[90m     | \\\\u001b[39m  \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 157 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[341]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=update-task.component.css.map*/\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","FormControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","project_r6","project_id","ɵɵadvance","ɵɵtextInterpolate","user_r7","email","task_r8","task_id","project_r9","UpdateTaskComponent","constructor","fb","http","projects","updateClicked","isCreated","allEmployee","tasks","isProjectStatus","projectIdControl","ngOnInit","taskForm","group","name","status","assignDate","completionDate","assignedTo","projectId","taskId","projectForm","projectStatus","token","JSON","parse","sessionStorage","getItem","headers","get","responseType","subscribe","next","data","error","console","response","log","updateProjectStatus","put","value","setTimeout","onSubmit","body","post","_","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","_2","selectors","decls","vars","consts","template","UpdateTaskComponent_Template","rf","ctx","ɵɵlistener","UpdateTaskComponent_Template_form_ngSubmit_7_listener","ɵɵtemplate","UpdateTaskComponent_option_17_Template","ɵɵelement","UpdateTaskComponent_option_36_Template","UpdateTaskComponent_option_50_Template","UpdateTaskComponent_p_53_Template","UpdateTaskComponent_Template_form_ngSubmit_56_listener","UpdateTaskComponent_option_66_Template","UpdateTaskComponent_p_78_Template"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\update-task\\update-task.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\update-task\\update-task.component.html"],"sourcesContent":["import { Component,OnInit} from '@angular/core';\nimport { FormBuilder,  FormGroup,  Validators } from '@angular/forms';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-update-task',\n  templateUrl: './update-task.component.html',\n  styleUrls: ['./update-task.component.css']\n})\nexport class UpdateTaskComponent implements OnInit{\n  \n  projects: any[] = []; // Populate this array with your project data\n  updateClicked = false;\n  selectedProjectId:number;\n  taskId:number;\n  projectId:number;\n  taskStatus:string;\n  taskForm: FormGroup;\n  isCreated= false;\n  projectStatus:string;\n  allEmployee:any[]=[];\n  tasks:any[]=[];\n  isProjectStatus:boolean= true;\n  projectForm:FormGroup\n  projectIdControl = new FormControl();\n  constructor(private fb: FormBuilder,private http:HttpClient) {}\n\n  ngOnInit(): void {\n\n    \n\n    this.taskForm = this.fb.group({\n      name: ['' ],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      projectId: [''],\n      taskId:['']\n    });\n    \n    this.projectForm = this.fb.group({\n      project_id:[''],\n      projectStatus:['']\n    });\n\n    this.isCreated=false;\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    this.http.get('http://localhost:8082/api/manager/all/users', { headers, responseType: 'json' }).subscribe(\n      {next: \n       (data: any) => {\n         this.allEmployee=data;\n         \n       },\n       error:\n       (error) => {\n         console.error('Error fetching data:', error);\n       }\n      } );\n\n    this.http.get<any[]>('http://localhost:8083/api/project/details',{headers}).subscribe((response)=>{\n      console.log(response);\n      this.projects = response;\n      //this.projectslength = response.length;\n    })\n  }\n  updateProjectStatus()\n  {  \n //  this.updateClicked = true;\n     const token = JSON.parse(sessionStorage.getItem('key')).token;\n     const headers = new HttpHeaders({\n       'Authorization': `Bearer ${token}`\n     });\n\n     this.http.put('http://localhost:8083/api/project/status/'+this.projectForm.value.project_id ,{ status: this.projectForm.value.projectStatus }, { headers,responseType:'text'}).subscribe((response)=>{\n      console.log(response);\n      this.isProjectStatus = true;\n      setTimeout(()=>{\n        this.isProjectStatus = false;\n      })\n    })\n }\n\n\n onSubmit() {\n  // Handle form submission\n  const token = JSON.parse(sessionStorage.getItem('key')).token;\n  const email = JSON.parse(sessionStorage.getItem('key')).email;\n\n  let body={\n  \"name\": this.taskForm.value.name,\n  \"status\": this.taskForm.value.status,\n  \"assignedDate\": this.taskForm.value.assignDate,\n  \"completionDate\": this.taskForm.value.completionDate,\n  \"assignedTo\": this.taskForm.value.assignedTo,\n  \"assignedBy\": email,\n  \"projectId\": this.taskForm.value.projectId,\n  };\n   \n  this.taskId = this.taskForm.value.taskId;\n \n  const headers = new HttpHeaders({\n    'Authorization': `Bearer ${token}`\n  });\n  this.http.post('http://localhost:8083/api/task/update/'+this.taskId,body, { headers, responseType: 'json' }).subscribe((response)=>{\n    console.log(response);\n    this.isCreated = true;\n    setTimeout(() => {\n      this.isCreated = false;\n    }, 3000); \n\n  })\n  console.log(this.taskForm.value);\n}\n  \n}\n","<div class=\"container-fluid page\">\n  <div class=\"d-flex page__box p-3 mt-2\">Update your Work</div>\n  <div class=\"page__content shadow p-3 position-relative\">\n    <div class=\"page__content-data\">\n<div class=\"update-task\">\n  <div class=\"container\">\n    <form [formGroup]=\"taskForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"task-container\">\n        <h2>Update Task</h2>\n        <div class=\"form-group\">\n          <label for=\"projectId\">Project ID:</label>\n          <select id=\"projectId\" name=\"projectId\" formControlName=\"projectId\">\n            <option value=\"\" disabled>Select Project</option>\n            <option *ngFor=\"let project of projects\" [value]=\"project.project_id\">{{ project.project_id }}</option>\n          </select>\n          <label for=\"name\">Name:</label>\n          <input type=\"text\" id=\"name\" formControlName=\"name\">\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"status\">Status:</label>\n          <select id=\"status\" formControlName=\"status\">\n            <option value=\"ON_HOLD\">ON_HOLD</option>\n            <option value=\"IN_PROGRESS\">IN_PROGRESS</option>\n            <option value=\"completed\">COMPLETED</option>\n          </select>\n          <label for=\"assignedTo\">Assigned To:</label>\n          <select id=\"assignedTo\" formControlName=\"assignedTo\">\n            <option value=\"\" disabled>Select Users</option>\n            <option *ngFor=\"let user of allEmployee\" [value]=\"user.email\">{{ user.email }}</option>\n          </select>\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"assignDate\">Assign Date:</label>\n          <input type=\"date\" id=\"assignDate\" formControlName=\"assignDate\">\n          <label for=\"completionDate\">Completion Date:</label>\n          <input type=\"date\" id=\"completionDate\" formControlName=\"completionDate\">\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"taskId\">Task ID:</label>\n          <select id=\"taskId\" formControlName=\"taskId\">\n            <option value=\"\" disabled>Select Task</option>\n            <option *ngFor=\"let task of tasks\" [value]=\"task.task_id\">{{ task.task_id }}</option>\n          </select>\n        </div>\n  \n        <button type=\"submit\">Submit</button>\n        <p *ngIf=\"isCreated\">Task is Updated successfully</p>\n      </div>\n    </form>\n  </div>\n  \n    \n\n    <div>\n      <div class=\"status-form\">\n      <form [formGroup]=\"projectForm\" (ngSubmit)=\"updateProjectStatus()\">\n        <h3>Project Status</h3>\n        <div class=\"form-container\">\n          <div class=\"task-id\">\n          <label for=\"taskId\">Project ID:</label>\n          <select id=\"project_id\" name=\"project_id\" formControlName=\"project_id\">\n            <option value=\"\" disabled>Select Project</option>\n            <option *ngFor=\"let project of projects\" [value]=\"project.project_id\">{{ project.project_id }}</option>\n          </select>\n        </div>\n        <div>\n          <label for=\"status\">Status:</label>\n          <select id=\"status\" name=\"status\" formControlName=\"projectStatus\">\n            <option value=\"COMPLETED\">COMPLETED</option>\n            <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n            <option value=\"ON_HOLD\">ON HOLD</option>\n          </select>\n        </div>\n      </div>\n      <br>\n      <p *ngIf=\"isProjectStatus\"> Project status is updated successfully</p>\n        <button type=\"submit\" class=\"btn-class\">Update</button>\n      </form>\n      </div>\n    </div>\n\n    </div>\n \n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}