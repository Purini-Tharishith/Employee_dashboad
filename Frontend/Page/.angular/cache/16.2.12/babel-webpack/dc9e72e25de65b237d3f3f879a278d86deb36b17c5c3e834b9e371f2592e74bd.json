{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction CreatetaskComponent_p_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\");\n  }\n}\nexport class CreatetaskComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n  }\n  ngOnInit() {\n    this.taskForm = this.fb.group({\n      name: [''],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      assignedBy: [''],\n      projectId: ['']\n    });\n  }\n  onSubmit() {\n    // Handle form submission\n    let body = {\n      \"name\": this.taskForm.value.name,\n      \"status\": this.taskForm.value.status,\n      \"assignedDate\": this.taskForm.value.assignDate,\n      \"completionDate\": this.taskForm.value.completionDate,\n      \"assignedTo\": this.taskForm.value.assignedTo,\n      \"assignedBy\": this.taskForm.value.assignedBy,\n      \"projectId\": this.taskForm.value.projectId\n    };\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8083/api/task/create', body, {\n      headers,\n      responseType: 'json'\n    }).subscribe(response => {\n      console.log(response);\n    });\n    console.log(this.taskForm.value);\n  }\n  static #_ = this.ɵfac = function CreatetaskComponent_Factory(t) {\n    return new (t || CreatetaskComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatetaskComponent,\n    selectors: [[\"app-createtask\"]],\n    decls: 39,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"projectId\"], [\"type\", \"number\", \"id\", \"projectId\", \"formControlName\", \"projectId\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\"], [\"value\", \"ON_HOLD\"], [\"value\", \"IN_PROGRESS\"], [\"value\", \"completed\"], [\"for\", \"assignDate\"], [\"type\", \"date\", \"id\", \"assignDate\", \"formControlName\", \"assignDate\"], [\"for\", \"completionDate\"], [\"type\", \"date\", \"id\", \"completionDate\", \"formControlName\", \"completionDate\"], [\"for\", \"assignedTo\"], [\"type\", \"text\", \"id\", \"assignedTo\", \"formControlName\", \"assignedTo\"], [\"for\", \"assignedBy\"], [\"type\", \"text\", \"id\", \"assignedBy\", \"formControlName\", \"assignedBy\"], [\"type\", \"submit\"], [4, \"ngIf\"]],\n    template: function CreatetaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreatetaskComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"div\", 1)(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Project ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 7)(14, \"option\", 8);\n        i0.ɵɵtext(15, \"ON_HOLD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 9);\n        i0.ɵɵtext(17, \"IN_PROGRESS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 10);\n        i0.ɵɵtext(19, \"COMPLETED\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 1)(21, \"label\", 11);\n        i0.ɵɵtext(22, \"Assign Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 1)(25, \"label\", 13);\n        i0.ɵɵtext(26, \"Completion Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 1)(29, \"label\", 15);\n        i0.ɵɵtext(30, \"Assigned To:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 1)(33, \"label\", 17);\n        i0.ɵɵtext(34, \"Assigned By:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 19);\n        i0.ɵɵtext(37, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(38, CreatetaskComponent_p_38_Template, 1, 0, \"p\", 20);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  \\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    font-weight: bold;\\n  }\\n  \\n\\n  button[_ngcontent-%COMP%] {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 12px 20px;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\\n  \\n  button[_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9tYW5hZ2VyL2NyZWF0ZXRhc2svY3JlYXRldGFzay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1COztFQUVyQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxpQkFBaUI7RUFDbkI7OztFQUdBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcblxyXG4gIGJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMTJweCAyMHB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICBidXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQ1YTA0OTtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelement","CreatetaskComponent","constructor","fb","http","ngOnInit","taskForm","group","name","status","assignDate","completionDate","assignedTo","assignedBy","projectId","onSubmit","body","value","token","JSON","parse","sessionStorage","getItem","headers","post","responseType","subscribe","response","console","log","_","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","_2","selectors","decls","vars","consts","template","CreatetaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CreatetaskComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","CreatetaskComponent_p_38_Template","ɵɵproperty"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\createtask\\createtask.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\createtask\\createtask.component.html"],"sourcesContent":["import { Component,OnInit  } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-createtask',\n  templateUrl: './createtask.component.html',\n  styleUrls: ['./createtask.component.css']\n})\nexport class CreatetaskComponent implements OnInit {\n   \n  taskForm: FormGroup;\n\n  constructor(private fb: FormBuilder,private http:HttpClient) {}\n\n  ngOnInit(): void {\n    this.taskForm = this.fb.group({\n      name: ['' ],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      assignedBy: [''],\n      projectId: ['']\n    });\n  }\n\n  onSubmit() {\n    // Handle form submission\n    let body={\n    \"name\": this.taskForm.value.name,\n    \"status\": this.taskForm.value.status,\n    \"assignedDate\": this.taskForm.value.assignDate,\n    \"completionDate\": this.taskForm.value.completionDate,\n    \"assignedTo\": this.taskForm.value.assignedTo,\n    \"assignedBy\": this.taskForm.value.assignedBy,\n    \"projectId\": this.taskForm.value.projectId\n    };\n\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8083/api/task/create',body, { headers, responseType: 'json' }).subscribe((response)=>{\n      console.log(response);\n\n    })\n    console.log(this.taskForm.value);\n  }\n}\n\n","<form [formGroup]=\"taskForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n    <div class=\"form-group\">\n        <div class=\"form-group\">\n            <label for=\"projectId\">Project ID:</label>\n            <input type=\"number\" id=\"projectId\" formControlName=\"projectId\">\n        </div>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\n    </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"status\">Status:</label>\n      <select id=\"status\" formControlName=\"status\">\n        <option  value=\"ON_HOLD\">ON_HOLD</option>\n        <option  value=\"IN_PROGRESS\">IN_PROGRESS</option>\n        <option  value=\"completed\">COMPLETED</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"assignDate\">Assign Date:</label>\n      <input type=\"date\" id=\"assignDate\" formControlName=\"assignDate\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"completionDate\">Completion Date:</label>\n      <input type=\"date\" id=\"completionDate\" formControlName=\"completionDate\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"assignedTo\">Assigned To:</label>\n      <input type=\"text\" id=\"assignedTo\" formControlName=\"assignedTo\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"assignedBy\">Assigned By:</label>\n      <input type=\"text\" id=\"assignedBy\" formControlName=\"assignedBy\">\n    </div>\n   \n    <button type=\"submit\" >Submit</button>\n    <p *ngIf=\"\"></p>\n  </form>\n  \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}