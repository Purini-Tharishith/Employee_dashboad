{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nexport let CreateprojectComponent = class CreateprojectComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.isCreated = false;\n  }\n  ngOnInit() {\n    this.projectForm = this.fb.group({\n      name: [''],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      projectId: ['']\n    });\n    this.isCreated = false;\n  }\n  onSubmit() {\n    // Handle form submission\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const email = JSON.parse(sessionStorage.getItem('key')).email;\n    let body = {\n      \"name\": this.projectForm.value.name,\n      \"status\": this.projectForm.value.status,\n      \"assignedDate\": this.projectForm.value.assignDate,\n      \"completionDate\": this.projectForm.value.completionDate,\n      \"assignedTo\": this.projectForm.value.assignedTo,\n      \"assignedBy\": email,\n      \"projectId\": this.projectForm.value.projectId\n    };\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8083/api/project/create', body, {\n      headers,\n      responseType: 'json'\n    }).subscribe(response => {\n      console.log(response);\n      this.isCreated = true;\n    });\n    console.log(this.projectForm.value);\n  }\n};\nCreateprojectComponent = __decorate([Component({\n  selector: 'app-createproject',\n  templateUrl: './createproject.component.html',\n  styleUrls: ['./createproject.component.css']\n})], CreateprojectComponent);","map":{"version":3,"names":["Component","HttpHeaders","CreateprojectComponent","constructor","fb","http","isCreated","ngOnInit","projectForm","group","name","status","assignDate","completionDate","assignedTo","projectId","onSubmit","token","JSON","parse","sessionStorage","getItem","email","body","value","headers","post","responseType","subscribe","response","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\admin\\createproject\\createproject.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n@Component({\n  selector: 'app-createproject',\n  templateUrl: './createproject.component.html',\n  styleUrls: ['./createproject.component.css']\n})\nexport class CreateprojectComponent {\n   \n  projectForm!: FormGroup;\n  isCreated= false;\n  constructor(private fb: FormBuilder,private http:HttpClient) {}\n\n  ngOnInit(): void {\n    this.projectForm = this.fb.group({\n      name: ['' ],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      projectId: ['']\n    });\n    this.isCreated=false;\n  }\n\n  onSubmit() {\n    // Handle form submission\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const email = JSON.parse(sessionStorage.getItem('key')).email;\n\n    let body={\n    \"name\": this.projectForm.value.name,\n    \"status\": this.projectForm.value.status,\n    \"assignedDate\": this.projectForm.value.assignDate,\n    \"completionDate\": this.projectForm.value.completionDate,\n    \"assignedTo\": this.projectForm.value.assignedTo,\n    \"assignedBy\": email,\n    \"projectId\": this.projectForm.value.projectId\n    };\n\n   \n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8083/api/project/create',body, { headers, responseType: 'json' }).subscribe((response)=>{\n      console.log(response);\n      this.isCreated = true;\n\n    })\n    console.log(this.projectForm.value);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAAoBC,WAAW,QAAQ,sBAAsB;AAOtD,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAIjCC,YAAoBC,EAAe,EAASC,IAAe;IAAvC,KAAAD,EAAE,GAAFA,EAAE;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IADhD,KAAAC,SAAS,GAAE,KAAK;EAC8C;EAE9DC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC/BC,IAAI,EAAE,CAAC,EAAE,CAAE;MACXC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,cAAc,EAAE,CAAC,EAAE,CAAC;MACpBC,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,SAAS,EAAE,CAAC,EAAE;KACf,CAAC;IACF,IAAI,CAACT,SAAS,GAAC,KAAK;EACtB;EAEAU,QAAQA,CAAA;IACN;IACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAACJ,KAAK;IAC7D,MAAMK,KAAK,GAAGJ,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAACC,KAAK;IAE7D,IAAIC,IAAI,GAAC;MACT,MAAM,EAAE,IAAI,CAACf,WAAW,CAACgB,KAAK,CAACd,IAAI;MACnC,QAAQ,EAAE,IAAI,CAACF,WAAW,CAACgB,KAAK,CAACb,MAAM;MACvC,cAAc,EAAE,IAAI,CAACH,WAAW,CAACgB,KAAK,CAACZ,UAAU;MACjD,gBAAgB,EAAE,IAAI,CAACJ,WAAW,CAACgB,KAAK,CAACX,cAAc;MACvD,YAAY,EAAE,IAAI,CAACL,WAAW,CAACgB,KAAK,CAACV,UAAU;MAC/C,YAAY,EAAEQ,KAAK;MACnB,WAAW,EAAE,IAAI,CAACd,WAAW,CAACgB,KAAK,CAACT;KACnC;IAGD,MAAMU,OAAO,GAAG,IAAIxB,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUgB,KAAK;KACjC,CAAC;IACF,IAAI,CAACZ,IAAI,CAACqB,IAAI,CAAC,0CAA0C,EAACH,IAAI,EAAE;MAAEE,OAAO;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CAAEC,QAAQ,IAAG;MACvHC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACvB,SAAS,GAAG,IAAI;IAEvB,CAAC,CAAC;IACFwB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACvB,WAAW,CAACgB,KAAK,CAAC;EACrC;CACD;AA5CYtB,sBAAsB,GAAA8B,UAAA,EALlChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWjC,sBAAsB,CA4ClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}