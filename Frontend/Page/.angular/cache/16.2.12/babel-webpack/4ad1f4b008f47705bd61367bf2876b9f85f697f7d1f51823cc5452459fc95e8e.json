{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nexport let UpdateStatusComponent = class UpdateStatusComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  updateTaskStatus() {\n    //  this.updateClicked = true;\n    console.log(\"i am printing taskId\");\n    console.log(this.taskId);\n    console.log(this.taskStatus);\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.put('http://localhost:8083/api/task/status/' + this.taskId, {\n      status: this.taskStatus\n    }, {\n      headers,\n      responseType: 'text'\n    }).subscribe(response => {\n      console.log(response);\n    });\n  }\n};\nUpdateStatusComponent = __decorate([Component({\n  selector: 'app-update-status',\n  templateUrl: './update-status.component.html',\n  styleUrls: ['./update-status.component.css']\n})], UpdateStatusComponent);","map":{"version":3,"names":["Component","HttpHeaders","UpdateStatusComponent","constructor","http","updateTaskStatus","console","log","taskId","taskStatus","token","JSON","parse","sessionStorage","getItem","headers","put","status","responseType","subscribe","response","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\admin\\update-status\\update-status.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\n@Component({\n  selector: 'app-update-status',\n  templateUrl: './update-status.component.html',\n  styleUrls: ['./update-status.component.css']\n})\nexport class UpdateStatusComponent {\n  \n  taskId: number;\n  taskStatus: string; // Ensure taskStatus is of type string\n\n  constructor(private http:) {\n   \n  }\n\n  updateTaskStatus()\n  {  \n //  this.updateClicked = true;\n     console.log(\"i am printing taskId\");\n     console.log(this.taskId);\n     console.log(this.taskStatus);\n     const token = JSON.parse(sessionStorage.getItem('key')).token;\n     const headers = new HttpHeaders({\n       'Authorization': `Bearer ${token}`\n     });\n\n     this.http.put('http://localhost:8083/api/task/status/'+this.taskId ,{ status: this.taskStatus }, { headers,responseType:'text'}).subscribe((response)=>{\n      console.log(response);\n    })\n }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAqBC,WAAW,QAAO,sBAAsB;AAMtD,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAKhCC,YAAoBC,IAAK;IAAL,KAAAA,IAAI,GAAJA,IAAI;EAExB;EAEAC,gBAAgBA,CAAA;IAEjB;IACIC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;IACxBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,UAAU,CAAC;IAC5B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAACJ,KAAK;IAC7D,MAAMK,OAAO,GAAG,IAAId,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUS,KAAK;KACjC,CAAC;IAEF,IAAI,CAACN,IAAI,CAACY,GAAG,CAAC,wCAAwC,GAAC,IAAI,CAACR,MAAM,EAAE;MAAES,MAAM,EAAE,IAAI,CAACR;IAAU,CAAE,EAAE;MAAEM,OAAO;MAACG,YAAY,EAAC;IAAM,CAAC,CAAC,CAACC,SAAS,CAAEC,QAAQ,IAAG;MACtJd,OAAO,CAACC,GAAG,CAACa,QAAQ,CAAC;IACvB,CAAC,CAAC;EACL;CACA;AAxBYlB,qBAAqB,GAAAmB,UAAA,EALjCrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWtB,qBAAqB,CAwBjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}