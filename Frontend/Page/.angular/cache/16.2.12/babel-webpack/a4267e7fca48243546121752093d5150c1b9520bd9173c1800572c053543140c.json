{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Chart, registerables } from 'node_modules/chart.js';\nChart.register(...registerables);\nexport let DashboardComponent = class DashboardComponent {\n  constructor(shareddata, http, router) {\n    this.shareddata = shareddata;\n    this.http = http;\n    this.router = router;\n    this.labeldata = [];\n    this.taskCounts = {};\n    this.projectdata = this.shareddata.getProjectDeatils();\n  }\n  ngOnInit() {\n    const token = this.shareddata.getToken();\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.get('http://localhost:8083/api/project/1', {\n      headers,\n      responseType: 'json'\n    }).subscribe(data => {\n      console.log(data);\n      this.chartdata = data;\n      this.taskCounts = {\n        COMPLETED: 0,\n        IN_PROGRESS: 0,\n        ON_HOLD: 0\n      };\n      this.chartdata.tasks.forEach(task => {\n        if (task.status in this.taskCounts) {\n          this.taskCounts[task.status]++;\n        }\n      });\n      Object.keys(this.taskCounts).forEach(status => {\n        if (this.taskCounts[status] > 0) {\n          this.labeldata.push(`${status} (${this.taskCounts[status]})`);\n        }\n      });\n      // Render chart\n      this.renderChart();\n    }, error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n  renderChart() {\n    const myChart = new Chart('piechart', {\n      type: 'pie',\n      data: {\n        labels: this.labeldata,\n        datasets: [{\n          label: '# of Tasks',\n          data: Object.values(this.taskCounts),\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["Component","HttpHeaders","Chart","registerables","register","DashboardComponent","constructor","shareddata","http","router","labeldata","taskCounts","projectdata","getProjectDeatils","ngOnInit","token","getToken","headers","get","responseType","subscribe","data","console","log","chartdata","COMPLETED","IN_PROGRESS","ON_HOLD","tasks","forEach","task","status","Object","keys","push","renderChart","error","myChart","type","labels","datasets","label","values","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SharedDataService } from '../../../shared-data.service';\n\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { saveAs } from 'file-saver';\nimport {Chart, registerables} from 'node_modules/chart.js';\nChart.register(...registerables);\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent  implements OnInit{\n  \n  \n  constructor(private shareddata : SharedDataService,private http:HttpClient,private  router : Router){}\n\n  chartdata : any ;\n  labeldata: any[]=[];\n  taskCounts: any = {};\n  projectdata : any = this.shareddata.getProjectDeatils();\n  ngOnInit(): void {   \n\n    const token = this.shareddata.getToken();\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n \n    this.http.get('http://localhost:8083/api/project/1', { headers, responseType: 'json' }).subscribe(\n      (data: any) => {\n       console.log(data);\n       this.chartdata = data;\n       this.taskCounts = {\n        COMPLETED: 0,\n        IN_PROGRESS: 0,\n        ON_HOLD: 0\n      };\n\n      this.chartdata.tasks.forEach(task => {\n        if (task.status in this.taskCounts) {\n          this.taskCounts[task.status]++;\n        }\n      });\n      Object.keys(this.taskCounts).forEach(status => {\n        if (this.taskCounts[status] > 0) {\n          this.labeldata.push(`${status} (${this.taskCounts[status]})`);\n        }\n      });\n\n      // Render chart\n      this.renderChart();\n\n      },\n      (error) => {\n        console.error('Error fetching data:', error);\n      }\n    );\n  }\n\n\n  renderChart() {\n    const myChart = new Chart('piechart', {\n      type: 'pie',\n      data: {\n        labels: this.labeldata,\n        datasets: [{\n          label: '# of Tasks',\n          data: Object.values(this.taskCounts),\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)'\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)'\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n   }\n \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAAqBC,WAAW,QAAO,sBAAsB;AAG7D,SAAQC,KAAK,EAAEC,aAAa,QAAO,uBAAuB;AAC1DD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAMzB,WAAME,kBAAkB,GAAxB,MAAMA,kBAAkB;EAG7BC,YAAoBC,UAA8B,EAASC,IAAe,EAAUC,MAAe;IAA/E,KAAAF,UAAU,GAAVA,UAAU;IAA6B,KAAAC,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAG1F,KAAAC,SAAS,GAAQ,EAAE;IACnB,KAAAC,UAAU,GAAQ,EAAE;IACpB,KAAAC,WAAW,GAAS,IAAI,CAACL,UAAU,CAACM,iBAAiB,EAAE;EAL8C;EAMrGC,QAAQA,CAAA;IAEN,MAAMC,KAAK,GAAG,IAAI,CAACR,UAAU,CAACS,QAAQ,EAAE;IACxC,MAAMC,OAAO,GAAG,IAAIhB,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUc,KAAK;KACjC,CAAC;IAEF,IAAI,CAACP,IAAI,CAACU,GAAG,CAAC,qCAAqC,EAAE;MAAED,OAAO;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CAC9FC,IAAS,IAAI;MACbC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,SAAS,GAAGH,IAAI;MACrB,IAAI,CAACV,UAAU,GAAG;QACjBc,SAAS,EAAE,CAAC;QACZC,WAAW,EAAE,CAAC;QACdC,OAAO,EAAE;OACV;MAED,IAAI,CAACH,SAAS,CAACI,KAAK,CAACC,OAAO,CAACC,IAAI,IAAG;QAClC,IAAIA,IAAI,CAACC,MAAM,IAAI,IAAI,CAACpB,UAAU,EAAE;UAClC,IAAI,CAACA,UAAU,CAACmB,IAAI,CAACC,MAAM,CAAC,EAAE;;MAElC,CAAC,CAAC;MACFC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACtB,UAAU,CAAC,CAACkB,OAAO,CAACE,MAAM,IAAG;QAC5C,IAAI,IAAI,CAACpB,UAAU,CAACoB,MAAM,CAAC,GAAG,CAAC,EAAE;UAC/B,IAAI,CAACrB,SAAS,CAACwB,IAAI,CAAC,GAAGH,MAAM,KAAK,IAAI,CAACpB,UAAU,CAACoB,MAAM,CAAC,GAAG,CAAC;;MAEjE,CAAC,CAAC;MAEF;MACA,IAAI,CAACI,WAAW,EAAE;IAElB,CAAC,EACAC,KAAK,IAAI;MACRd,OAAO,CAACc,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;EAGAD,WAAWA,CAAA;IACT,MAAME,OAAO,GAAG,IAAInC,KAAK,CAAC,UAAU,EAAE;MACpCoC,IAAI,EAAE,KAAK;MACXjB,IAAI,EAAE;QACJkB,MAAM,EAAE,IAAI,CAAC7B,SAAS;QACtB8B,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,YAAY;UACnBpB,IAAI,EAAEW,MAAM,CAACU,MAAM,CAAC,IAAI,CAAC/B,UAAU,CAAC;UACpCgC,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,CAC1B;UACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,CACxB;UACDC,WAAW,EAAE;SACd;OACF;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;;;;KAIpB,CAAC;EACH;CAEF;AA/EY5C,kBAAkB,GAAA6C,UAAA,EAL9BlD,SAAS,CAAC;EACTmD,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWhD,kBAAkB,CA+E9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}