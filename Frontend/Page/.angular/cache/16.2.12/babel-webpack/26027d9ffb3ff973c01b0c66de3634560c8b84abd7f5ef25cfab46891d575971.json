{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class UpdateTaskComponent {\n  constructor() {\n    this.projects = []; // Populate this array with your project data\n    this.updateClicked = false;\n  }\n  ngOnInit() {}\n  updateTaskStatus() {\n    //  this.updateClicked = true;\n    if (this.selectedProject && this.selectedTaskStatus) {\n      const token = JSON.parse(sessionStorage.getItem('key')).token;\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      // Iterate over tasks to update status\n      this.selectedProject.tasks.forEach(task => {\n        // Make HTTP POST request to update task status\n        this.http.post(`http://localhost:8083/api/task/status/${task.task_id}`, {\n          status: this.selectedTaskStatus\n        }, {\n          headers\n        }).subscribe(response => {\n          console.log('Task status updated successfully:', response);\n          // Handle response if needed\n        }, error => {\n          console.error('Error updating task status:', error);\n          // Handle error if needed\n        });\n      });\n    } else {\n      console.error('No project selected or task status not selected.');\n      // Handle case where no project is selected or task status is not selected\n    }\n  }\n  static #_ = this.ɵfac = function UpdateTaskComponent_Factory(t) {\n    return new (t || UpdateTaskComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateTaskComponent,\n    selectors: [[\"app-update-task\"]],\n    decls: 20,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"for\", \"taskId\"], [\"type\", \"number\", \"id\", \"taskId\", \"name\", \"taskId\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", \"name\", \"status\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"COMPLETED\"], [\"value\", \"IN_PROGRESS\"], [\"value\", \"ON_HOLD\"], [\"type\", \"submit\"]],\n    template: function UpdateTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Update Task Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateTaskComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.updateTaskStatus();\n        });\n        i0.ɵɵelementStart(4, \"div\")(5, \"label\", 1);\n        i0.ɵɵtext(6, \"Task ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateTaskComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.taskId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\")(9, \"label\", 3);\n        i0.ɵɵtext(10, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateTaskComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.taskStatus = $event;\n        });\n        i0.ɵɵelementStart(12, \"option\", 5);\n        i0.ɵɵtext(13, \"COMPLETED\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 6);\n        i0.ɵɵtext(15, \"IN PROGRESS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 7);\n        i0.ɵɵtext(17, \"ON HOLD\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"button\", 8);\n        i0.ɵɵtext(19, \"Update Status\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.taskId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.taskStatus);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","UpdateTaskComponent","constructor","projects","updateClicked","ngOnInit","updateTaskStatus","selectedProject","selectedTaskStatus","token","JSON","parse","sessionStorage","getItem","headers","tasks","forEach","task","http","post","task_id","status","subscribe","response","console","log","error","_","_2","selectors","decls","vars","consts","template","UpdateTaskComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdateTaskComponent_Template_form_ngSubmit_3_listener","UpdateTaskComponent_Template_input_ngModelChange_7_listener","$event","taskId","UpdateTaskComponent_Template_select_ngModelChange_11_listener","taskStatus","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\update-task\\update-task.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\update-task\\update-task.component.html"],"sourcesContent":["import { Component,OnInit} from '@angular/core';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\n@Component({\n  selector: 'app-update-task',\n  templateUrl: './update-task.component.html',\n  styleUrls: ['./update-task.component.css']\n})\nexport class UpdateTaskComponent implements OnInit{\n  \n  projects: any[] = []; // Populate this array with your project data\n  updateClicked = false;\n  selectedProject: any;\n  selectedTaskStatus: string;\n  constructors\n  ngOnInit(): void {\n  }\n  updateTaskStatus()\n  {  \n //  this.updateClicked = true;\n   if (this.selectedProject && this.selectedTaskStatus) {\n     const token = JSON.parse(sessionStorage.getItem('key')).token;\n     const headers = new HttpHeaders({\n       'Authorization': `Bearer ${token}`\n     });\n\n     // Iterate over tasks to update status\n     this.selectedProject.tasks.forEach(task => {\n       // Make HTTP POST request to update task status\n       this.http.post<any>(`http://localhost:8083/api/task/status/${task.task_id}`, { status: this.selectedTaskStatus }, { headers })\n         .subscribe(\n           (response) => {\n             console.log('Task status updated successfully:', response);\n             // Handle response if needed\n           },\n           (error) => {\n             console.error('Error updating task status:', error);\n             // Handle error if needed\n           }\n         );\n     });\n   } else {\n     console.error('No project selected or task status not selected.');\n     // Handle case where no project is selected or task status is not selected\n   }\n }\n}\n","<div>\n    <h2>Update Task Status</h2>\n    <form (ngSubmit)=\"updateTaskStatus()\">\n      <div>\n        <label for=\"taskId\">Task ID:</label>\n        <input type=\"number\" id=\"taskId\" name=\"taskId\" [(ngModel)]=\"taskId\">\n      </div>\n      <div>\n        <label for=\"status\">Status:</label>\n        <select id=\"status\" name=\"status\" [(ngModel)]=\"taskStatus\">\n          <option value=\"COMPLETED\">COMPLETED</option>\n          <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n          <option value=\"ON_HOLD\">ON HOLD</option>\n        </select>\n      </div>\n      <button type=\"submit\">Update Status</button>\n    </form>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}