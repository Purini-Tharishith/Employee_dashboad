{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ProfileComponent = class ProfileComponent {\n  constructor(profileService) {\n    this.profileService = profileService;\n    this.editProfile = faUserPen;\n    this.user = faUser;\n    this.userEmail = JSON.parse(sessionStorage.getItem('key')).email;\n    this.loginResponse = sessionStorage.getItem('key');\n    this.skills = [];\n    this.skill = \"\";\n    this.profile = {\n      user_id: JSON.parse(sessionStorage.getItem('key')).user_id,\n      phone_no: '',\n      address: '',\n      department_name: '',\n      gender: '',\n      skillId: []\n    };\n    this.profileInvalid = false;\n    this.profileCreated = true;\n    this.success = false;\n    this.intSet = new Set();\n  }\n  ngOnInit() {\n    this.loadUserProfile();\n  }\n  loadUserProfile() {\n    this.profileService.getUserProfile().subscribe({\n      next: data => {\n        this.userProfile = data;\n        this.skills = data.skills;\n      },\n      error: error => {\n        console.error('Error fetching user profile:', error);\n      }\n    });\n  }\n  onSubmit() {\n    this.profile.skillId = [...this.intSet];\n    console.log('Submitted profile:', this.profile);\n    this.profileService.addUserProfile(this.profile).subscribe({\n      next: res => {\n        console.log(res);\n        this.loadUserProfile();\n        this.success = true;\n      },\n      error: error => {\n        console.log(error);\n        this.profileCreated = false;\n      }\n    });\n    // Here you can send the profile data to your backend server\n  }\n\n  addSkill() {\n    this.profileService.addSkills(this.skill).subscribe({\n      next: data => {\n        this.intSet.add(data.id);\n        console.log(this.intSet);\n      },\n      error: error => {\n        console.error('Error fetching user profile:', error);\n      }\n    });\n  }\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})], ProfileComponent);","map":{"version":3,"names":["Component","ProfileComponent","constructor","profileService","editProfile","faUserPen","user","faUser","userEmail","JSON","parse","sessionStorage","getItem","email","loginResponse","skills","skill","profile","user_id","phone_no","address","department_name","gender","skillId","profileInvalid","profileCreated","success","intSet","Set","ngOnInit","loadUserProfile","getUserProfile","subscribe","next","data","userProfile","error","console","onSubmit","log","addUserProfile","res","addSkill","addSkills","add","id","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit{\n  editProfile=faUserPen;\n  user=faUser;\n  userProfile: any;\n  userEmail:any=JSON.parse(sessionStorage.getItem('key')).email;\n  userId:any;\n  loginResponse:any=sessionStorage.getItem('key');\n  constructor(private profileService: ProfileService) {}\n  ngOnInit() {\n    this.loadUserProfile();\n  }\n  skills:any[]=[];\n  loadUserProfile() {\n    this.profileService.getUserProfile().subscribe({\n      next:\n      (data) => {\n        this.userProfile = data;\n        this.skills=data.skills;\n      },\n      error:\n      (error) => {\n        console.error('Error fetching user profile:', error);\n      }\n  });\n  }\n  skill:string=\"\";\n  profile: any = {\n    user_id: JSON.parse(sessionStorage.getItem('key')).user_id,\n    phone_no: '',\n    address: '',\n    department_name: '',\n    gender: '',\n    skillId: []\n  };\n  profileInvalid=false;\n  profileCreated=true;\n  success=false;\n  onSubmit() {\n    this.profile.skillId=[...this.intSet];\n      console.log('Submitted profile:', this.profile);\n      this.profileService.addUserProfile(this.profile).subscribe({\n        next:\n        (res:any)=>{\n          console.log(res);\n          this.loadUserProfile();\n          this.success=true;\n        },\n        error:\n        (error:any)=>{\n            console.log(error);\n            this.profileCreated=false;\n        }\n      });\n    // Here you can send the profile data to your backend server\n  }\n  intSet = new Set<number>();\n  addSkill() {\n    this.profileService.addSkills(this.skill).subscribe({\n      next:\n      (data) => {\n       this.intSet.add(data.id);\n       console.log(this.intSet);\n      },\n      error:\n      (error) => {\n        console.error('Error fetching user profile:', error);\n      }\n  });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAO3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IANlC,KAAAC,WAAW,GAACC,SAAS;IACrB,KAAAC,IAAI,GAACC,MAAM;IAEX,KAAAC,SAAS,GAAKC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAACC,KAAK;IAE7D,KAAAC,aAAa,GAAKH,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC;IAK/C,KAAAG,MAAM,GAAO,EAAE;IAcf,KAAAC,KAAK,GAAQ,EAAE;IACf,KAAAC,OAAO,GAAQ;MACbC,OAAO,EAAET,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,CAACM,OAAO;MAC1DC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,eAAe,EAAE,EAAE;MACnBC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;KACV;IACD,KAAAC,cAAc,GAAC,KAAK;IACpB,KAAAC,cAAc,GAAC,IAAI;IACnB,KAAAC,OAAO,GAAC,KAAK;IAmBb,KAAAC,MAAM,GAAG,IAAIC,GAAG,EAAU;EAhD2B;EACrDC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAeA,CAAA;IACb,IAAI,CAAC3B,cAAc,CAAC4B,cAAc,EAAE,CAACC,SAAS,CAAC;MAC7CC,IAAI,EACHC,IAAI,IAAI;QACP,IAAI,CAACC,WAAW,GAAGD,IAAI;QACvB,IAAI,CAACnB,MAAM,GAACmB,IAAI,CAACnB,MAAM;MACzB,CAAC;MACDqB,KAAK,EACJA,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;KACH,CAAC;EACF;EAaAE,QAAQA,CAAA;IACN,IAAI,CAACrB,OAAO,CAACM,OAAO,GAAC,CAAC,GAAG,IAAI,CAACI,MAAM,CAAC;IACnCU,OAAO,CAACE,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACtB,OAAO,CAAC;IAC/C,IAAI,CAACd,cAAc,CAACqC,cAAc,CAAC,IAAI,CAACvB,OAAO,CAAC,CAACe,SAAS,CAAC;MACzDC,IAAI,EACHQ,GAAO,IAAG;QACTJ,OAAO,CAACE,GAAG,CAACE,GAAG,CAAC;QAChB,IAAI,CAACX,eAAe,EAAE;QACtB,IAAI,CAACJ,OAAO,GAAC,IAAI;MACnB,CAAC;MACDU,KAAK,EACJA,KAAS,IAAG;QACTC,OAAO,CAACE,GAAG,CAACH,KAAK,CAAC;QAClB,IAAI,CAACX,cAAc,GAAC,KAAK;MAC7B;KACD,CAAC;IACJ;EACF;;EAEAiB,QAAQA,CAAA;IACN,IAAI,CAACvC,cAAc,CAACwC,SAAS,CAAC,IAAI,CAAC3B,KAAK,CAAC,CAACgB,SAAS,CAAC;MAClDC,IAAI,EACHC,IAAI,IAAI;QACR,IAAI,CAACP,MAAM,CAACiB,GAAG,CAACV,IAAI,CAACW,EAAE,CAAC;QACxBR,OAAO,CAACE,GAAG,CAAC,IAAI,CAACZ,MAAM,CAAC;MACzB,CAAC;MACDS,KAAK,EACJA,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;KACH,CAAC;EACF;CACD;AArEYnC,gBAAgB,GAAA6C,UAAA,EAL5B9C,SAAS,CAAC;EACT+C,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWhD,gBAAgB,CAqE5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}