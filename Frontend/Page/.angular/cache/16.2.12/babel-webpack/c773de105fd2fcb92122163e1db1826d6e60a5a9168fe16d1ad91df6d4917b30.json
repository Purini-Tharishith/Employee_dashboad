{"ast":null,"code":"import { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nexport class DefaultDashboardComponent {\n  constructor() {\n    this.projects = [];\n    this.projectCounts = {};\n    this.chartLabels = [];\n    this.chartData = [];\n  }\n  ngOnInit() {\n    this.projectService.getProjects().subscribe(data => {\n      this.projects = data;\n      this.countProjectStatus();\n      this.renderPieChart();\n    }, error => {\n      console.error('Error fetching projects:', error);\n    });\n  }\n  countProjectStatus() {\n    this.projectCounts = {};\n    this.projects.forEach(project => {\n      const status = project.status;\n      this.projectCounts[status] = (this.projectCounts[status] || 0) + 1;\n    });\n    this.chartLabels = Object.keys(this.projectCounts);\n    this.chartData = Object.values(this.projectCounts);\n  }\n  renderPieChart() {\n    // Assuming you have a canvas element with id 'pieChart' in your HTML\n    const pieChartCanvas = document.getElementById('pieChart');\n    const ctx = pieChartCanvas.getContext('2d');\n    new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: this.chartLabels,\n        datasets: [{\n          data: this.chartData,\n          backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)'\n          // Add more colors as needed\n          ]\n        }]\n      },\n\n      options: {\n        // Add chart options here\n      }\n    });\n  }\n  static #_ = this.ɵfac = function DefaultDashboardComponent_Factory(t) {\n    return new (t || DefaultDashboardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DefaultDashboardComponent,\n    selectors: [[\"app-default-dashboard\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[\"id\", \"pieChart\", \"width\", \"400\", \"height\", \"400\"]],\n    template: function DefaultDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"canvas\", 0);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Chart","DefaultDashboardComponent","constructor","projects","projectCounts","chartLabels","chartData","ngOnInit","projectService","getProjects","subscribe","data","countProjectStatus","renderPieChart","error","console","forEach","project","status","Object","keys","values","pieChartCanvas","document","getElementById","ctx","getContext","type","labels","datasets","backgroundColor","options","_","_2","selectors","decls","vars","consts","template","DefaultDashboardComponent_Template","rf","i0","ɵɵelement"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\default-dashboard\\default-dashboard.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\default-dashboard\\default-dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Chart } from 'chart.js';\n@Component({\n  selector: 'app-default-dashboard',\n  templateUrl: './default-dashboard.component.html',\n  styleUrls: ['./default-dashboard.component.css']\n})\nexport class DefaultDashboardComponent {\n  projects: any[] = [];\n  projectCounts: { [status: string]: number } = {};\n  chartLabels: string[] = [];\n  chartData: number[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.projectService.getProjects().subscribe(\n      (data: any[]) => {\n        this.projects = data;\n        this.countProjectStatus();\n        this.renderPieChart();\n      },\n      (error) => {\n        console.error('Error fetching projects:', error);\n      }\n    );\n  }\n\n  countProjectStatus(): void {\n    this.projectCounts = {};\n    this.projects.forEach(project => {\n      const status = project.status;\n      this.projectCounts[status] = (this.projectCounts[status] || 0) + 1;\n    });\n    this.chartLabels = Object.keys(this.projectCounts);\n    this.chartData = Object.values(this.projectCounts);\n  }\n\n  renderPieChart(): void {\n    // Assuming you have a canvas element with id 'pieChart' in your HTML\n    const pieChartCanvas = document.getElementById('pieChart') as HTMLCanvasElement;\n    const ctx = pieChartCanvas.getContext('2d');\n\n    new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: this.chartLabels,\n        datasets: [{\n          data: this.chartData,\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.5)',\n            'rgba(54, 162, 235, 0.5)',\n            'rgba(255, 206, 86, 0.5)',\n            // Add more colors as needed\n          ],\n        }],\n      },\n      options: {\n        // Add chart options here\n      },\n    });\n  }\n}\n","<canvas id=\"pieChart\" width=\"400\" height=\"400\"></canvas>\n\n"],"mappings":"AACA,SAASA,KAAK,QAAQ,UAAU;;AAMhC,OAAM,MAAOC,yBAAyB;EAMpCC,YAAA;IALA,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,aAAa,GAAiC,EAAE;IAChD,KAAAC,WAAW,GAAa,EAAE;IAC1B,KAAAC,SAAS,GAAa,EAAE;EAER;EAEhBC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,CAACC,WAAW,EAAE,CAACC,SAAS,CACxCC,IAAW,IAAI;MACd,IAAI,CAACR,QAAQ,GAAGQ,IAAI;MACpB,IAAI,CAACC,kBAAkB,EAAE;MACzB,IAAI,CAACC,cAAc,EAAE;IACvB,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CACF;EACH;EAEAF,kBAAkBA,CAAA;IAChB,IAAI,CAACR,aAAa,GAAG,EAAE;IACvB,IAAI,CAACD,QAAQ,CAACa,OAAO,CAACC,OAAO,IAAG;MAC9B,MAAMC,MAAM,GAAGD,OAAO,CAACC,MAAM;MAC7B,IAAI,CAACd,aAAa,CAACc,MAAM,CAAC,GAAG,CAAC,IAAI,CAACd,aAAa,CAACc,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACpE,CAAC,CAAC;IACF,IAAI,CAACb,WAAW,GAAGc,MAAM,CAACC,IAAI,CAAC,IAAI,CAAChB,aAAa,CAAC;IAClD,IAAI,CAACE,SAAS,GAAGa,MAAM,CAACE,MAAM,CAAC,IAAI,CAACjB,aAAa,CAAC;EACpD;EAEAS,cAAcA,CAAA;IACZ;IACA,MAAMS,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAsB;IAC/E,MAAMC,GAAG,GAAGH,cAAc,CAACI,UAAU,CAAC,IAAI,CAAC;IAE3C,IAAI1B,KAAK,CAACyB,GAAG,EAAE;MACbE,IAAI,EAAE,KAAK;MACXhB,IAAI,EAAE;QACJiB,MAAM,EAAE,IAAI,CAACvB,WAAW;QACxBwB,QAAQ,EAAE,CAAC;UACTlB,IAAI,EAAE,IAAI,CAACL,SAAS;UACpBwB,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB;UACA;UAAA;SAEH;OACF;;MACDC,OAAO,EAAE;QACP;MAAA;KAEH,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAtDU/B,yBAAyB;EAAA;EAAA,QAAAgC,EAAA,G;UAAzBhC,yBAAyB;IAAAiC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAf,GAAA;MAAA,IAAAe,EAAA;QCPtCC,EAAA,CAAAC,SAAA,gBAAwD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}