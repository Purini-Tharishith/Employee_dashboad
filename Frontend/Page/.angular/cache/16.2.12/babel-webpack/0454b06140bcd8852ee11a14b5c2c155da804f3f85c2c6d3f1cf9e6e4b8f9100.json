{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nexport class CreatetaskComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n  }\n  ngOnInit() {\n    this.taskForm = this.fb.group({\n      name: ['', Validators.required],\n      status: ['', Validators.required],\n      assignDate: ['', Validators.required],\n      completionDate: ['', Validators.required],\n      assignedTo: ['', Validators.required],\n      assignedBy: ['', Validators.required],\n      projectId: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    // Handle form submission\n    let body = {};\n    this.http.post('http://localhost:8083/api/task/create', body).subscribe(response => {\n      console.log(response);\n    });\n    console.log(this.taskForm.value);\n  }\n  static #_ = this.ɵfac = function CreatetaskComponent_Factory(t) {\n    return new (t || CreatetaskComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatetaskComponent,\n    selectors: [[\"app-createtask\"]],\n    decls: 38,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"projectId\"], [\"type\", \"number\", \"id\", \"projectId\", \"formControlName\", \"projectId\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\"], [\"formControlName\", \"status\", \"value\", \"ON_HOLD\"], [\"formControlName\", \"status\", \"value\", \"in_progress\"], [\"formControlName\", \"status\", \"value\", \"completed\"], [\"for\", \"assignDate\"], [\"type\", \"date\", \"id\", \"assignDate\", \"formControlName\", \"assignDate\"], [\"for\", \"completionDate\"], [\"type\", \"date\", \"id\", \"completionDate\", \"formControlName\", \"completionDate\"], [\"for\", \"assignedTo\"], [\"type\", \"text\", \"id\", \"assignedTo\", \"formControlName\", \"assignedTo\"], [\"for\", \"assignedBy\"], [\"type\", \"text\", \"id\", \"assignedBy\", \"formControlName\", \"assignedBy\"], [\"type\", \"submit\"]],\n    template: function CreatetaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreatetaskComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"div\", 1)(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Project ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 7)(14, \"option\", 8);\n        i0.ɵɵtext(15, \"ON_HOLD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"option\", 9);\n        i0.ɵɵtext(17, \"IN_PROGRESS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 10);\n        i0.ɵɵtext(19, \"COMPLETED\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 1)(21, \"label\", 11);\n        i0.ɵɵtext(22, \"Assign Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 1)(25, \"label\", 13);\n        i0.ɵɵtext(26, \"Completion Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 1)(29, \"label\", 15);\n        i0.ɵɵtext(30, \"Assigned To:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 1)(33, \"label\", 17);\n        i0.ɵɵtext(34, \"Assigned By:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 19);\n        i0.ɵɵtext(37, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  \\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    font-weight: bold;\\n  }\\n  \\n\\n  button[_ngcontent-%COMP%] {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 12px 20px;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\\n  \\n  button[_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9tYW5hZ2VyL2NyZWF0ZXRhc2svY3JlYXRldGFzay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1COztFQUVyQjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxpQkFBaUI7RUFDbkI7OztFQUdBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcblxyXG4gIGJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMTJweCAyMHB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICBidXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQ1YTA0OTtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","CreatetaskComponent","constructor","fb","http","ngOnInit","taskForm","group","name","required","status","assignDate","completionDate","assignedTo","assignedBy","projectId","onSubmit","body","post","subscribe","response","console","log","value","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","_2","selectors","decls","vars","consts","template","CreatetaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CreatetaskComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\createtask\\createtask.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\createtask\\createtask.component.html"],"sourcesContent":["import { Component,OnInit  } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-createtask',\n  templateUrl: './createtask.component.html',\n  styleUrls: ['./createtask.component.css']\n})\nexport class CreatetaskComponent implements OnInit {\n   \n  taskForm: FormGroup;\n\n  constructor(private fb: FormBuilder,private http:HttpClient) {}\n\n  ngOnInit(): void {\n    this.taskForm = this.fb.group({\n      name: ['', Validators.required],\n      status: ['', Validators.required],\n      assignDate: ['', Validators.required],\n      completionDate: ['', Validators.required],\n      assignedTo: ['', Validators.required],\n      assignedBy: ['', Validators.required],\n      projectId: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    // Handle form submission\n    let body={\n\n    };\n    this.http.post('http://localhost:8083/api/task/create',body).subscribe((response)=>{\n      console.log(response);\n\n    })\n    console.log(this.taskForm.value);\n  }\n}\n\n","<form [formGroup]=\"taskForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n    <div class=\"form-group\">\n        <div class=\"form-group\">\n            <label for=\"projectId\">Project ID:</label>\n            <input type=\"number\" id=\"projectId\" formControlName=\"projectId\">\n        </div>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\n    </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"status\">Status:</label>\n      <select id=\"status\" formControlName=\"status\">\n        <option formControlName=\"status\" value=\"ON_HOLD\">ON_HOLD</option>\n        <option formControlName=\"status\" value=\"in_progress\">IN_PROGRESS</option>\n        <option formControlName=\"status\" value=\"completed\">COMPLETED</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"assignDate\">Assign Date:</label>\n      <input type=\"date\" id=\"assignDate\" formControlName=\"assignDate\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"completionDate\">Completion Date:</label>\n      <input type=\"date\" id=\"completionDate\" formControlName=\"completionDate\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"assignedTo\">Assigned To:</label>\n      <input type=\"text\" id=\"assignedTo\" formControlName=\"assignedTo\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"assignedBy\">Assigned By:</label>\n      <input type=\"text\" id=\"assignedBy\" formControlName=\"assignedBy\">\n    </div>\n   \n    <button type=\"submit\" >Submit</button>\n  </form>\n  \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}