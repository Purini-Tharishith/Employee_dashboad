{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\nexport let UpdateTaskComponent = class UpdateTaskComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.projects = []; // Populate this array with your project data\n    this.updateClicked = false;\n    this.isCreated = false;\n    this.allEmployee = [];\n    this.tasks = [];\n    this.projectIdControl = new FormControl();\n  }\n  ngOnInit() {\n    this.taskForm = this.fb.group({\n      name: [''],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      projectId: [''],\n      taskId: ['']\n    });\n    this.isCreated = false;\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.get('http://localhost:8082/api/manager/all/users', {\n      headers,\n      responseType: 'json'\n    }).subscribe({\n      next: data => {\n        this.allEmployee = data;\n      },\n      error: error => {\n        console.error('Error fetching data:', error);\n      }\n    });\n    this.http.get('http://localhost:8083/api/project/details', {\n      headers\n    }).subscribe(response => {\n      console.log(response);\n      this.projects = response;\n      //this.projectslength = response.length;\n    });\n  }\n\n  updateProjectStatus() {\n    //  this.updateClicked = true;\n    console.log(\"i am printing taskId\");\n    console.log(this.taskId);\n    console.log(this.taskStatus);\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.put('http://localhost:8083/api/project/status/' + this.projectId, {\n      status: this.projectStatus\n    }, {\n      headers,\n      responseType: 'text'\n    }).subscribe(response => {\n      console.log(response);\n    });\n  }\n  onSubmit() {\n    // Handle form submission\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const email = JSON.parse(sessionStorage.getItem('key')).email;\n    let body = {\n      \"name\": this.taskForm.value.name,\n      \"status\": this.taskForm.value.status,\n      \"assignedDate\": this.taskForm.value.assignDate,\n      \"completionDate\": this.taskForm.value.completionDate,\n      \"assignedTo\": this.taskForm.value.assignedTo,\n      \"assignedBy\": email,\n      \"projectId\": this.taskForm.value.projectId\n    };\n    this.taskId = this.taskForm.value.taskId;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post('http://localhost:8083/api/task/update/' + this.taskId, body, {\n      headers,\n      responseType: 'json'\n    }).subscribe(response => {\n      console.log(response);\n      this.isCreated = true;\n      setTimeout(() => {\n        this.isCreated = false;\n      }, 3000);\n    });\n    console.log(this.taskForm.value);\n  }\n};\nUpdateTaskComponent = __decorate([Component({\n  selector: 'app-update-task',\n  templateUrl: './update-task.component.html',\n  styleUrls: ['./update-task.component.css']\n})], UpdateTaskComponent);","map":{"version":3,"names":["Component","HttpHeaders","FormControl","UpdateTaskComponent","constructor","fb","http","projects","updateClicked","isCreated","allEmployee","tasks","projectIdControl","ngOnInit","taskForm","group","name","status","assignDate","completionDate","assignedTo","projectId","taskId","token","JSON","parse","sessionStorage","getItem","headers","get","responseType","subscribe","next","data","error","console","response","log","updateProjectStatus","taskStatus","put","projectStatus","onSubmit","email","body","value","post","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\update-task\\update-task.component.ts"],"sourcesContent":["import { Component,OnInit} from '@angular/core';\nimport { FormBuilder,  FormGroup,  Validators } from '@angular/forms';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-update-task',\n  templateUrl: './update-task.component.html',\n  styleUrls: ['./update-task.component.css']\n})\nexport class UpdateTaskComponent implements OnInit{\n  \n  projects: any[] = []; // Populate this array with your project data\n  updateClicked = false;\n  selectedProjectId:number;\n  taskId:number;\n  projectId:number;\n  taskStatus:string;\n  taskForm: FormGroup;\n  isCreated= false;\n  projectStatus:string;\n  allEmployee:any[]=[];\n  tasks:any[]=[];\n  projectIdControl = new FormControl();\n  constructor(private fb: FormBuilder,private http:HttpClient) {}\n\n  ngOnInit(): void {\n\n    \n\n    this.taskForm = this.fb.group({\n      name: ['' ],\n      status: [''],\n      assignDate: [''],\n      completionDate: [''],\n      assignedTo: [''],\n      projectId: [''],\n      taskId:['']\n    });\n    this.isCreated=false;\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    this.http.get('http://localhost:8082/api/manager/all/users', { headers, responseType: 'json' }).subscribe(\n      {next: \n       (data: any) => {\n         this.allEmployee=data;\n         \n       },\n       error:\n       (error) => {\n         console.error('Error fetching data:', error);\n       }\n      } );\n\n    this.http.get<any[]>('http://localhost:8083/api/project/details',{headers}).subscribe((response)=>{\n      console.log(response);\n      this.projects = response;\n      //this.projectslength = response.length;\n    })\n  }\n  updateProjectStatus()\n  {  \n //  this.updateClicked = true;\n     console.log(\"i am printing taskId\");\n     console.log(this.taskId);\n     console.log(this.taskStatus);\n     const token = JSON.parse(sessionStorage.getItem('key')).token;\n     const headers = new HttpHeaders({\n       'Authorization': `Bearer ${token}`\n     });\n\n     this.http.put('http://localhost:8083/api/project/status/'+this.projectId ,{ status: this.projectStatus }, { headers,responseType:'text'}).subscribe((response)=>{\n      console.log(response);\n    })\n }\n\n\n onSubmit() {\n  // Handle form submission\n  const token = JSON.parse(sessionStorage.getItem('key')).token;\n  const email = JSON.parse(sessionStorage.getItem('key')).email;\n\n  let body={\n  \"name\": this.taskForm.value.name,\n  \"status\": this.taskForm.value.status,\n  \"assignedDate\": this.taskForm.value.assignDate,\n  \"completionDate\": this.taskForm.value.completionDate,\n  \"assignedTo\": this.taskForm.value.assignedTo,\n  \"assignedBy\": email,\n  \"projectId\": this.taskForm.value.projectId,\n  };\n   \n  this.taskId = this.taskForm.value.taskId;\n \n  const headers = new HttpHeaders({\n    'Authorization': `Bearer ${token}`\n  });\n  this.http.post('http://localhost:8083/api/task/update/'+this.taskId,body, { headers, responseType: 'json' }).subscribe((response)=>{\n    console.log(response);\n    this.isCreated = true;\n    setTimeout(() => {\n      this.isCreated = false;\n    }, 3000); \n\n  })\n  console.log(this.taskForm.value);\n}\n  \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}