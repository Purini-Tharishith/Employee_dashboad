{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { saveAs } from 'file-saver';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../shared-data.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class MychartComponent {\n  constructor(shareddata, http, router) {\n    this.shareddata = shareddata;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    const token = this.shareddata.getToken();\n    if (!token) {\n      this.router.navigateByUrl('/login');\n    }\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.get('http://localhost:8083/api/project/1', {\n      headers,\n      responseType: 'blob'\n    }).subscribe(data => {\n      const blob = new Blob([data], {\n        type: 'application/json'\n      });\n      saveAs(blob, 'filename.json');\n    }, error => {\n      console.error('Error fetching data:', error);\n    });\n    ;\n  }\n  static #_ = this.ɵfac = function MychartComponent_Factory(t) {\n    return new (t || MychartComponent)(i0.ɵɵdirectiveInject(i1.SharedDataService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MychartComponent,\n    selectors: [[\"app-mychart\"]],\n    decls: 2,\n    vars: 0,\n    template: function MychartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"mychart works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","saveAs","MychartComponent","constructor","shareddata","http","router","ngOnInit","token","getToken","navigateByUrl","headers","get","responseType","subscribe","data","blob","Blob","type","error","console","_","i0","ɵɵdirectiveInject","i1","SharedDataService","i2","HttpClient","i3","Router","_2","selectors","decls","vars","template","MychartComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\mychart\\mychart.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\mychart\\mychart.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SharedDataService } from '../../../shared-data.service';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { saveAs } from 'file-saver';\n@Component({\n  selector: 'app-mychart',\n  templateUrl: './mychart.component.html',\n  styleUrls: ['./mychart.component.css']\n})\nexport class MychartComponent implements OnInit{\n  \n  constructor(private shareddata : SharedDataService,private http:HttpClient,private  router : Router){}\n\n  ngOnInit(): void {\n    const token = this.shareddata.getToken();\n    if (!token) {\n      this.router.navigateByUrl('/login')\n    }\n  \n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n \n    this.http.get('http://localhost:8083/api/project/1', { headers, responseType: 'blob' }).subscribe(\n      (data: Blob) => {\n        const blob = new Blob([data], { type: 'application/json' });\n        saveAs(blob, 'filename.json');\n      },\n      (error) => {\n        console.error('Error fetching data:', error);\n      }\n    );;\n  }\n\n}\n","<p>mychart works!</p>\n"],"mappings":"AAEA,SAAqBA,WAAW,QAAO,sBAAsB;AAE7D,SAASC,MAAM,QAAQ,YAAY;;;;;AAMnC,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,UAA8B,EAASC,IAAe,EAAUC,MAAe;IAA/E,KAAAF,UAAU,GAAVA,UAAU;IAA6B,KAAAC,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAErGC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAG,IAAI,CAACJ,UAAU,CAACK,QAAQ,EAAE;IACxC,IAAI,CAACD,KAAK,EAAE;MACV,IAAI,CAACF,MAAM,CAACI,aAAa,CAAC,QAAQ,CAAC;;IAGrC,MAAMC,OAAO,GAAG,IAAIX,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUQ,KAAK;KACjC,CAAC;IAEF,IAAI,CAACH,IAAI,CAACO,GAAG,CAAC,qCAAqC,EAAE;MAAED,OAAO;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CAC9FC,IAAU,IAAI;MACb,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,IAAI,CAAC,EAAE;QAAEG,IAAI,EAAE;MAAkB,CAAE,CAAC;MAC3DjB,MAAM,CAACe,IAAI,EAAE,eAAe,CAAC;IAC/B,CAAC,EACAG,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;IAAC;EACJ;EAAC,QAAAE,CAAA,G;qBAvBUnB,gBAAgB,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhB5B,gBAAgB;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV7Bd,EAAA,CAAAgB,cAAA,QAAG;QAAAhB,EAAA,CAAAiB,MAAA,qBAAc;QAAAjB,EAAA,CAAAkB,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}