{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ManagerProfileComponent = class ManagerProfileComponent {\n  ngOnInit() {}\n  constructor(profileService) {\n    this.profileService = profileService;\n    this.editProfile = faUserPen;\n    this.user = faUser;\n    this.userEmail = sessionStorage.getItem('userEmail');\n    this.loginResponse = sessionStorage.getItem('key');\n    this.skills = [];\n    this.skill = \"\";\n    this.profile = {\n      id: sessionStorage.getItem('id'),\n      phoneNumber: '',\n      address: '',\n      department: '',\n      gender: '',\n      skillId: []\n    };\n    this.profileInvalid = false;\n    this.profileCreated = true;\n    this.success = false;\n    this.intSet = new Set();\n  }\n  ngOnInit() {\n    this.loadUserProfile();\n    console.log(\"oninit\");\n  }\n  loadUserProfile() {\n    this.profileService.getUserProfile().subscribe({\n      next: data => {\n        this.userProfile = data;\n        this.skills = data.allSkills;\n      },\n      error: error => {\n        console.error('Error fetching user profile:', error);\n      }\n    });\n  }\n  onSubmit() {\n    this.profile.skillId = [...this.intSet];\n    console.log('Submitted profile:', this.profile);\n    this.profileService.addUserProfile(this.profile).subscribe({\n      next: res => {\n        console.log(res);\n        this.loadUserProfile();\n        this.success = true;\n      },\n      error: error => {\n        console.log(error);\n        this.profileCreated = false;\n      }\n    });\n    // Here you can send the profile data to your backend server\n  }\n\n  addSkill() {\n    this.profileService.addSkills(this.skill).subscribe({\n      next: data => {\n        this.intSet.add(data.id);\n        console.log(this.intSet);\n      },\n      error: error => {\n        console.error('Error fetching user profile:', error);\n      }\n    });\n  }\n};\nManagerProfileComponent = __decorate([Component({\n  selector: 'app-manager-profile',\n  templateUrl: './manager-profile.component.html',\n  styleUrls: ['./manager-profile.component.css']\n})], ManagerProfileComponent);\nthis.http.post('http://localhost:8081/api/skill/add', skillbody).subscribe(data => {\n  console.log(data);\n  sessionStorage.setItem('skillkey', JSON.stringify(data));\n  this.mySet.add(JSON.parse(sessionStorage.getItem('skillkey')).id);\n  this.skillIdArray = Array.from(this.mySet);\n});\nconsole.log(\"the skill is added\");","map":{"version":3,"names":["Component","ManagerProfileComponent","ngOnInit","constructor","profileService","editProfile","faUserPen","user","faUser","userEmail","sessionStorage","getItem","loginResponse","skills","skill","profile","id","phoneNumber","address","department","gender","skillId","profileInvalid","profileCreated","success","intSet","Set","loadUserProfile","console","log","getUserProfile","subscribe","next","data","userProfile","allSkills","error","onSubmit","addUserProfile","res","addSkill","addSkills","add","__decorate","selector","templateUrl","styleUrls","http","post","skillbody","setItem","JSON","stringify","mySet","parse","skillIdArray","Array","from"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\manager-profile\\manager-profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\n@Component({\n  selector: 'app-manager-profile',\n  templateUrl: './manager-profile.component.html',\n  styleUrls: ['./manager-profile.component.css']\n})\nexport class ManagerProfileComponent implements OnInit{\n  \n\n  ngOnInit(): void {\n      \n  }\n  editProfile=faUserPen;\n  user=faUser;\n  userProfile: any;\n  userEmail:any=sessionStorage.getItem('userEmail');\n  userId:any;\n  loginResponse:any=sessionStorage.getItem('key');\n  constructor(private profileService: ProfileService) {}\n  ngOnInit() {\n    this.loadUserProfile();\n    console.log(\"oninit\");\n  }\n  skills:any[]=[];\n  loadUserProfile() {\n    this.profileService.getUserProfile().subscribe({\n      next:\n      (data) => {\n        this.userProfile = data;\n        this.skills=data.allSkills;\n      },\n      error:\n      (error) => {\n        console.error('Error fetching user profile:', error);\n      }\n  });\n  }\n  skill:string=\"\";\n  profile: any = {\n    id:sessionStorage.getItem('id'),\n    phoneNumber: '',\n    address: '',\n    department: '',\n    gender: '',\n    skillId: []\n  };\n  profileInvalid=false;\n  profileCreated=true;\n  success=false;\n  onSubmit() {\n    this.profile.skillId=[...this.intSet];\n      console.log('Submitted profile:', this.profile);\n      this.profileService.addUserProfile(this.profile).subscribe({\n        next:\n        (res:any)=>{\n          console.log(res);\n          this.loadUserProfile();\n          this.success=true;\n        },\n        error:\n        (error:any)=>{\n            console.log(error);\n            this.profileCreated=false;\n        }\n      });\n    // Here you can send the profile data to your backend server\n  }\n  intSet = new Set<number>();\n  addSkill() {\n    this.profileService.addSkills(this.skill).subscribe({\n      next:\n      (data) => {\n       this.intSet.add(data.id);\n       console.log(this.intSet);\n      },\n      error:\n      (error) => {\n        console.error('Error fetching user profile:', error);\n      }\n  });\n  }\n}\n  \n\n\n this.http.post('http://localhost:8081/api/skill/add',skillbody).subscribe((data)=>{\n  console.log(data);\n  sessionStorage.setItem('skillkey',JSON.stringify(data));\n  this.mySet.add( JSON.parse(sessionStorage.getItem('skillkey')).id);\n  this.skillIdArray = Array.from(this.mySet);\n })\n console.log(\"the skill is added\");\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}