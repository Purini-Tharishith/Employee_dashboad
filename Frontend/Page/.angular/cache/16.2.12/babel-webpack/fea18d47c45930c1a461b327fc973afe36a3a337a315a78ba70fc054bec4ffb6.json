{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction UpdateRoleComponent_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 11);\n    i0.ɵɵtext(1, \" Employee Id is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UpdateRoleComponent_small_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 11);\n    i0.ɵɵtext(1, \" Role is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UpdateRoleComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.showMessage = false;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      userId: ['', [Validators.required]],\n      role: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.registerForm.controls;\n  }\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.userid = this.registerForm.value.userId;\n    // Submit the form data\n    console.log(this.registerForm.value);\n    console.log(this.registerForm.value.role);\n  }\n  postRole() {\n    let body = {\n      \"role\": this.registerForm.value.role\n    };\n    this.http.post('http://localhost:8082/api/admin/update/role/' + this.userid, body).subscribe(response => {\n      console.log(response);\n    });\n  }\n  static #_ = this.ɵfac = function UpdateRoleComponent_Factory(t) {\n    return new (t || UpdateRoleComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateRoleComponent,\n    selectors: [[\"app-update-role\"]],\n    decls: 22,\n    vars: 3,\n    consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"number\", \"formControlName\", \"userId\", \"placeholder\", \"Enter your employee user Id\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"formControlName\", \"role\"], [\"value\", \"\"], [\"value\", \"admin\"], [\"value\", \"manager\"], [\"value\", \"user\"], [\"type\", \"submit\"], [1, \"error-message\"]],\n    template: function UpdateRoleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateRoleComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\");\n        i0.ɵɵtext(4, \"Employee Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵtemplate(6, UpdateRoleComponent_small_6_Template, 2, 0, \"small\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\");\n        i0.ɵɵtext(9, \"Role:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"select\", 5)(11, \"option\", 6);\n        i0.ɵɵtext(12, \"Select Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 7);\n        i0.ɵɵtext(14, \"Admin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 8);\n        i0.ɵɵtext(16, \"Manager\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\", 9);\n        i0.ɵɵtext(18, \"User\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(19, UpdateRoleComponent_small_19_Template, 2, 0, \"small\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 10);\n        i0.ɵɵtext(21, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"userId\"].invalid && (ctx.f[\"userId\"].dirty || ctx.f[\"userId\"].touched));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.f[\"role\"].invalid && (ctx.f[\"role\"].dirty || ctx.f[\"role\"].touched));\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 927:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(4:12) C:\\\\\\\\Users\\\\\\\\Purini Tharishith\\\\\\\\Desktop\\\\\\\\project3\\\\\\\\Page\\\\\\\\src\\\\\\\\app\\\\\\\\modules\\\\\\\\admin\\\\\\\\update-role\\\\\\\\update-role.component.css Missed semicolon\\\\n\\\\n \\\\u001b[90m 2 | \\\\u001b[39m    max-width\\\\u001b[33m:\\\\u001b[39m 400px\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 3 | \\\\u001b[39m    margin-left\\\\u001b[33m:\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 4 | \\\\u001b[39m    padding\\\\u001b[33m:\\\\u001b[39m 20px\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m   | \\\\u001b[39m           \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 5 | \\\\u001b[39m    border\\\\u001b[33m:\\\\u001b[39m 1px solid \\\\u001b[35m#ccc\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 6 | \\\\u001b[39m    border-radius\\\\u001b[33m:\\\\u001b[39m 5px\\\\u001b[33m;\\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[927]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=update-role.component.css.map*/\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","UpdateRoleComponent","constructor","formBuilder","http","router","showMessage","ngOnInit","registerForm","group","userId","required","role","f","controls","onSubmit","invalid","userid","value","console","log","postRole","body","post","subscribe","response","_","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","_2","selectors","decls","vars","consts","template","UpdateRoleComponent_Template","rf","ctx","ɵɵlistener","UpdateRoleComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","UpdateRoleComponent_small_6_Template","UpdateRoleComponent_small_19_Template","ɵɵadvance","ɵɵproperty","dirty","touched"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\admin\\update-role\\update-role.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\admin\\update-role\\update-role.component.html"],"sourcesContent":["import { Component,OnInit} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-update-role',\n  templateUrl: './update-role.component.html',\n  styleUrls: ['./update-role.component.css']\n})\nexport class UpdateRoleComponent implements OnInit {\n  currentRole:any;\n  showMessage: boolean = false;\n  userid:number;\n  constructor(private formBuilder: FormBuilder,private http : HttpClient,private router :Router) { }\n  registerForm: FormGroup;\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      userId: ['', [Validators.required]],\n      role: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      return;\n    }\n    \n    this.userid = this.registerForm.value.userId;\n    // Submit the form data\n    console.log(this.registerForm.value);\n    console.log(this.registerForm.value.role);\n  }\n\n  postRole(){\n    \n    let body = {\n      \"role\": this.registerForm.value.role\n    };\n    this.http.post('http://localhost:8082/api/admin/update/role/'+this.userid, body).subscribe((response)=>{\n      console.log(response);\n    })\n  }\n}\n","<div class=\"form-container\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label>Employee Id</label>\n        <input type=\"number\" formControlName=\"userId\" placeholder=\"Enter your employee user Id\">\n        <small *ngIf=\"f['userId'].invalid && (f['userId'].dirty || f['userId'].touched)\" class=\"error-message\">\n          Employee Id is required\n        </small>\n      </div>\n      <div class=\"form-group\">\n        <label>Role:</label>\n        <select formControlName=\"role\">\n          <option value=\"\">Select Role</option>\n          <option value=\"admin\">Admin</option>\n          <option value=\"manager\">Manager</option>\n          <option value=\"user\">User</option>\n        </select>\n        <small *ngIf=\"f['role'].invalid && (f['role'].dirty || f['role'].touched)\" class=\"error-message\">\n          Role is required\n        </small>\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  </div>\n  "],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICI3DC,EAAA,CAAAC,cAAA,gBAAuG;IACrGD,EAAA,CAAAE,MAAA,gCACF;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;;;IAURH,EAAA,CAAAC,cAAA,gBAAiG;IAC/FD,EAAA,CAAAE,MAAA,yBACF;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;ADVhB,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,WAAwB,EAASC,IAAiB,EAASC,MAAc;IAAzE,KAAAF,WAAW,GAAXA,WAAW;IAAsB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAFrF,KAAAC,WAAW,GAAY,KAAK;EAEqE;EAEjGC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACzCC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACe,QAAQ,CAAC,CAAC;MACnCC,IAAI,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACe,QAAQ;KAC/B,CAAC;EACJ;EAEA,IAAIE,CAACA,CAAA;IAAK,OAAO,IAAI,CAACL,YAAY,CAACM,QAAQ;EAAE;EAE7CC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACP,YAAY,CAACQ,OAAO,EAAE;MAC7B;;IAGF,IAAI,CAACC,MAAM,GAAG,IAAI,CAACT,YAAY,CAACU,KAAK,CAACR,MAAM;IAC5C;IACAS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,YAAY,CAACU,KAAK,CAAC;IACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,YAAY,CAACU,KAAK,CAACN,IAAI,CAAC;EAC3C;EAEAS,QAAQA,CAAA;IAEN,IAAIC,IAAI,GAAG;MACT,MAAM,EAAE,IAAI,CAACd,YAAY,CAACU,KAAK,CAACN;KACjC;IACD,IAAI,CAACR,IAAI,CAACmB,IAAI,CAAC,8CAA8C,GAAC,IAAI,CAACN,MAAM,EAAEK,IAAI,CAAC,CAACE,SAAS,CAAEC,QAAQ,IAAG;MACrGN,OAAO,CAACC,GAAG,CAACK,QAAQ,CAAC;IACvB,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAlCUzB,mBAAmB,EAAAJ,EAAA,CAAA8B,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAhC,EAAA,CAAA8B,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAlC,EAAA,CAAA8B,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBjC,mBAAmB;IAAAkC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCThC5C,EAAA,CAAAC,cAAA,aAA4B;QACSD,EAAA,CAAA8C,UAAA,sBAAAC,sDAAA;UAAA,OAAYF,GAAA,CAAA3B,QAAA,EAAU;QAAA,EAAC;QACtDlB,EAAA,CAAAC,cAAA,aAAwB;QACfD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC1BH,EAAA,CAAAgD,SAAA,eAAwF;QACxFhD,EAAA,CAAAiD,UAAA,IAAAC,oCAAA,mBAEQ;QACVlD,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAAwB;QACfD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACpBH,EAAA,CAAAC,cAAA,iBAA+B;QACZD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACrCH,EAAA,CAAAC,cAAA,iBAAsB;QAAAD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACpCH,EAAA,CAAAC,cAAA,iBAAwB;QAAAD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxCH,EAAA,CAAAC,cAAA,iBAAqB;QAAAD,EAAA,CAAAE,MAAA,YAAI;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAEpCH,EAAA,CAAAiD,UAAA,KAAAE,qCAAA,mBAEQ;QACVnD,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,kBAAsB;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QApBjCH,EAAA,CAAAoD,SAAA,GAA0B;QAA1BpD,EAAA,CAAAqD,UAAA,cAAAR,GAAA,CAAAlC,YAAA,CAA0B;QAIpBX,EAAA,CAAAoD,SAAA,GAAuE;QAAvEpD,EAAA,CAAAqD,UAAA,SAAAR,GAAA,CAAA7B,CAAA,WAAAG,OAAA,KAAA0B,GAAA,CAAA7B,CAAA,WAAAsC,KAAA,IAAAT,GAAA,CAAA7B,CAAA,WAAAuC,OAAA,EAAuE;QAYvEvD,EAAA,CAAAoD,SAAA,IAAiE;QAAjEpD,EAAA,CAAAqD,UAAA,SAAAR,GAAA,CAAA7B,CAAA,SAAAG,OAAA,KAAA0B,GAAA,CAAA7B,CAAA,SAAAsC,KAAA,IAAAT,GAAA,CAAA7B,CAAA,SAAAuC,OAAA,EAAiE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}