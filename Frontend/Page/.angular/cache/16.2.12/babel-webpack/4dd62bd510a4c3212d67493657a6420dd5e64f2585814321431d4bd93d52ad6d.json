{"ast":null,"code":"import { Chart, registerables } from 'node_modules/chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/sidenav\";\nimport * as i4 from \"../header/header.component\";\nimport * as i5 from \"../sidenav/sidenav.component\";\nChart.register(...registerables);\nexport class DashboardMainComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.sideBarOpen = true;\n    this.token = null;\n  }\n  ngOnInit() {\n    this.CheckLogin();\n  }\n  CheckLogin() {\n    const sessionData = sessionStorage.getItem('key');\n    if (sessionData) {\n      const token = JSON.parse(sessionData).token;\n      // Do something with the token\n      if (authtoken == null) {\n        //     this.router.navigateByUrl('/login')\n        //   }\n      } else {\n        // Handle the case when 'key' is not found in session storage\n        this.router.navigateByUrl('/login');\n      }\n    }\n    // public CheckLogin(){\n    //   const authtoken = JSON.parse(sessionStorage.getItem('key')).token;\n    //   if (authtoken==null) {\n    //     this.router.navigateByUrl('/login')\n    //   }\n    // }\n  }\n  // public CheckLogin(){\n  //   const authtoken = JSON.parse(sessionStorage.getItem('key')).token;\n  //   if (authtoken==null) {\n  //     this.router.navigateByUrl('/login')\n  //   }\n  // }\n  sideBarToggler() {\n    this.sideBarOpen = !this.sideBarOpen;\n  }\n  static #_ = this.ɵfac = function DashboardMainComponent_Factory(t) {\n    return new (t || DashboardMainComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardMainComponent,\n    selectors: [[\"app-dashboard-main\"]],\n    decls: 6,\n    vars: 1,\n    consts: [[\"mode\", \"side\", 3, \"opened\"], [3, \"toggleSidebarForMe\"]],\n    template: function DashboardMainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-drawer-container\")(1, \"mat-drawer\", 0);\n        i0.ɵɵelement(2, \"app-sidenav\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-drawer-content\")(4, \"app-header\", 1);\n        i0.ɵɵlistener(\"toggleSidebarForMe\", function DashboardMainComponent_Template_app_header_toggleSidebarForMe_4_listener() {\n          return ctx.sideBarToggler();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"router-outlet\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"opened\", ctx.sideBarOpen);\n      }\n    },\n    dependencies: [i2.RouterOutlet, i3.MatDrawer, i3.MatDrawerContainer, i3.MatDrawerContent, i4.HeaderComponent, i5.SidenavComponent],\n    styles: [\"[_nghost-%COMP%]{\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%;\\n  }\\n  mat-drawer[_ngcontent-%COMP%]{\\n    width: 260px;\\n    background-color: #0f172a;\\n  }\\n  mat-drawer-container[_ngcontent-%COMP%]{\\n    height: 100%;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQtY29tcG9uZW50cy9kYXNoYm9hcmQtbWFpbi9kYXNoYm9hcmQtbWFpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixZQUFZO0VBQ2Q7RUFDQTtJQUNFLFlBQVk7SUFDWix5QkFBeUI7RUFDM0I7RUFDQTtJQUNFLFlBQVk7RUFDZCIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0e1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG4gIG1hdC1kcmF3ZXJ7XHJcbiAgICB3aWR0aDogMjYwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGYxNzJhO1xyXG4gIH1cclxuICBtYXQtZHJhd2VyLWNvbnRhaW5lcntcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","register","DashboardMainComponent","constructor","http","router","sideBarOpen","token","ngOnInit","CheckLogin","sessionData","sessionStorage","getItem","JSON","parse","authtoken","navigateByUrl","sideBarToggler","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","DashboardMainComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","DashboardMainComponent_Template_app_header_toggleSidebarForMe_4_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\dashboard-main\\dashboard-main.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\dashboard-main\\dashboard-main.component.html"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\n\nimport { Router, RouterModule, Routes } from '@angular/router';\nimport {Chart, registerables} from 'node_modules/chart.js';\nChart.register(...registerables);\n\n@Component({\n  selector: 'app-dashboard-main',\n  templateUrl: './dashboard-main.component.html',\n  styleUrls: ['./dashboard-main.component.css']\n})\nexport class DashboardMainComponent implements OnInit{\n  \n  sideBarOpen = true;\n  authtoken: any;\n  constructor(private http : HttpClient,private router : Router){}\n  token: string | null = null;\n  ngOnInit(): void {\n    this.CheckLogin();\n  }\n  \n\n  CheckLogin() {\n    const sessionData = sessionStorage.getItem('key');\n    if (sessionData) {\n      const token = JSON.parse(sessionData).token;\n      // Do something with the token\n      if (authtoken==null) {\n        //     this.router.navigateByUrl('/login')\n        //   }\n    } else {\n      // Handle the case when 'key' is not found in session storage\n      this.router.navigateByUrl('/login')\n    }\n  }\n  \n  // public CheckLogin(){\n  //   const authtoken = JSON.parse(sessionStorage.getItem('key')).token;\n  //   if (authtoken==null) {\n  //     this.router.navigateByUrl('/login')\n  //   }\n  // }\n\n  \n  public sideBarToggler()\n  {\n    this.sideBarOpen = !this.sideBarOpen;\n  }\n  \n}\n","<mat-drawer-container>\n    <mat-drawer mode=\"side\" [opened]=\"sideBarOpen\">\n      <app-sidenav></app-sidenav>\n    </mat-drawer>\n    <mat-drawer-content>\n      <app-header (toggleSidebarForMe)=\"sideBarToggler()\"></app-header>\n      <router-outlet></router-outlet>\n    </mat-drawer-content>\n  </mat-drawer-container>\n"],"mappings":"AAIA,SAAQA,KAAK,EAAEC,aAAa,QAAO,uBAAuB;;;;;;;AAC1DD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAOhC,OAAM,MAAOE,sBAAsB;EAIjCC,YAAoBC,IAAiB,EAASC,MAAe;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAFpD,KAAAC,WAAW,GAAG,IAAI;IAGlB,KAAAC,KAAK,GAAkB,IAAI;EADoC;EAE/DC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAGAA,UAAUA,CAAA;IACR,MAAMC,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC;IACjD,IAAIF,WAAW,EAAE;MACf,MAAMH,KAAK,GAAGM,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAACH,KAAK;MAC3C;MACA,IAAIQ,SAAS,IAAE,IAAI,EAAE;QACnB;QACA;MAAA,CACH,MAAM;QACL;QACA,IAAI,CAACV,MAAM,CAACW,aAAa,CAAC,QAAQ,CAAC;;;IAIvC;IACA;IACA;IACA;IACA;IACA;EAGA;EARA;EACA;EACA;EACA;EACA;EACA;EAGOC,cAAcA,CAAA;IAEnB,IAAI,CAACX,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;EAAC,QAAAY,CAAA,G;qBApCUhB,sBAAsB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtBvB,sBAAsB;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZnCb,EAAA,CAAAe,cAAA,2BAAsB;QAEhBf,EAAA,CAAAgB,SAAA,kBAA2B;QAC7BhB,EAAA,CAAAiB,YAAA,EAAa;QACbjB,EAAA,CAAAe,cAAA,yBAAoB;QACNf,EAAA,CAAAkB,UAAA,gCAAAC,yEAAA;UAAA,OAAsBL,GAAA,CAAAhB,cAAA,EAAgB;QAAA,EAAC;QAACE,EAAA,CAAAiB,YAAA,EAAa;QACjEjB,EAAA,CAAAgB,SAAA,oBAA+B;QACjChB,EAAA,CAAAiB,YAAA,EAAqB;;;QANGjB,EAAA,CAAAoB,SAAA,GAAsB;QAAtBpB,EAAA,CAAAqB,UAAA,WAAAP,GAAA,CAAA3B,WAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}