{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class CreatetaskComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.taskForm = this.fb.group({\n      name: ['', Validators.required],\n      status: ['pending', Validators.required],\n      assignDate: ['', Validators.required],\n      completionDate: ['', Validators.required],\n      assignedTo: ['', Validators.required],\n      assignedBy: ['', Validators.required],\n      projectId: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    // Handle form submission\n    console.log(this.taskForm.value);\n  }\n  static #_ = this.ɵfac = function CreatetaskComponent_Factory(t) {\n    return new (t || CreatetaskComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatetaskComponent,\n    selectors: [[\"app-createtask\"]],\n    decls: 37,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\"], [\"value\", \"pending\"], [\"value\", \"in_progress\"], [\"value\", \"completed\"], [\"for\", \"assignDate\"], [\"type\", \"date\", \"id\", \"assignDate\", \"formControlName\", \"assignDate\"], [\"for\", \"completionDate\"], [\"type\", \"date\", \"id\", \"completionDate\", \"formControlName\", \"completionDate\"], [\"for\", \"assignedTo\"], [\"type\", \"text\", \"id\", \"assignedTo\", \"formControlName\", \"assignedTo\"], [\"for\", \"assignedBy\"], [\"type\", \"text\", \"id\", \"assignedBy\", \"formControlName\", \"assignedBy\"], [\"for\", \"projectId\"], [\"type\", \"text\", \"id\", \"projectId\", \"formControlName\", \"projectId\"], [\"type\", \"submit\"]],\n    template: function CreatetaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreatetaskComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 5)(9, \"option\", 6);\n        i0.ɵɵtext(10, \"Pending\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 7);\n        i0.ɵɵtext(12, \"In Progress\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 8);\n        i0.ɵɵtext(14, \"Completed\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 9);\n        i0.ɵɵtext(17, \"Assign Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 11);\n        i0.ɵɵtext(21, \"Completion Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 1)(24, \"label\", 13);\n        i0.ɵɵtext(25, \"Assigned To:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 1)(28, \"label\", 15);\n        i0.ɵɵtext(29, \"Assigned By:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 1)(32, \"label\", 17);\n        i0.ɵɵtext(33, \"Project ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"button\", 19);\n        i0.ɵɵtext(36, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","CreatetaskComponent","constructor","fb","ngOnInit","taskForm","group","name","required","status","assignDate","completionDate","assignedTo","assignedBy","projectId","onSubmit","console","log","value","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","CreatetaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CreatetaskComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\createtask\\createtask.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\createtask\\createtask.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-createtask',\n  templateUrl: './createtask.component.html',\n  styleUrls: ['./createtask.component.css']\n})\nexport class CreatetaskComponent {\n   \n  taskForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.taskForm = this.fb.group({\n      name: ['', Validators.required],\n      status: ['pending', Validators.required],\n      assignDate: ['', Validators.required],\n      completionDate: ['', Validators.required],\n      assignedTo: ['', Validators.required],\n      assignedBy: ['', Validators.required],\n      projectId: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    // Handle form submission\n    console.log(this.taskForm.value);\n  }\n}\n}\n","<form [formGroup]=\"taskForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"status\">Status:</label>\n      <select id=\"status\" formControlName=\"status\">\n        <option value=\"pending\">Pending</option>\n        <option value=\"in_progress\">In Progress</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"assignDate\">Assign Date:</label>\n      <input type=\"date\" id=\"assignDate\" formControlName=\"assignDate\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"completionDate\">Completion Date:</label>\n      <input type=\"date\" id=\"completionDate\" formControlName=\"completionDate\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"assignedTo\">Assigned To:</label>\n      <input type=\"text\" id=\"assignedTo\" formControlName=\"assignedTo\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"assignedBy\">Assigned By:</label>\n      <input type=\"text\" id=\"assignedBy\" formControlName=\"assignedBy\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"projectId\">Project ID:</label>\n      <input type=\"text\" id=\"projectId\" formControlName=\"projectId\">\n    </div>\n    <button type=\"submit\">Submit</button>\n  </form>\n  \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}