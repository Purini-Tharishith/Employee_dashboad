{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class UpdateTaskComponent {\n  constructor(http) {\n    this.http = http;\n    this.projects = []; // Populate this array with your project data\n    this.updateClicked = false;\n  }\n  ngOnInit() {}\n  updateTaskStatus() {\n    //  this.updateClicked = true;\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.post(`http://localhost:8083/api/task/status/${this.taskId}`, {\n      status: this.taskStatus\n    }, {\n      headers\n    }).subscribe(response => {\n      console.log('Task status updated successfully:', response);\n    }, error => {\n      console.error('Error updating task status:', error);\n    });\n  }\n  static #_ = this.ɵfac = function UpdateTaskComponent_Factory(t) {\n    return new (t || UpdateTaskComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateTaskComponent,\n    selectors: [[\"app-update-task\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [1, \"form-container\"], [1, \"task-id\"], [\"for\", \"taskId\"], [\"type\", \"number\", \"id\", \"taskId\", \"name\", \"taskId\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", \"name\", \"status\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"COMPLETED\"], [\"value\", \"IN_PROGRESS\"], [\"value\", \"ON_HOLD\"], [\"type\", \"submit\"]],\n    template: function UpdateTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateTaskComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.updateTaskStatus();\n        });\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Task ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateTaskComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.taskId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Status:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateTaskComponent_Template_select_ngModelChange_10_listener($event) {\n          return ctx.taskStatus = $event;\n        });\n        i0.ɵɵelementStart(11, \"option\", 7);\n        i0.ɵɵtext(12, \"COMPLETED\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 8);\n        i0.ɵɵtext(14, \"IN PROGRESS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 9);\n        i0.ɵɵtext(16, \"ON HOLD\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵtext(18, \"Update\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.taskId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.taskStatus);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\"form[_ngcontent-%COMP%] {\\n    width: 600px;\\n    margin: 100px;\\n    border: 1px solid #ccc;\\n    border-radius: 10px;\\n    box-shadow: 5px 5px 10px 10px #b7c9d4;\\n    height:200px\\n  }\\n  .form-container[_ngcontent-%COMP%]{\\n    display:flex;\\n    gap:125px;\\n    margin-top: 30px;\\n  }\\n  .task-id[_ngcontent-%COMP%]{\\n    margin-left: 50px;\\n   \\n  }\\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 5px;\\n    font-size: medium;\\n    font-weight: bold;\\n  }\\n  \\n  input[type=\\\"number\\\"][_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 8px;\\n    margin-bottom: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 10px 20px;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    margin-left: 250px;\\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n  }\\n  \\n  \\n\\n  div[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9tYW5hZ2VyL3VwZGF0ZS10YXNrL3VwZGF0ZS10YXNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIscUNBQXFDO0lBQ3JDO0VBQ0Y7RUFDQTtJQUNFLFlBQVk7SUFDWixTQUFTO0lBQ1QsZ0JBQWdCO0VBQ2xCO0VBQ0E7SUFDRSxpQkFBaUI7O0VBRW5CO0VBQ0E7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixpQkFBaUI7RUFDbkI7O0VBRUE7O0lBRUUsV0FBVztJQUNYLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUEscURBQXFEO0VBQ3JEO0lBQ0UsbUJBQW1CO0VBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XHJcbiAgICB3aWR0aDogNjAwcHg7XHJcbiAgICBtYXJnaW46IDEwMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiA1cHggNXB4IDEwcHggMTBweCAjYjdjOWQ0O1xyXG4gICAgaGVpZ2h0OjIwMHB4XHJcbiAgfVxyXG4gIC5mb3JtLWNvbnRhaW5lcntcclxuICAgIGRpc3BsYXk6ZmxleDtcclxuICAgIGdhcDoxMjVweDtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgfVxyXG4gIC50YXNrLWlke1xyXG4gICAgbWFyZ2luLWxlZnQ6IDUwcHg7XHJcbiAgIFxyXG4gIH1cclxuICBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0W3R5cGU9XCJudW1iZXJcIl0sXHJcbiAgc2VsZWN0IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIH1cclxuICBcclxuICBidXR0b25bdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDI1MHB4O1xyXG4gIH1cclxuICBcclxuICBidXR0b25bdHlwZT1cInN1Ym1pdFwiXTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDVhMDQ5O1xyXG4gIH1cclxuICBcclxuICAvKiBPcHRpb25hbDogQWRkIHNvbWUgc3BhY2luZyBiZXR3ZWVuIGZvcm0gZWxlbWVudHMgKi9cclxuICBkaXYge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","UpdateTaskComponent","constructor","http","projects","updateClicked","ngOnInit","updateTaskStatus","token","JSON","parse","sessionStorage","getItem","headers","post","taskId","status","taskStatus","subscribe","response","console","log","error","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","UpdateTaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UpdateTaskComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","UpdateTaskComponent_Template_input_ngModelChange_6_listener","$event","UpdateTaskComponent_Template_select_ngModelChange_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\update-task\\update-task.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\update-task\\update-task.component.html"],"sourcesContent":["import { Component,OnInit} from '@angular/core';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\n@Component({\n  selector: 'app-update-task',\n  templateUrl: './update-task.component.html',\n  styleUrls: ['./update-task.component.css']\n})\nexport class UpdateTaskComponent implements OnInit{\n  \n  projects: any[] = []; // Populate this array with your project data\n  updateClicked = false;\n  taskId:number;\n  taskStatus:string;\n  constructor(private http: HttpClient){}\n  ngOnInit(): void {\n  }\n  updateTaskStatus()\n  {  \n //  this.updateClicked = true;\n \n     const token = JSON.parse(sessionStorage.getItem('key')).token;\n     const headers = new HttpHeaders({\n       'Authorization': `Bearer ${token}`\n     });\n\n       this.http.post<any>(`http://localhost:8083/api/task/status/${this.taskId}`, { status: this.taskStatus}, { headers })\n         .subscribe(\n           (response) => {\n             console.log('Task status updated successfully:', response);\n           },\n           (error) => {\n             console.error('Error updating task status:', error);\n      \n           }\n         );\n }\n}\n","<div>\n    <form (ngSubmit)=\"updateTaskStatus()\">\n      <div class=\"form-container\">\n        <div class=\"task-id\">\n        <label for=\"taskId\">Task ID:</label>\n        <input type=\"number\" id=\"taskId\" name=\"taskId\" [(ngModel)]=\"taskId\">\n      </div>\n      <div>\n        <label for=\"status\">Status:</label>\n        <select id=\"status\" name=\"status\" [(ngModel)]=\"taskStatus\">\n          <option value=\"COMPLETED\">COMPLETED</option>\n          <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n          <option value=\"ON_HOLD\">ON HOLD</option>\n        </select>\n      </div>\n    </div>\n      <button type=\"submit\">Update</button>\n    </form>\n  </div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}