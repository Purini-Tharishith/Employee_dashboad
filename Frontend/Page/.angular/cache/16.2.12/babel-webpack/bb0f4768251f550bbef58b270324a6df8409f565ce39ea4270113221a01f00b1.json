{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { faUser, faUserPen } from '@fortawesome/free-solid-svg-icons';\nexport let ManagerProfileComponent = class ManagerProfileComponent {\n  constructor(profileService) {\n    this.profileService = profileService;\n    this.editProfile = faUserPen;\n    this.user = faUser;\n    this.userEmail = sessionStorage.getItem('userEmail');\n    this.loginResponse = sessionStorage.getItem('key');\n    this.skills = [];\n    this.skill = \"\";\n    this.profile = {\n      id: sessionStorage.getItem('id'),\n      phoneNumber: '',\n      address: '',\n      department: '',\n      gender: '',\n      skillId: []\n    };\n    this.profileInvalid = false;\n    this.profileCreated = true;\n    this.success = false;\n    this.intSet = new Set();\n  }\n  ngOnInit() {\n    this.loadUserProfile();\n    console.log(\"oninit\");\n  }\n  loadUserProfile() {\n    this.profileService.getUserProfile().subscribe({\n      next: data => {\n        this.userProfile = data;\n        this.skills = data.allSkills;\n      },\n      error: error => {\n        console.error('Error fetching user profile:', error);\n      }\n    });\n  }\n  onSubmit() {\n    this.profile.skillId = [...this.intSet];\n    console.log('Submitted profile:', this.profile);\n    this.profileService.addUserProfile(this.profile).subscribe({\n      next: res => {\n        console.log(res);\n        this.loadUserProfile();\n        this.success = true;\n      },\n      error: error => {\n        console.log(error);\n        this.profileCreated = false;\n      }\n    });\n    // Here you can send the profile data to your backend server\n  }\n\n  addSkill() {\n    this.profileService.addSkills(this.skill).subscribe({\n      next: data => {\n        this.intSet.add(data.id);\n        console.log(this.intSet);\n      },\n      error: error => {\n        console.error('Error fetching user profile:', error);\n      }\n    });\n  }\n};\nManagerProfileComponent = __decorate([Component({\n  selector: 'app-manager-profile',\n  templateUrl: './manager-profile.component.html',\n  styleUrls: ['./manager-profile.component.css']\n})], ManagerProfileComponent);","map":{"version":3,"names":["Component","faUser","faUserPen","ManagerProfileComponent","constructor","profileService","editProfile","user","userEmail","sessionStorage","getItem","loginResponse","skills","skill","profile","id","phoneNumber","address","department","gender","skillId","profileInvalid","profileCreated","success","intSet","Set","ngOnInit","loadUserProfile","console","log","getUserProfile","subscribe","next","data","userProfile","allSkills","error","onSubmit","addUserProfile","res","addSkill","addSkills","add","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\manager-profile\\manager-profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { ProfileService } from '../../service/profile.service';\nimport { faUser, faUserPen } from '@fortawesome/free-solid-svg-icons';\n@Component({\n  selector: 'app-manager-profile',\n  templateUrl: './manager-profile.component.html',\n  styleUrls: ['./manager-profile.component.css']\n})\nexport class ManagerProfileComponent implements OnInit{\n  editProfile=faUserPen;\n  user=faUser;\n  userProfile: any;\n  userEmail:any=sessionStorage.getItem('userEmail');\n  userId:any;\n  loginResponse:any=sessionStorage.getItem('key');\n  constructor(private profileService: ProfileService) {}\n  ngOnInit() {\n    this.loadUserProfile();\n    console.log(\"oninit\");\n  }\n  skills:any[]=[];\n  loadUserProfile() {\n    this.profileService.getUserProfile().subscribe({\n      next:\n      (data) => {\n        this.userProfile = data;\n        this.skills=data.allSkills;\n      },\n      error:\n      (error) => {\n        console.error('Error fetching user profile:', error);\n      }\n  });\n  }\n  skill:string=\"\";\n  profile: any = {\n    id:sessionStorage.getItem('id'),\n    phoneNumber: '',\n    address: '',\n    department: '',\n    gender: '',\n    skillId: []\n  };\n  profileInvalid=false;\n  profileCreated=true;\n  success=false;\n  onSubmit() {\n    this.profile.skillId=[...this.intSet];\n      console.log('Submitted profile:', this.profile);\n      this.profileService.addUserProfile(this.profile).subscribe({\n        next:\n        (res:any)=>{\n          console.log(res);\n          this.loadUserProfile();\n          this.success=true;\n        },\n        error:\n        (error:any)=>{\n            console.log(error);\n            this.profileCreated=false;\n        }\n      });\n    // Here you can send the profile data to your backend server\n  }\n  intSet = new Set<number>();\n  addSkill() {\n    this.profileService.addSkills(this.skill).subscribe({\n      next:\n      (data) => {\n       this.intSet.add(data.id);\n       console.log(this.intSet);\n      },\n      error:\n      (error) => {\n        console.error('Error fetching user profile:', error);\n      }\n  });\n  }\n}\n  \n\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,MAAM,EAAEC,SAAS,QAAQ,mCAAmC;AAM9D,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAOlCC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IANlC,KAAAC,WAAW,GAACJ,SAAS;IACrB,KAAAK,IAAI,GAACN,MAAM;IAEX,KAAAO,SAAS,GAAKC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IAEjD,KAAAC,aAAa,GAAKF,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC;IAM/C,KAAAE,MAAM,GAAO,EAAE;IAcf,KAAAC,KAAK,GAAQ,EAAE;IACf,KAAAC,OAAO,GAAQ;MACbC,EAAE,EAACN,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;MAC/BM,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;KACV;IACD,KAAAC,cAAc,GAAC,KAAK;IACpB,KAAAC,cAAc,GAAC,IAAI;IACnB,KAAAC,OAAO,GAAC,KAAK;IAmBb,KAAAC,MAAM,GAAG,IAAIC,GAAG,EAAU;EAjD2B;EACrDC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB;EAEAF,eAAeA,CAAA;IACb,IAAI,CAACtB,cAAc,CAACyB,cAAc,EAAE,CAACC,SAAS,CAAC;MAC7CC,IAAI,EACHC,IAAI,IAAI;QACP,IAAI,CAACC,WAAW,GAAGD,IAAI;QACvB,IAAI,CAACrB,MAAM,GAACqB,IAAI,CAACE,SAAS;MAC5B,CAAC;MACDC,KAAK,EACJA,KAAK,IAAI;QACRR,OAAO,CAACQ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;KACH,CAAC;EACF;EAaAC,QAAQA,CAAA;IACN,IAAI,CAACvB,OAAO,CAACM,OAAO,GAAC,CAAC,GAAG,IAAI,CAACI,MAAM,CAAC;IACnCI,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACf,OAAO,CAAC;IAC/C,IAAI,CAACT,cAAc,CAACiC,cAAc,CAAC,IAAI,CAACxB,OAAO,CAAC,CAACiB,SAAS,CAAC;MACzDC,IAAI,EACHO,GAAO,IAAG;QACTX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;QAChB,IAAI,CAACZ,eAAe,EAAE;QACtB,IAAI,CAACJ,OAAO,GAAC,IAAI;MACnB,CAAC;MACDa,KAAK,EACJA,KAAS,IAAG;QACTR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;QAClB,IAAI,CAACd,cAAc,GAAC,KAAK;MAC7B;KACD,CAAC;IACJ;EACF;;EAEAkB,QAAQA,CAAA;IACN,IAAI,CAACnC,cAAc,CAACoC,SAAS,CAAC,IAAI,CAAC5B,KAAK,CAAC,CAACkB,SAAS,CAAC;MAClDC,IAAI,EACHC,IAAI,IAAI;QACR,IAAI,CAACT,MAAM,CAACkB,GAAG,CAACT,IAAI,CAAClB,EAAE,CAAC;QACxBa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,MAAM,CAAC;MACzB,CAAC;MACDY,KAAK,EACJA,KAAK,IAAI;QACRR,OAAO,CAACQ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;KACH,CAAC;EACF;CACD;AAtEYjC,uBAAuB,GAAAwC,UAAA,EALnC3C,SAAS,CAAC;EACT4C,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACW3C,uBAAuB,CAsEnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}