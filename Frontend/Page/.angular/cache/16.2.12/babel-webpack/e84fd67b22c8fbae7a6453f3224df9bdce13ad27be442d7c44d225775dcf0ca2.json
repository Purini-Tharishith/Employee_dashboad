{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { timer } from 'rxjs';\nimport { map, takeWhile } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.invalidCredential = false;\n  }\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      \"email\": new FormControl(null, [Validators.required, Validators.email]),\n      \"password\": new FormControl(null, [Validators.required, Validators.minLength(8), Validators.maxLength(12)])\n    });\n  }\n  login() {\n    if (this.loginForm.valid) {\n      this.http.post(\"http://localhost:8082/api/signin\", this.loginForm.value, {\n        responseType: 'json'\n      }).subscribe({\n        next: data => {\n          console.log(data);\n          this.invalidCredential = false;\n          sessionStorage.setItem('key', JSON.stringify(data));\n          console.log(JSON.parse(sessionStorage.getItem('key')).user_id);\n          if (data.authority == \"[USER]\") {\n            // Navigate to the dashboard page\n            this.router.navigateByUrl('/dashboard');\n          } else if (data.authority == \"[ADMIN]\") {\n            this.router.navigateByUrl('/admindashboard');\n          }\n          // this.startSessionTimer();\n          else {\n            this.router.navigateByUrl('/managerdashboard');\n          }\n        },\n        error: error => {\n          this.invalidCredential = true;\n        }\n      });\n    }\n  }\n  ClickOnLogin() {\n    if (this.loginForm.valid) {\n      this.login();\n      console.log(this.loginForm);\n    } else {\n      this.invalidCredential = true;\n    }\n  }\n  startSessionTimer() {\n    const sessionDuration = 1 * 60 * 1000; // 30 minutes in milliseconds\n    const sessionExpiry = new Date().getTime() + sessionDuration;\n    this.sessionTimer$ = timer(0, 1000).pipe(map(() => sessionExpiry - new Date().getTime()), takeWhile(timeLeft => timeLeft > 0));\n    this.sessionTimer$.subscribe(() => {\n      // Session expired, logout user\n      this.logout();\n    });\n  }\n  logout() {\n    sessionStorage.removeItem('key');\n    sessionStorage.removeItem('taskkey');\n    this.router.navigateByUrl('/login');\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"login\"]],\n    decls: 0,\n    vars: 0,\n    template: function LoginComponent_Template(rf, ctx) {},\n    styles: [\".container[_ngcontent-%COMP%]{\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  min-height: 100vh;\\n}\\n.login-container[_ngcontent-%COMP%] {\\n  \\n\\n  min-width: 400px;\\n  padding: 20px;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n}\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\n  margin-bottom: 15px;\\n  width:300px\\n}\\nbutton[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  \\n\\n  background-color: #3C8DEE;\\n  color: #fff;\\n  border: none;\\n  border-radius: 3px;\\n  cursor: pointer;\\n  width:300px\\n}\\nbutton[_ngcontent-%COMP%]:hover{\\n  background-color:#5DADE2\\n}\\ninput[_ngcontent-%COMP%]{\\n  padding:5px;\\n  border-radius:4px;\\n}\\na[_ngcontent-%COMP%]{\\n  text-decoration:none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxzQkFBc0I7RUFDdEIsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHVDQUF1QztBQUN6QztBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CO0FBQ0Y7QUFDQTtFQUNFLGFBQWE7RUFDYiwrQkFBK0I7RUFDL0IseUJBQXlCO0VBQ3pCLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZjtBQUNGO0FBQ0E7RUFDRTtBQUNGO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxvQkFBb0I7QUFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtaW4taGVpZ2h0OiAxMDB2aDtcclxufVxyXG4ubG9naW4tY29udGFpbmVyIHtcclxuICAvKiBtYXJnaW4tdG9wOjMwMHB4OyAqL1xyXG4gIG1pbi13aWR0aDogNDAwcHg7XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbn1cclxuLmZvcm0tZ3JvdXAgaW5wdXR7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICB3aWR0aDozMDBweFxyXG59XHJcbmJ1dHRvbiB7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwOyAqL1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzQzhERUU7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgd2lkdGg6MzAwcHhcclxufVxyXG5idXR0b246aG92ZXJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjojNURBREUyXHJcbn1cclxuaW5wdXR7XHJcbiAgcGFkZGluZzo1cHg7XHJcbiAgYm9yZGVyLXJhZGl1czo0cHg7XHJcbn1cclxuYXtcclxuICB0ZXh0LWRlY29yYXRpb246bm9uZTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","timer","map","takeWhile","LoginComponent","constructor","http","router","invalidCredential","ngOnInit","loginForm","required","email","minLength","maxLength","login","valid","post","value","responseType","subscribe","next","data","console","log","sessionStorage","setItem","JSON","stringify","parse","getItem","user_id","authority","navigateByUrl","error","ClickOnLogin","startSessionTimer","sessionDuration","sessionExpiry","Date","getTime","sessionTimer$","pipe","timeLeft","logout","removeItem","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","styles"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { timer } from 'rxjs';\nimport { map, takeWhile } from 'rxjs/operators'; \n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  private sessionTimer$: Observable<number>;\n  firstName : any ;\n  lastName: any;\n  token : any;\n  email: any;\n  user_id:number;\n  loginForm : FormGroup;\n  invalidCredential: boolean =false;\n  constructor(private http: HttpClient,private router : Router){\n\n  }\n  ngOnInit(): void {\n     this.loginForm = new FormGroup({\n       \"email\": new FormControl(null,[Validators.required,Validators.email]),\n       \"password\": new FormControl(null,[Validators.required,Validators.minLength(8),Validators.maxLength(12)])\n     })\n  }\n  \n  public login()\n  { \n    if(this.loginForm.valid){\n    this.http.post(\"http://localhost:8082/api/signin\", this.loginForm.value , {responseType:'json'}).subscribe({\n      next : (data: any) => {\n        console.log(data);\n        this.invalidCredential = false;\n        sessionStorage.setItem('key',JSON.stringify(data));\n        console.log(JSON.parse(sessionStorage.getItem('key')).user_id);\n       \n        if(data.authority == \"[USER]\"){\n        // Navigate to the dashboard page\n        this.router.navigateByUrl('/dashboard');\n        }\n        else if(data.authority == \"[ADMIN]\"){\n          this.router.navigateByUrl('/admindashboard');\n        }\n       // this.startSessionTimer();\n       else{\n        this.router.navigateByUrl('/managerdashboard');\n       }\n      },\n      \n      error:(error : any) => {\n        this.invalidCredential = true;\n      }\n    }\n    );\n  }  \n  }\n  \n  public ClickOnLogin()\n  {  \n    if(this.loginForm.valid){\n    this.login();\n    console.log(this.loginForm);\n    }\n    else{\n      this.invalidCredential=true;\n    }\n  }\n  \n\n  private startSessionTimer(): void {\n    const sessionDuration = 1 * 60 * 1000; // 30 minutes in milliseconds\n    const sessionExpiry = new Date().getTime() + sessionDuration;\n\n    this.sessionTimer$ = timer(0, 1000).pipe(\n      map(() => sessionExpiry - new Date().getTime()),\n      takeWhile(timeLeft => timeLeft > 0)\n    );\n\n    this.sessionTimer$.subscribe(() => {\n      // Session expired, logout user\n      this.logout();\n    });\n  }\n\n    logout(){\n      sessionStorage.removeItem('key');\n      sessionStorage.removeItem('taskkey');\n      this.router.navigateByUrl('/login');\n    }\n\n \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}