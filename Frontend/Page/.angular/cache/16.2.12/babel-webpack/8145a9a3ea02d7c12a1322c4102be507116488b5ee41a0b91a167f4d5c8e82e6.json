{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Chart, registerables } from 'node_modules/chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../shared-data.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nChart.register(...registerables);\nexport class DashboardComponent {\n  constructor(shareddata, http, router) {\n    this.shareddata = shareddata;\n    this.http = http;\n    this.router = router;\n    this.labeldata = [];\n    this.taskCounts = {};\n  }\n  ngOnInit() {\n    const token = this.shareddata.getToken();\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.get('http://localhost:8083/api/project/1', {\n      headers,\n      responseType: 'json'\n    }).subscribe(data => {\n      console.log(data);\n      this.chartdata = data;\n      this.shareddata.setProjectDeatils(data);\n      this.taskCounts = {\n        COMPLETED: 0,\n        IN_PROGRESS: 0,\n        ON_HOLD: 0\n      };\n      this.chartdata.tasks.forEach(task => {\n        if (task.status in this.taskCounts) {\n          this.taskCounts[task.status]++;\n        }\n      });\n      Object.keys(this.taskCounts).forEach(status => {\n        if (this.taskCounts[status] > 0) {\n          this.labeldata.push(`${status} (${this.taskCounts[status]})`);\n        }\n      });\n      // Render chart\n      this.renderChart();\n    }, error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n  renderChart() {\n    const myChart = new Chart('piechart', {\n      type: 'pie',\n      data: {\n        labels: this.labeldata,\n        datasets: [{\n          label: '# of Tasks',\n          data: Object.values(this.taskCounts),\n          backgroundColor: ['rgba(255, 140, 0, 0.2)', 'rgba(139, 0, 0, 0.2)', 'rgba(0, 0, 139, 0.2)'],\n          borderColor: ['rgba(255, 140, 0, 0.2)', 'rgba(139, 0, 0, 0.2)', 'rgba(0, 0, 139, 0.2)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            display: false\n          }\n        }\n      }\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.SharedDataService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 10,\n    vars: 0,\n    consts: [[1, \"container-fluid\", \"page\"], [1, \"d-flex\", \"page__box\", \"p-3\", \"mt-2\"], [1, \"page__content\", \"shadow\", \"p-3\"], [1, \"page__content-data\"], [1, \"row\"], [1, \"col-lg-6\"], [\"id\", \"piechart\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"h2\");\n        i0.ɵɵtext(8, \"Tasks Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"canvas\", 6);\n        i0.ɵɵelementEnd()()()()();\n      }\n    },\n    styles: [\".page[_ngcontent-%COMP%] {\\n    color: white;\\n    padding: 0 1rem;\\n    background: #f1f5f9;\\n  }\\n  \\n  .page__box[_ngcontent-%COMP%] {\\n    min-height: 120px;\\n    background: #1e293b;\\n    margin: 0 -1rem;\\n    font-size: 36px;\\n  }\\n  \\n  .page__content[_ngcontent-%COMP%] {\\n    min-height: calc(100vh - 178px);\\n    \\n    margin-top: -2rem;\\n    background: white;\\n    color: black;\\n  }\\n  \\n  .row[_ngcontent-%COMP%]{\\n     width : 1000px;\\n     height: auto;\\n     \\n\\n     \\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQtY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGVBQWU7RUFDakI7O0VBRUE7SUFDRSwrQkFBK0I7O0lBRS9CLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsWUFBWTtFQUNkOztFQUVBO0tBQ0csY0FBYztLQUNkLFlBQVk7S0FDWix3QkFBd0I7O0VBRTNCIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2Uge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgcGFkZGluZzogMCAxcmVtO1xyXG4gICAgYmFja2dyb3VuZDogI2YxZjVmOTtcclxuICB9XHJcbiAgXHJcbiAgLnBhZ2VfX2JveCB7XHJcbiAgICBtaW4taGVpZ2h0OiAxMjBweDtcclxuICAgIGJhY2tncm91bmQ6ICMxZTI5M2I7XHJcbiAgICBtYXJnaW46IDAgLTFyZW07XHJcbiAgICBmb250LXNpemU6IDM2cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5wYWdlX19jb250ZW50IHtcclxuICAgIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxNzhweCk7XHJcbiAgICBcclxuICAgIG1hcmdpbi10b3A6IC0ycmVtO1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC5yb3d7XHJcbiAgICAgd2lkdGggOiAxMDAwcHg7XHJcbiAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgIC8qIG1hcmdpbi1sZWZ0OiA1MDBweDsgKi9cclxuICAgICBcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HttpHeaders","Chart","registerables","register","DashboardComponent","constructor","shareddata","http","router","labeldata","taskCounts","ngOnInit","token","getToken","headers","get","responseType","subscribe","data","console","log","chartdata","setProjectDeatils","COMPLETED","IN_PROGRESS","ON_HOLD","tasks","forEach","task","status","Object","keys","push","renderChart","error","myChart","type","labels","datasets","label","values","backgroundColor","borderColor","borderWidth","options","scales","y","display","_","i0","ɵɵdirectiveInject","i1","SharedDataService","i2","HttpClient","i3","Router","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\dashboard\\dashboard.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\components\\dashboard-components\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SharedDataService } from '../../../shared-data.service';\n\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport {Chart, registerables} from 'node_modules/chart.js';\nChart.register(...registerables);\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent  implements OnInit{\n  \n  \n  constructor(private shareddata : SharedDataService,private http:HttpClient,private  router : Router){}\n\n  chartdata : any ;\n  labeldata: any[]=[];\n  taskCounts: any = {};\n\n  ngOnInit(): void {   \n\n    const token = this.shareddata.getToken();\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n \n    this.http.get('http://localhost:8083/api/project/1', { headers, responseType: 'json' }).subscribe(\n      (data: any) => {\n       console.log(data);\n       this.chartdata = data;\n       this.shareddata.setProjectDeatils(data);\n       this.taskCounts = {\n        COMPLETED: 0,\n        IN_PROGRESS: 0,\n        ON_HOLD: 0\n      };\n\n      this.chartdata.tasks.forEach(task => {\n        if (task.status in this.taskCounts) {\n          this.taskCounts[task.status]++;\n        }\n      });\n      Object.keys(this.taskCounts).forEach(status => {\n        if (this.taskCounts[status] > 0) {\n          this.labeldata.push(`${status} (${this.taskCounts[status]})`);\n        }\n      });\n\n      // Render chart\n      this.renderChart();\n\n      },\n      (error) => {\n        console.error('Error fetching data:', error);\n      }\n    );\n  }\n\n\n  renderChart() {\n    const myChart = new Chart('piechart', {\n      type: 'pie',\n      data: {\n        labels: this.labeldata,\n        datasets: [{\n          label: '# of Tasks',\n          data: Object.values(this.taskCounts),\n          backgroundColor: [\n            'rgba(255, 140, 0, 0.2)',  \n            'rgba(139, 0, 0, 0.2)',     \n            'rgba(0, 0, 139, 0.2)'     \n        ],\n        borderColor: [\n          'rgba(255, 140, 0, 0.2)',  \n          'rgba(139, 0, 0, 0.2)',     \n          'rgba(0, 0, 139, 0.2)'  \n        ]\n          \n        ,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            display: false\n          }\n        }\n      }\n    });\n   }\n \n}\n","\n<div class=\"container-fluid page\">\n    <div class=\"d-flex page__box p-3 mt-2\">Dashboard</div>\n    <div class=\"page__content shadow p-3 \">\n      <div class=\"page__content-data \">\n        <div class=\"row\">\n          <div class=\"col-lg-6\">\n              <h2>Tasks Chart</h2>\n              <canvas id =\"piechart\"></canvas>\n          </div>      \n      </div>\n      </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}