{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { HttpHeaders } from '@angular/common/http';\nexport let NewmanagerComponent = class NewmanagerComponent {\n  constructor(formBuilder, http, router, sharedData) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.sharedData = sharedData;\n    this.showMessage = false;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      role: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.registerForm.controls;\n  }\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      return;\n    }\n    // Submit the form data\n    console.log(this.registerForm.value);\n    console.log(this.registerForm.value.role);\n    this.allEmployee();\n  }\n  allEmployee() {\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    if (this.registerForm.value.role == \"admin\") {\n      this.http.post('http://localhost:8082/api/admin/new/admin', this.registerForm.value, {\n        headers\n      }).subscribe(data => {\n        console.log(data);\n        this.currentRole = this.registerForm.value.role;\n        this.showMessage = true;\n        setTimeout(() => {\n          this.showMessage = false;\n        }, 5000);\n        // sessionStorage.setItem('newAdmin-key',JSON.stringify(data));\n      });\n    } else if (this.registerForm.value.role == \"manager\") {\n      this.http.post('http://localhost:8082/api/admin/new/manager', this.registerForm.value, {\n        headers\n      }).subscribe(data => {\n        console.log(data);\n        this.currentRole = this.registerForm.value.role;\n        this.showMessage = true;\n        setTimeout(() => {\n          this.showMessage = false;\n        }, 5000);\n        //sessionStorage.setItem('newManager-key',JSON.stringify(data));\n      });\n    } else {\n      this.http.post('http://localhost:8082/api/admin/new/user', this.registerForm.value, {\n        headers\n      }).subscribe(data => {\n        console.log(data);\n        this.currentRole = this.registerForm.value.role;\n        this.showMessage = true;\n        setTimeout(() => {\n          this.showMessage = false;\n        }, 5000);\n      });\n    }\n  }\n};\nNewmanagerComponent = __decorate([Component({\n  selector: 'app-newmanager',\n  templateUrl: './newmanager.component.html',\n  styleUrls: ['./newmanager.component.css']\n})], NewmanagerComponent);","map":{"version":3,"names":["Component","Validators","HttpHeaders","NewmanagerComponent","constructor","formBuilder","http","router","sharedData","showMessage","ngOnInit","registerForm","group","firstName","required","lastName","email","password","minLength","role","f","controls","onSubmit","invalid","console","log","value","allEmployee","token","JSON","parse","sessionStorage","getItem","headers","post","subscribe","data","currentRole","setTimeout","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\admin\\newEmployee\\newmanager.component.ts"],"sourcesContent":["import { Component ,OnInit} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { SharedDataService } from '../../../shared-data.service';\n@Component({\n  selector: 'app-newmanager',\n  templateUrl: './newmanager.component.html',\n  styleUrls: ['./newmanager.component.css']\n})\nexport class NewmanagerComponent implements OnInit{\n  currentRole:any;\n  showMessage: boolean = false;\n  constructor(private formBuilder: FormBuilder,private http : HttpClient,private router :Router,private sharedData : SharedDataService) { }\n  registerForm: FormGroup;\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      role: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      return;\n    }\n    \n    // Submit the form data\n    console.log(this.registerForm.value);\n    console.log(this.registerForm.value.role);\n    this.allEmployee();\n  }\n\n  public allEmployee(){\n\n    const token =JSON.parse(sessionStorage.getItem('key')).token\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    if(this.registerForm.value.role == \"admin\"){\n    this.http.post<any>('http://localhost:8082/api/admin/new/admin',this.registerForm.value,{headers}).subscribe((data) =>{\n      console.log(data);\n      this.currentRole= this.registerForm.value.role;\n      this.showMessage = true; \n      setTimeout(() => {\n        this.showMessage = false;\n      }, 5000); \n     // sessionStorage.setItem('newAdmin-key',JSON.stringify(data));\n    })\n    }\n    else if(this.registerForm.value.role == \"manager\"){\n      this.http.post<any>('http://localhost:8082/api/admin/new/manager',this.registerForm.value,{headers}).subscribe((data) =>{\n      console.log(data);\n      this.currentRole= this.registerForm.value.role;\n      this.showMessage = true; \n      setTimeout(() => {\n        this.showMessage = false;\n      }, 5000); \n      //sessionStorage.setItem('newManager-key',JSON.stringify(data));\n    })\n    }\n    else{\n      this.http.post<any>('http://localhost:8082/api/admin/new/user',this.registerForm.value,{headers}).subscribe((data) =>{\n        console.log(data);\n        this.currentRole= this.registerForm.value.role;\n        this.showMessage = true; \n        setTimeout(() => {\n          this.showMessage = false;\n        }, 5000); \n    })\n  }\n }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}