{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpHeaders } from '@angular/common/http';\nexport let CreateUserComponent = class CreateUserComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.isCreated = false;\n  }\n  ngOnInit() {\n    this.reactiveForm = new FormGroup({\n      firstName: new FormControl(null, [Validators.required]),\n      lastName: new FormControl(null),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8), Validators.maxLength(12)]),\n      email: new FormControl(null, [Validators.required, Validators.email])\n    });\n  }\n  postMethod() {\n    let body = {\n      \"firstName\": this.reactiveForm.value.firstName,\n      \"lastName\": this.reactiveForm.value.lastName,\n      \"email\": this.reactiveForm.value.email,\n      \"password\": this.reactiveForm.value.password\n    };\n    const sessionData = sessionStorage.getItem('key');\n    if (sessionData) {\n      const token = JSON.parse(sessionData).token;\n      //const token = JSON.parse(sessionStorage.getItem('key')).token;\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      this.http.post('http://localhost:8082/api/manager/new/user', body, {\n        headers,\n        responseType: 'json'\n      }).subscribe(data => {\n        sessionStorage.setItem('new-user-Bymanager', JSON.stringify(data));\n        console.log(data);\n        this.isCreated = true;\n      }, error => {\n        console.error('Error fetching data:', error);\n      });\n    }\n  }\n  OnFormSubmit() {\n    this.postMethod();\n    console.log(this.reactiveForm);\n  }\n};\nCreateUserComponent = __decorate([Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})], CreateUserComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","HttpHeaders","CreateUserComponent","constructor","http","router","isCreated","ngOnInit","reactiveForm","firstName","required","lastName","password","minLength","maxLength","email","postMethod","body","value","sessionData","sessionStorage","getItem","token","JSON","parse","headers","post","responseType","subscribe","data","setItem","stringify","console","log","error","OnFormSubmit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\create-user\\create-user.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit{\n  \n  reactiveForm : FormGroup;\n  isCreated:boolean = false;\n  \n constructor(private http: HttpClient,private router : Router){\n\n }\n ngOnInit(): void {\n     \n     this.reactiveForm = new FormGroup({\n      firstName : new FormControl(null,[Validators.required]),\n      lastName: new FormControl(null),\n      password: new FormControl(null,[Validators.required ,Validators.minLength(8),Validators.maxLength(12)]),\n      email:new FormControl(null,[Validators.required,Validators.email])\n     })\n\n }\n\n\n  \n public postMethod(){\n  let body = {\n     \"firstName\": this.reactiveForm.value.firstName,\n    \"lastName\": this.reactiveForm.value.lastName,\n    \"email\": this.reactiveForm.value.email,\n    \"password\": this.reactiveForm.value.password\n  };\n\n\n  const sessionData = sessionStorage.getItem('key');\n    if (sessionData)\n     {\n      const token = JSON.parse(sessionData).token;\n\n  //const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n    'Authorization': `Bearer ${token}`\n     });\n\n    this.http.post('http://localhost:8082/api/manager/new/user', body,{ headers, responseType: 'json' }).subscribe(\n      (data: any) => {\n      sessionStorage.setItem('new-user-Bymanager',JSON.stringify(data));\n       console.log(data);\n       this.isCreated = true;\n      },\n      (error) => {\n        console.error('Error fetching data:', error);\n      }\n    );\n  }\n\n }\n\nOnFormSubmit(){\n  this.postMethod();\n  console.log(this.reactiveForm);\n }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AAChD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAAqBC,WAAW,QAAO,sBAAsB;AAOtD,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAK/BC,YAAoBC,IAAgB,EAASC,MAAe;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAFlD,KAAAC,SAAS,GAAW,KAAK;EAI1B;EACAC,QAAQA,CAAA;IAEJ,IAAI,CAACC,YAAY,GAAG,IAAIT,SAAS,CAAC;MACjCU,SAAS,EAAG,IAAIX,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACU,QAAQ,CAAC,CAAC;MACvDC,QAAQ,EAAE,IAAIb,WAAW,CAAC,IAAI,CAAC;MAC/Bc,QAAQ,EAAE,IAAId,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,EAACb,UAAU,CAACc,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACvGC,KAAK,EAAC,IAAIjB,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACU,QAAQ,EAACV,UAAU,CAACe,KAAK,CAAC;KACjE,CAAC;EAEN;EAIOC,UAAUA,CAAA;IAChB,IAAIC,IAAI,GAAG;MACR,WAAW,EAAE,IAAI,CAACT,YAAY,CAACU,KAAK,CAACT,SAAS;MAC/C,UAAU,EAAE,IAAI,CAACD,YAAY,CAACU,KAAK,CAACP,QAAQ;MAC5C,OAAO,EAAE,IAAI,CAACH,YAAY,CAACU,KAAK,CAACH,KAAK;MACtC,UAAU,EAAE,IAAI,CAACP,YAAY,CAACU,KAAK,CAACN;KACrC;IAGD,MAAMO,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC;IAC/C,IAAIF,WAAW,EACd;MACC,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,CAAC,CAACG,KAAK;MAE/C;MACE,MAAMG,OAAO,GAAG,IAAIxB,WAAW,CAAC;QAChC,eAAe,EAAE,UAAUqB,KAAK;OAC9B,CAAC;MAEH,IAAI,CAAClB,IAAI,CAACsB,IAAI,CAAC,4CAA4C,EAAET,IAAI,EAAC;QAAEQ,OAAO;QAAEE,YAAY,EAAE;MAAM,CAAE,CAAC,CAACC,SAAS,CAC3GC,IAAS,IAAI;QACdT,cAAc,CAACU,OAAO,CAAC,oBAAoB,EAACP,IAAI,CAACQ,SAAS,CAACF,IAAI,CAAC,CAAC;QAChEG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QACjB,IAAI,CAACvB,SAAS,GAAG,IAAI;MACtB,CAAC,EACA4B,KAAK,IAAI;QACRF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CACF;;EAGJ;EAEDC,YAAYA,CAAA;IACV,IAAI,CAACnB,UAAU,EAAE;IACjBgB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,YAAY,CAAC;EAC/B;CACA;AA1DYN,mBAAmB,GAAAkC,UAAA,EAL/BvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWrC,mBAAmB,CA0D/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}