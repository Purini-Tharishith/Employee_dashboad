{"ast":null,"code":"import { Chart } from 'chart.js';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DefaultDashboardComponent {\n  constructor(http) {\n    this.http = http;\n    this.chartLabels = [];\n    this.chartData = [];\n  }\n  ngOnInit() {\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    this.http.get('http://localhost:8083/api/project/details', {\n      headers,\n      responseType: 'json'\n    }).subscribe(response => {\n      console.log(response);\n      sessionStorage.setItem('projectkey', JSON.stringify(response));\n      this.processProjectData(response);\n    }, error => {\n      console.error('Error fetching project details:', error);\n    });\n  }\n  processProjectData(response) {\n    const projectCounts = {\n      COMPLETED: 0,\n      IN_PROGRESS: 0,\n      ON_HOLD: 0\n    };\n    response.forEach(project => {\n      if (project.status in projectCounts) {\n        projectCounts[project.status]++;\n      }\n    });\n    this.chartLabels = Object.keys(projectCounts);\n    this.chartData = Object.values(projectCounts);\n    setTimeout(() => {\n      this.renderPieChart();\n      this.renderTaskPieChart();\n    });\n  }\n  renderPieChart() {\n    const ctx = document.getElementById('pieChart');\n    const pieChart = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: this.chartLabels,\n        datasets: [{\n          label: 'Project Status',\n          data: this.chartData,\n          backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)' // ON_HOLD\n          ],\n\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n  }\n  renderTaskPieChart() {\n    const projectData = JSON.parse(sessionStorage.getItem('projectkey'));\n    const taskCounts = {\n      COMPLETED: 0,\n      IN_PROGRESS: 0,\n      ON_HOLD: 0\n    };\n    projectData.forEach(project => {\n      project.tasks.forEach(task => {\n        if (task.status in taskCounts) {\n          taskCounts[task.status]++;\n        }\n      });\n    });\n    const chartLabels = Object.keys(taskCounts);\n    const chartData = Object.values(taskCounts);\n    const ctx = document.getElementById('taskpieChart');\n    const pieChart = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: chartLabels,\n        datasets: [{\n          label: 'Task Status',\n          data: chartData,\n          backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)' // ON_HOLD\n          ],\n\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n  }\n  static #_ = this.ɵfac = function DefaultDashboardComponent_Factory(t) {\n    return new (t || DefaultDashboardComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DefaultDashboardComponent,\n    selectors: [[\"app-default-dashboard\"]],\n    decls: 3,\n    vars: 0,\n    consts: [[\"id\", \"pieChart\"], [\"id\", \"taskpieChart\"]],\n    template: function DefaultDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"canvas\", 0)(2, \"canvas\", 1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"div[_ngcontent-%COMP%]{\\n    margin: 50px;\\n    height :400px;\\n    width :600px;\\n    display: flex;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9tYW5hZ2VyL2RlZmF1bHQtZGFzaGJvYXJkL2RlZmF1bHQtZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLFlBQVk7SUFDWixhQUFhO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiZGl2e1xyXG4gICAgbWFyZ2luOiA1MHB4O1xyXG4gICAgaGVpZ2h0IDo0MDBweDtcclxuICAgIHdpZHRoIDo2MDBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Chart","HttpHeaders","DefaultDashboardComponent","constructor","http","chartLabels","chartData","ngOnInit","token","JSON","parse","sessionStorage","getItem","headers","get","responseType","subscribe","response","console","log","setItem","stringify","processProjectData","error","projectCounts","COMPLETED","IN_PROGRESS","ON_HOLD","forEach","project","status","Object","keys","values","setTimeout","renderPieChart","renderTaskPieChart","ctx","document","getElementById","pieChart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","projectData","taskCounts","tasks","task","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","DefaultDashboardComponent_Template","rf","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\default-dashboard\\default-dashboard.component.ts","C:\\Users\\Purini Tharishith\\Desktop\\project3\\Page\\src\\app\\modules\\manager\\default-dashboard\\default-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-default-dashboard',\n  templateUrl: './default-dashboard.component.html',\n  styleUrls: ['./default-dashboard.component.css']\n})\nexport class DefaultDashboardComponent implements OnInit {\n  chartLabels = [];\n  chartData = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    const token = JSON.parse(sessionStorage.getItem('key')).token;\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    this.http.get<any[]>('http://localhost:8083/api/project/details', { headers, responseType: 'json' }).subscribe(\n      (response) => {\n        console.log(response);\n        sessionStorage.setItem('projectkey', JSON.stringify(response));\n        this.processProjectData(response);\n      },\n      (error) => {\n        console.error('Error fetching project details:', error);\n      }\n    );\n  }\n\n  processProjectData(response: any[]): void {\n    const projectCounts = {\n      COMPLETED: 0,\n      IN_PROGRESS: 0,\n      ON_HOLD: 0\n    };\n\n    response.forEach(project => {\n      if (project.status in projectCounts) {\n        projectCounts[project.status]++;\n      }\n    });\n\n    this.chartLabels = Object.keys(projectCounts);\n    this.chartData = Object.values(projectCounts);\n\n    setTimeout(() => {\n      this.renderPieChart();\n      this.renderTaskPieChart();\n    });\n  }\n\n  renderPieChart(): void {\n    const ctx = document.getElementById('pieChart') as HTMLCanvasElement;\n    const pieChart = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: this.chartLabels,\n        datasets: [{\n          label: 'Project Status',\n          data: this.chartData,\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.5)', // COMPLETED\n            'rgba(54, 162, 235, 0.5)', // IN_PROGRESS\n            'rgba(255, 206, 86, 0.5)', // ON_HOLD\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n  }\n\n  renderTaskPieChart(): void {\n    const projectData = JSON.parse(sessionStorage.getItem('projectkey'));\n    const taskCounts = {\n      COMPLETED: 0,\n      IN_PROGRESS: 0,\n      ON_HOLD: 0\n    };\n\n    projectData.forEach(project => {\n      project.tasks.forEach(task => {\n        if (task.status in taskCounts) {\n          taskCounts[task.status]++;\n        }\n      });\n    });\n\n    const chartLabels = Object.keys(taskCounts);\n    const chartData = Object.values(taskCounts);\n\n    const ctx = document.getElementById('taskpieChart') as HTMLCanvasElement;\n    const pieChart = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: chartLabels,\n        datasets: [{\n          label: 'Task Status',\n          data: chartData,\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.5)', // COMPLETED\n            'rgba(54, 162, 235, 0.5)', // IN_PROGRESS\n            'rgba(255, 206, 86, 0.5)', // ON_HOLD\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n  }\n}\n","<div>\n<canvas id=\"pieChart\" ></canvas>\n<canvas id=\"taskpieChart\"></canvas>\n</div>\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}